{
  "Symbols": [
    {
      "Path": "Kernel",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "Kernel",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 19322,
      "DefEnd": 19642,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Kernel"
      }
    },
    {
      "Path": "Kernel/$classmethods/URI",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "URI",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 19392,
      "DefEnd": 19615,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "URI(uri)",
        "Module": "Kernel",
        "RubyPath": "Kernel.URI"
      }
    },
    {
      "Path": "Kernel/$methods/URI",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "URI",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 19392,
      "DefEnd": 19615,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "URI(uri)",
        "Module": "Kernel",
        "RubyPath": "Kernel#URI"
      }
    },
    {
      "Path": "Kernel@_local_0@/$methods/URI@uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uri",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 19456,
      "DefEnd": 19485,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "Kernel",
        "RubyPath": "Kernel\u003e_local_0\u003e#URI\u003euri"
      }
    },
    {
      "Path": "Socket",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "Socket",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 67671,
      "DefEnd": 67728,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Socket"
      }
    },
    {
      "Path": "Socket/$classmethods/getaddrinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getaddrinfo",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 43042,
      "DefEnd": 43962,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.getaddrinfo"
      }
    },
    {
      "Path": "Socket/$classmethods/gethostbyaddr",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gethostbyaddr",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 38257,
      "DefEnd": 39396,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.gethostbyaddr"
      }
    },
    {
      "Path": "Socket/$classmethods/gethostbyname",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gethostbyname",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 37808,
      "DefEnd": 37994,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.gethostbyname"
      }
    },
    {
      "Path": "Socket/$classmethods/gethostname",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gethostname",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 36122,
      "DefEnd": 36262,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.gethostname"
      }
    },
    {
      "Path": "Socket/$classmethods/getnameinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getnameinfo",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 44834,
      "DefEnd": 48393,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.getnameinfo"
      }
    },
    {
      "Path": "Socket/$classmethods/getservbyname",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getservbyname",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 39819,
      "DefEnd": 40511,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.getservbyname"
      }
    },
    {
      "Path": "Socket/$classmethods/getservbyport",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getservbyport",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 40847,
      "DefEnd": 41544,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.getservbyport"
      }
    },
    {
      "Path": "Socket/$classmethods/ip_address_list",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "ip_address_list",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 55084,
      "DefEnd": 63478,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.ip_address_list"
      }
    },
    {
      "Path": "Socket/$classmethods/pack_sockaddr_in",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "pack_sockaddr_in",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 48867,
      "DefEnd": 49184,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.pack_sockaddr_in"
      }
    },
    {
      "Path": "Socket/$classmethods/pack_sockaddr_un",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "pack_sockaddr_un",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 50765,
      "DefEnd": 51401,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.pack_sockaddr_un"
      }
    },
    {
      "Path": "Socket/$classmethods/pair",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "pair",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 7017,
      "DefEnd": 7717,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "Socket.pair"
      }
    },
    {
      "Path": "Socket/$classmethods/sockaddr_in",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sockaddr_in",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 48867,
      "DefEnd": 49184,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.sockaddr_in"
      }
    },
    {
      "Path": "Socket/$classmethods/sockaddr_un",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sockaddr_un",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 50765,
      "DefEnd": 51401,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.sockaddr_un"
      }
    },
    {
      "Path": "Socket/$classmethods/socketpair",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "socketpair",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 7017,
      "DefEnd": 7717,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "Socket.socketpair"
      }
    },
    {
      "Path": "Socket/$classmethods/unpack_sockaddr_in",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "unpack_sockaddr_in",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 49599,
      "DefEnd": 50500,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.unpack_sockaddr_in"
      }
    },
    {
      "Path": "Socket/$classmethods/unpack_sockaddr_un",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "unpack_sockaddr_un",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 51684,
      "DefEnd": 52529,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket.unpack_sockaddr_un"
      }
    },
    {
      "Path": "Socket/$methods/accept",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "accept",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 31493,
      "DefEnd": 31813,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#accept"
      }
    },
    {
      "Path": "Socket/$methods/accept_nonblock",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "accept_nonblock",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 33552,
      "DefEnd": 33888,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#accept_nonblock"
      }
    },
    {
      "Path": "Socket/$methods/bind",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "bind",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 19666,
      "DefEnd": 20002,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#bind"
      }
    },
    {
      "Path": "Socket/$methods/connect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "connect",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 13397,
      "DefEnd": 13828,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#connect"
      }
    },
    {
      "Path": "Socket/$methods/connect_nonblock",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "connect_nonblock",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 15220,
      "DefEnd": 15780,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#connect_nonblock"
      }
    },
    {
      "Path": "Socket/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 3088,
      "DefEnd": 3533,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#initialize"
      }
    },
    {
      "Path": "Socket/$methods/listen",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "listen",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 23151,
      "DefEnd": 23386,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "Socket#listen"
      }
    },
    {
      "Path": "Socket/$methods/recvfrom",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "recvfrom",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 28715,
      "DefEnd": 28841,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#recvfrom"
      }
    },
    {
      "Path": "Socket/$methods/recvfrom_nonblock",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "recvfrom_nonblock",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 30970,
      "DefEnd": 31114,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#recvfrom_nonblock"
      }
    },
    {
      "Path": "Socket/$methods/sysaccept",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sysaccept",
      "Callable": false,
      "File": "ext/socket/socket.c",
      "DefStart": 35138,
      "DefEnd": 35452,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Socket#sysaccept"
      }
    },
    {
      "Path": "String",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "String",
      "Callable": false,
      "File": "string.c",
      "DefStart": 212668,
      "DefEnd": 212721,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "",
        "RubyPath": "String"
      }
    },
    {
      "Path": "String/$classmethods/try_convert",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "try_convert",
      "Callable": false,
      "File": "string.c",
      "DefStart": 37932,
      "DefEnd": 38032,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String.try_convert"
      }
    },
    {
      "Path": "String/$methods/%",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "%",
      "Callable": false,
      "File": "string.c",
      "DefStart": 32853,
      "DefEnd": 33126,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#%"
      }
    },
    {
      "Path": "String/$methods/*",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "*",
      "Callable": false,
      "File": "string.c",
      "DefStart": 31479,
      "DefEnd": 32232,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#*"
      }
    },
    {
      "Path": "String/$methods/+",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "+",
      "Callable": false,
      "File": "string.c",
      "DefStart": 30596,
      "DefEnd": 31221,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#+"
      }
    },
    {
      "Path": "String/$methods/==",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "==",
      "Callable": false,
      "File": "string.c",
      "DefStart": 57886,
      "DefEnd": 58148,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#=="
      }
    },
    {
      "Path": "String/$methods/===",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "===",
      "Callable": false,
      "File": "string.c",
      "DefStart": 57886,
      "DefEnd": 58148,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#==="
      }
    },
    {
      "Path": "String/$methods/=~",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "=~",
      "Callable": false,
      "File": "string.c",
      "DefStart": 69294,
      "DefEnd": 69626,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#=~"
      }
    },
    {
      "Path": "String/$methods/[]",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "[]",
      "Callable": false,
      "File": "string.c",
      "DefStart": 87117,
      "DefEnd": 87435,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#[]"
      }
    },
    {
      "Path": "String/$methods/[]=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "[]=",
      "Callable": false,
      "File": "string.c",
      "DefStart": 93269,
      "DefEnd": 93636,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#[]="
      }
    },
    {
      "Path": "String/$methods/\u003c=@",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "\u003c=\u003e",
      "Callable": false,
      "File": "string.c",
      "DefStart": 59312,
      "DefEnd": 59689,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#\u003c=\u003e"
      }
    },
    {
      "Path": "String/$methods/\u003c\u003c",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "\u003c\u003c",
      "Callable": false,
      "File": "string.c",
      "DefStart": 53047,
      "DefEnd": 54694,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#\u003c\u003c"
      }
    },
    {
      "Path": "String/$methods/ascii_only?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "ascii_only?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 193423,
      "DefEnd": 193569,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#ascii_only?"
      }
    },
    {
      "Path": "String/$methods/b",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "b",
      "Callable": false,
      "File": "string.c",
      "DefStart": 192477,
      "DefEnd": 192676,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#b"
      }
    },
    {
      "Path": "String/$methods/bytes",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "bytes",
      "Callable": false,
      "File": "string.c",
      "DefStart": 163475,
      "DefEnd": 163559,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#bytes"
      }
    },
    {
      "Path": "String/$methods/bytesize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "bytesize",
      "Callable": false,
      "File": "string.c",
      "DefStart": 29938,
      "DefEnd": 30021,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#bytesize"
      }
    },
    {
      "Path": "String/$methods/byteslice",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "byteslice",
      "Callable": false,
      "File": "string.c",
      "DefStart": 113302,
      "DefEnd": 113537,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#byteslice"
      }
    },
    {
      "Path": "String/$methods/capitalize!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "capitalize!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 128875,
      "DefEnd": 129620,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#capitalize!"
      }
    },
    {
      "Path": "String/$methods/capitalize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "capitalize",
      "Callable": false,
      "File": "string.c",
      "DefStart": 129987,
      "DefEnd": 130109,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#capitalize"
      }
    },
    {
      "Path": "String/$methods/casecmp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "casecmp",
      "Callable": false,
      "File": "string.c",
      "DefStart": 60000,
      "DefEnd": 61652,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#casecmp"
      }
    },
    {
      "Path": "String/$methods/center",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "center",
      "Callable": false,
      "File": "string.c",
      "DefStart": 187771,
      "DefEnd": 187885,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#center"
      }
    },
    {
      "Path": "String/$methods/chars",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chars",
      "Callable": false,
      "File": "string.c",
      "DefStart": 165756,
      "DefEnd": 165840,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chars"
      }
    },
    {
      "Path": "String/$methods/chomp!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chomp!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 169962,
      "DefEnd": 172190,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chomp!"
      }
    },
    {
      "Path": "String/$methods/chomp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chomp",
      "Callable": false,
      "File": "string.c",
      "DefStart": 172941,
      "DefEnd": 173088,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chomp"
      }
    },
    {
      "Path": "String/$methods/chop!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chop!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 168703,
      "DefEnd": 169022,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chop!"
      }
    },
    {
      "Path": "String/$methods/chop",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chop",
      "Callable": false,
      "File": "string.c",
      "DefStart": 169638,
      "DefEnd": 169733,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chop"
      }
    },
    {
      "Path": "String/$methods/chr",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "chr",
      "Callable": false,
      "File": "string.c",
      "DefStart": 109469,
      "DefEnd": 109545,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#chr"
      }
    },
    {
      "Path": "String/$methods/clear",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "clear",
      "Callable": false,
      "File": "string.c",
      "DefStart": 108989,
      "DefEnd": 109298,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#clear"
      }
    },
    {
      "Path": "String/$methods/codepoints",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "codepoints",
      "Callable": false,
      "File": "string.c",
      "DefStart": 167901,
      "DefEnd": 167995,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#codepoints"
      }
    },
    {
      "Path": "String/$methods/concat",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "concat",
      "Callable": false,
      "File": "string.c",
      "DefStart": 53047,
      "DefEnd": 54694,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#concat"
      }
    },
    {
      "Path": "String/$methods/count",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "count",
      "Callable": false,
      "File": "string.c",
      "DefStart": 148492,
      "DefEnd": 149777,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#count"
      }
    },
    {
      "Path": "String/$methods/crypt",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "crypt",
      "Callable": false,
      "File": "string.c",
      "DefStart": 180789,
      "DefEnd": 181635,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#crypt"
      }
    },
    {
      "Path": "String/$methods/delete!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "delete!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 142119,
      "DefEnd": 143433,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#delete!"
      }
    },
    {
      "Path": "String/$methods/delete",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "delete",
      "Callable": false,
      "File": "string.c",
      "DefStart": 143891,
      "DefEnd": 144040,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#delete"
      }
    },
    {
      "Path": "String/$methods/downcase!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "downcase!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 126932,
      "DefEnd": 127993,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#downcase!"
      }
    },
    {
      "Path": "String/$methods/downcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "downcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 128351,
      "DefEnd": 128469,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#downcase"
      }
    },
    {
      "Path": "String/$methods/dump",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "dump",
      "Callable": false,
      "File": "string.c",
      "DefStart": 122114,
      "DefEnd": 124766,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#dump"
      }
    },
    {
      "Path": "String/$methods/each_byte",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "each_byte",
      "Callable": false,
      "File": "string.c",
      "DefStart": 163120,
      "DefEnd": 163208,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#each_byte"
      }
    },
    {
      "Path": "String/$methods/each_char",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "each_char",
      "Callable": false,
      "File": "string.c",
      "DefStart": 165396,
      "DefEnd": 165484,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#each_char"
      }
    },
    {
      "Path": "String/$methods/each_codepoint",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "each_codepoint",
      "Callable": false,
      "File": "string.c",
      "DefStart": 167472,
      "DefEnd": 167570,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#each_codepoint"
      }
    },
    {
      "Path": "String/$methods/each_line",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "each_line",
      "Callable": false,
      "File": "string.c",
      "DefStart": 161308,
      "DefEnd": 161431,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#each_line"
      }
    },
    {
      "Path": "String/$methods/empty?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "empty?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 30254,
      "DefEnd": 30360,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#empty?"
      }
    },
    {
      "Path": "String/$methods/encoding",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "encoding",
      "Callable": false,
      "File": "",
      "DefStart": 219577,
      "DefEnd": 219639,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "String#encoding"
      }
    },
    {
      "Path": "String/$methods/end_with?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "end_with?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 191340,
      "DefEnd": 191862,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#end_with?"
      }
    },
    {
      "Path": "String/$methods/eql?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "eql?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 58280,
      "DefEnd": 58451,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#eql?"
      }
    },
    {
      "Path": "String/$methods/force_encoding",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "force_encoding",
      "Callable": false,
      "File": "string.c",
      "DefStart": 192191,
      "DefEnd": 192371,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#force_encoding"
      }
    },
    {
      "Path": "String/$methods/freeze",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "freeze",
      "Callable": false,
      "File": "",
      "DefStart": 215056,
      "DefEnd": 215114,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "String#freeze"
      }
    },
    {
      "Path": "String/$methods/getbyte",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getbyte",
      "Callable": false,
      "File": "string.c",
      "DefStart": 109668,
      "DefEnd": 109932,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#getbyte"
      }
    },
    {
      "Path": "String/$methods/gsub!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gsub!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 105971,
      "DefEnd": 106109,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#gsub!"
      }
    },
    {
      "Path": "String/$methods/gsub",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gsub",
      "Callable": false,
      "File": "string.c",
      "DefStart": 108309,
      "DefEnd": 108413,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#gsub"
      }
    },
    {
      "Path": "String/$methods/hash",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hash",
      "Callable": false,
      "File": "string.c",
      "DefStart": 55714,
      "DefEnd": 55822,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#hash"
      }
    },
    {
      "Path": "String/$methods/hex",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hex",
      "Callable": false,
      "File": "string.c",
      "DefStart": 179626,
      "DefEnd": 179708,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#hex"
      }
    },
    {
      "Path": "String/$methods/include?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "include?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 115690,
      "DefEnd": 115865,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#include?"
      }
    },
    {
      "Path": "String/$methods/index",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "index",
      "Callable": false,
      "File": "string.c",
      "DefStart": 63550,
      "DefEnd": 64689,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#index"
      }
    },
    {
      "Path": "String/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "string.c",
      "DefStart": 24938,
      "DefEnd": 25126,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#initialize"
      }
    },
    {
      "Path": "String/$methods/initialize_copy",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize_copy",
      "Callable": false,
      "File": "string.c",
      "DefStart": 108671,
      "DefEnd": 108858,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#initialize_copy"
      }
    },
    {
      "Path": "String/$methods/insert",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "insert",
      "Callable": false,
      "File": "string.c",
      "DefStart": 94224,
      "DefEnd": 94473,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#insert"
      }
    },
    {
      "Path": "String/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "string.c",
      "DefStart": 119011,
      "DefEnd": 121782,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#inspect"
      }
    },
    {
      "Path": "String/$methods/intern",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "intern",
      "Callable": false,
      "File": "",
      "DefStart": 216835,
      "DefEnd": 216901,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "String#intern"
      }
    },
    {
      "Path": "String/$methods/length",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "length",
      "Callable": false,
      "File": "string.c",
      "DefStart": 29686,
      "DefEnd": 29765,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#length"
      }
    },
    {
      "Path": "String/$methods/lines",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "lines",
      "Callable": false,
      "File": "string.c",
      "DefStart": 161796,
      "DefEnd": 161915,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#lines"
      }
    },
    {
      "Path": "String/$methods/ljust",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "ljust",
      "Callable": false,
      "File": "string.c",
      "DefStart": 186625,
      "DefEnd": 186738,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#ljust"
      }
    },
    {
      "Path": "String/$methods/lstrip!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "lstrip!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 173406,
      "DefEnd": 174007,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#lstrip!"
      }
    },
    {
      "Path": "String/$methods/lstrip",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "lstrip",
      "Callable": false,
      "File": "string.c",
      "DefStart": 174287,
      "DefEnd": 174401,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#lstrip"
      }
    },
    {
      "Path": "String/$methods/match",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "match",
      "Callable": false,
      "File": "string.c",
      "DefStart": 70518,
      "DefEnd": 70860,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#match"
      }
    },
    {
      "Path": "String/$methods/next!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "next!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 79427,
      "DefEnd": 79539,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#next!"
      }
    },
    {
      "Path": "String/$methods/next",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "next",
      "Callable": false,
      "File": "string.c",
      "DefStart": 76702,
      "DefEnd": 79264,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#next"
      }
    },
    {
      "Path": "String/$methods/oct",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "oct",
      "Callable": false,
      "File": "string.c",
      "DefStart": 180066,
      "DefEnd": 180148,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#oct"
      }
    },
    {
      "Path": "String/$methods/ord",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "ord",
      "Callable": false,
      "File": "string.c",
      "DefStart": 181925,
      "DefEnd": 182074,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#ord"
      }
    },
    {
      "Path": "String/$methods/partition",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "partition",
      "Callable": false,
      "File": "string.c",
      "DefStart": 188421,
      "DefEnd": 189059,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#partition"
      }
    },
    {
      "Path": "String/$methods/prepend",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "prepend",
      "Callable": false,
      "File": "string.c",
      "DefStart": 54924,
      "DefEnd": 55078,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#prepend"
      }
    },
    {
      "Path": "String/$methods/replace",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "replace",
      "Callable": false,
      "File": "string.c",
      "DefStart": 108671,
      "DefEnd": 108858,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#replace"
      }
    },
    {
      "Path": "String/$methods/reverse!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "reverse!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 114979,
      "DefEnd": 115402,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#reverse!"
      }
    },
    {
      "Path": "String/$methods/reverse",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "reverse",
      "Callable": false,
      "File": "string.c",
      "DefStart": 113720,
      "DefEnd": 114889,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#reverse"
      }
    },
    {
      "Path": "String/$methods/rindex",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "rindex",
      "Callable": false,
      "File": "string.c",
      "DefStart": 67347,
      "DefEnd": 68604,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#rindex"
      }
    },
    {
      "Path": "String/$methods/rjust",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "rjust",
      "Callable": false,
      "File": "string.c",
      "DefStart": 187215,
      "DefEnd": 187328,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#rjust"
      }
    },
    {
      "Path": "String/$methods/rpartition",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "rpartition",
      "Callable": false,
      "File": "string.c",
      "DefStart": 189626,
      "DefEnd": 190473,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#rpartition"
      }
    },
    {
      "Path": "String/$methods/rstrip!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "rstrip!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 174721,
      "DefEnd": 175520,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#rstrip!"
      }
    },
    {
      "Path": "String/$methods/rstrip",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "rstrip",
      "Callable": false,
      "File": "string.c",
      "DefStart": 175801,
      "DefEnd": 175915,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#rstrip"
      }
    },
    {
      "Path": "String/$methods/scan",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scan",
      "Callable": false,
      "File": "string.c",
      "DefStart": 178535,
      "DefEnd": 179242,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#scan"
      }
    },
    {
      "Path": "String/$methods/scrub!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scrub!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 203006,
      "DefEnd": 203246,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#scrub!"
      }
    },
    {
      "Path": "String/$methods/scrub",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scrub",
      "Callable": false,
      "File": "string.c",
      "DefStart": 202267,
      "DefEnd": 202485,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#scrub"
      }
    },
    {
      "Path": "String/$methods/setbyte",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "setbyte",
      "Callable": false,
      "File": "string.c",
      "DefStart": 110059,
      "DefEnd": 110447,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#setbyte"
      }
    },
    {
      "Path": "String/$methods/size",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "size",
      "Callable": false,
      "File": "string.c",
      "DefStart": 29686,
      "DefEnd": 29765,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#size"
      }
    },
    {
      "Path": "String/$methods/slice!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "slice!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 95102,
      "DefEnd": 95490,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#slice!"
      }
    },
    {
      "Path": "String/$methods/slice",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "slice",
      "Callable": false,
      "File": "string.c",
      "DefStart": 87117,
      "DefEnd": 87435,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#slice"
      }
    },
    {
      "Path": "String/$methods/split",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split",
      "Callable": false,
      "File": "string.c",
      "DefStart": 153021,
      "DefEnd": 157799,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#split"
      }
    },
    {
      "Path": "String/$methods/squeeze!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "squeeze!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 144229,
      "DefEnd": 145830,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#squeeze!"
      }
    },
    {
      "Path": "String/$methods/squeeze",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "squeeze",
      "Callable": false,
      "File": "string.c",
      "DefStart": 146459,
      "DefEnd": 146610,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#squeeze"
      }
    },
    {
      "Path": "String/$methods/start_with?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "start_with?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 190852,
      "DefEnd": 191196,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#start_with?"
      }
    },
    {
      "Path": "String/$methods/strip!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "strip!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 176097,
      "DefEnd": 176281,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#strip!"
      }
    },
    {
      "Path": "String/$methods/strip",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "strip",
      "Callable": false,
      "File": "string.c",
      "DefStart": 176508,
      "DefEnd": 176620,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#strip"
      }
    },
    {
      "Path": "String/$methods/sub!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sub!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 97161,
      "DefEnd": 100056,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#sub!"
      }
    },
    {
      "Path": "String/$methods/sub",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sub",
      "Callable": false,
      "File": "string.c",
      "DefStart": 102037,
      "DefEnd": 102180,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#sub"
      }
    },
    {
      "Path": "String/$methods/succ!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "succ!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 79427,
      "DefEnd": 79539,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#succ!"
      }
    },
    {
      "Path": "String/$methods/succ",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "succ",
      "Callable": false,
      "File": "string.c",
      "DefStart": 76702,
      "DefEnd": 79264,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "String#succ"
      }
    },
    {
      "Path": "String/$methods/sum",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sum",
      "Callable": false,
      "File": "string.c",
      "DefStart": 182461,
      "DefEnd": 183787,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#sum"
      }
    },
    {
      "Path": "String/$methods/swapcase!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "swapcase!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 130389,
      "DefEnd": 131129,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#swapcase!"
      }
    },
    {
      "Path": "String/$methods/swapcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "swapcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 131496,
      "DefEnd": 131614,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#swapcase"
      }
    },
    {
      "Path": "String/$methods/to_f",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_f",
      "Callable": false,
      "File": "string.c",
      "DefStart": 117455,
      "DefEnd": 117542,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#to_f"
      }
    },
    {
      "Path": "String/$methods/to_i",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_i",
      "Callable": false,
      "File": "string.c",
      "DefStart": 116658,
      "DefEnd": 116973,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#to_i"
      }
    },
    {
      "Path": "String/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "string.c",
      "DefStart": 117649,
      "DefEnd": 117794,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#to_s"
      }
    },
    {
      "Path": "String/$methods/to_str",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_str",
      "Callable": false,
      "File": "string.c",
      "DefStart": 117649,
      "DefEnd": 117794,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#to_str"
      }
    },
    {
      "Path": "String/$methods/to_sym",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_sym",
      "Callable": false,
      "File": "",
      "DefStart": 216922,
      "DefEnd": 216988,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "String#to_sym"
      }
    },
    {
      "Path": "String/$methods/tr!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tr!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 138494,
      "DefEnd": 138600,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#tr!"
      }
    },
    {
      "Path": "String/$methods/tr",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tr",
      "Callable": false,
      "File": "string.c",
      "DefStart": 139966,
      "DefEnd": 140103,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#tr"
      }
    },
    {
      "Path": "String/$methods/tr_s!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tr_s!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 146832,
      "DefEnd": 146940,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#tr_s!"
      }
    },
    {
      "Path": "String/$methods/tr_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tr_s",
      "Callable": false,
      "File": "string.c",
      "DefStart": 147321,
      "DefEnd": 147460,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#tr_s"
      }
    },
    {
      "Path": "String/$methods/upcase!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "upcase!",
      "Callable": false,
      "File": "string.c",
      "DefStart": 125182,
      "DefEnd": 126240,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#upcase!"
      }
    },
    {
      "Path": "String/$methods/upcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "upcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 126594,
      "DefEnd": 126708,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#upcase"
      }
    },
    {
      "Path": "String/$methods/upto",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "upto",
      "Callable": false,
      "File": "string.c",
      "DefStart": 80696,
      "DefEnd": 83188,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#upto"
      }
    },
    {
      "Path": "String/$methods/valid_encoding?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "valid_encoding?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 193008,
      "DefEnd": 193157,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "String#valid_encoding?"
      }
    },
    {
      "Path": "Symbol",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "Symbol",
      "Callable": false,
      "File": "string.c",
      "DefStart": 0,
      "DefEnd": 0,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Symbol"
      }
    },
    {
      "Path": "Symbol/$classmethods/all_symbols",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "all_symbols",
      "Callable": false,
      "File": "",
      "DefStart": 220275,
      "DefEnd": 220353,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Symbol.all_symbols"
      }
    },
    {
      "Path": "Symbol/$classmethods/find",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "find",
      "Callable": false,
      "File": "string.c",
      "DefStart": 204453,
      "DefEnd": 204606,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol.find"
      }
    },
    {
      "Path": "Symbol/$methods/==",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "==",
      "Callable": false,
      "File": "string.c",
      "DefStart": 204773,
      "DefEnd": 204879,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#=="
      }
    },
    {
      "Path": "Symbol/$methods/===",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "===",
      "Callable": false,
      "File": "string.c",
      "DefStart": 204773,
      "DefEnd": 204879,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#==="
      }
    },
    {
      "Path": "Symbol/$methods/=~",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "=~",
      "Callable": false,
      "File": "string.c",
      "DefStart": 209833,
      "DefEnd": 209933,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#=~"
      }
    },
    {
      "Path": "Symbol/$methods/[]",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "[]",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210118,
      "DefEnd": 210233,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#[]"
      }
    },
    {
      "Path": "Symbol/$methods/\u003c=@",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "\u003c=\u003e",
      "Callable": false,
      "File": "string.c",
      "DefStart": 209242,
      "DefEnd": 209400,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#\u003c=\u003e"
      }
    },
    {
      "Path": "Symbol/$methods/capitalize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "capitalize",
      "Callable": false,
      "File": "string.c",
      "DefStart": 211144,
      "DefEnd": 211257,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#capitalize"
      }
    },
    {
      "Path": "Symbol/$methods/casecmp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "casecmp",
      "Callable": false,
      "File": "string.c",
      "DefStart": 209529,
      "DefEnd": 209693,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#casecmp"
      }
    },
    {
      "Path": "Symbol/$methods/downcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "downcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210927,
      "DefEnd": 211036,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#downcase"
      }
    },
    {
      "Path": "Symbol/$methods/empty?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "empty?",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210536,
      "DefEnd": 210616,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#empty?"
      }
    },
    {
      "Path": "Symbol/$methods/encoding",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "encoding",
      "Callable": false,
      "File": "string.c",
      "DefStart": 211597,
      "DefEnd": 211683,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#encoding"
      }
    },
    {
      "Path": "Symbol/$methods/id2name",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "id2name",
      "Callable": false,
      "File": "string.c",
      "DefStart": 207126,
      "DefEnd": 207215,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "Symbol#id2name"
      }
    },
    {
      "Path": "Symbol/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "string.c",
      "DefStart": 206377,
      "DefEnd": 206939,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#inspect"
      }
    },
    {
      "Path": "Symbol/$methods/intern",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "intern",
      "Callable": false,
      "File": "string.c",
      "DefStart": 207471,
      "DefEnd": 207526,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#intern"
      }
    },
    {
      "Path": "Symbol/$methods/length",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "length",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210357,
      "DefEnd": 210439,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#length"
      }
    },
    {
      "Path": "Symbol/$methods/match",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "match",
      "Callable": false,
      "File": "string.c",
      "DefStart": 209833,
      "DefEnd": 209933,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#match"
      }
    },
    {
      "Path": "Symbol/$methods/next",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "next",
      "Callable": false,
      "File": "string.c",
      "DefStart": 208752,
      "DefEnd": 208853,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#next"
      }
    },
    {
      "Path": "Symbol/$methods/size",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "size",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210357,
      "DefEnd": 210439,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#size"
      }
    },
    {
      "Path": "Symbol/$methods/slice",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "slice",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210118,
      "DefEnd": 210233,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#slice"
      }
    },
    {
      "Path": "Symbol/$methods/succ",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "succ",
      "Callable": false,
      "File": "string.c",
      "DefStart": 208752,
      "DefEnd": 208853,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#succ"
      }
    },
    {
      "Path": "Symbol/$methods/swapcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "swapcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 211361,
      "DefEnd": 211470,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#swapcase"
      }
    },
    {
      "Path": "Symbol/$methods/to_proc",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_proc",
      "Callable": false,
      "File": "string.c",
      "DefStart": 207971,
      "DefEnd": 208664,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#to_proc"
      }
    },
    {
      "Path": "Symbol/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "string.c",
      "DefStart": 207126,
      "DefEnd": 207215,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "VALUE",
        "Module": "",
        "RubyPath": "Symbol#to_s"
      }
    },
    {
      "Path": "Symbol/$methods/to_sym",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_sym",
      "Callable": false,
      "File": "string.c",
      "DefStart": 207471,
      "DefEnd": 207526,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#to_sym"
      }
    },
    {
      "Path": "Symbol/$methods/upcase",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "upcase",
      "Callable": false,
      "File": "string.c",
      "DefStart": 210718,
      "DefEnd": 210823,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Symbol#upcase"
      }
    },
    {
      "Path": "Time",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "Time",
      "Callable": false,
      "File": "time.c",
      "DefStart": 129554,
      "DefEnd": 129602,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Time"
      }
    },
    {
      "Path": "Time/$classmethods/at",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "at",
      "Callable": false,
      "File": "time.c",
      "DefStart": 62700,
      "DefEnd": 63399,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.at"
      }
    },
    {
      "Path": "Time/$classmethods/gm",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gm",
      "Callable": false,
      "File": "time.c",
      "DefStart": 79185,
      "DefEnd": 79306,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.gm"
      }
    },
    {
      "Path": "Time/$classmethods/local",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "local",
      "Callable": false,
      "File": "time.c",
      "DefStart": 80357,
      "DefEnd": 80480,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.local"
      }
    },
    {
      "Path": "Time/$classmethods/mktime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "mktime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 80357,
      "DefEnd": 80480,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.mktime"
      }
    },
    {
      "Path": "Time/$classmethods/now",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "now",
      "Callable": false,
      "File": "time.c",
      "DefStart": 61620,
      "DefEnd": 61711,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.now"
      }
    },
    {
      "Path": "Time/$classmethods/utc",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "utc",
      "Callable": false,
      "File": "time.c",
      "DefStart": 79185,
      "DefEnd": 79306,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time.utc"
      }
    },
    {
      "Path": "Time/$methods/+",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "+",
      "Callable": false,
      "File": "time.c",
      "DefStart": 94003,
      "DefEnd": 94229,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#+"
      }
    },
    {
      "Path": "Time/$methods/-",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "-",
      "Callable": false,
      "File": "time.c",
      "DefStart": 94717,
      "DefEnd": 95045,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#-"
      }
    },
    {
      "Path": "Time/$methods/\u003c=@",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "\u003c=\u003e",
      "Callable": false,
      "File": "time.c",
      "DefStart": 84835,
      "DefEnd": 85211,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#\u003c=\u003e"
      }
    },
    {
      "Path": "Time/$methods/_dump",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "_dump",
      "Callable": false,
      "File": "time.c",
      "DefStart": 122237,
      "DefEnd": 122399,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#_dump"
      }
    },
    {
      "Path": "Time/$methods/asctime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "asctime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 92181,
      "DefEnd": 92292,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#asctime"
      }
    },
    {
      "Path": "Time/$methods/ctime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "ctime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 92181,
      "DefEnd": 92292,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#ctime"
      }
    },
    {
      "Path": "Time/$methods/day",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "day",
      "Callable": false,
      "File": "time.c",
      "DefStart": 99902,
      "DefEnd": 100061,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#day"
      }
    },
    {
      "Path": "Time/$methods/dst?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "dst?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 104791,
      "DefEnd": 104960,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#dst?"
      }
    },
    {
      "Path": "Time/$methods/eql?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "eql?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 85378,
      "DefEnd": 85643,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#eql?"
      }
    },
    {
      "Path": "Time/$methods/friday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "friday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 103281,
      "DefEnd": 103337,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#friday?"
      }
    },
    {
      "Path": "Time/$methods/getgm",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getgm",
      "Callable": false,
      "File": "time.c",
      "DefStart": 91614,
      "DefEnd": 91698,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#getgm"
      }
    },
    {
      "Path": "Time/$methods/getlocal",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getlocal",
      "Callable": false,
      "File": "time.c",
      "DefStart": 90793,
      "DefEnd": 91169,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#getlocal"
      }
    },
    {
      "Path": "Time/$methods/getutc",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "getutc",
      "Callable": false,
      "File": "time.c",
      "DefStart": 91614,
      "DefEnd": 91698,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#getutc"
      }
    },
    {
      "Path": "Time/$methods/gmt?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gmt?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 86302,
      "DefEnd": 86460,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#gmt?"
      }
    },
    {
      "Path": "Time/$methods/gmt_offset",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gmt_offset",
      "Callable": false,
      "File": "time.c",
      "DefStart": 106059,
      "DefEnd": 106290,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#gmt_offset"
      }
    },
    {
      "Path": "Time/$methods/gmtime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gmtime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 89064,
      "DefEnd": 89456,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#gmtime"
      }
    },
    {
      "Path": "Time/$methods/gmtoff",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "gmtoff",
      "Callable": false,
      "File": "time.c",
      "DefStart": 106059,
      "DefEnd": 106290,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#gmtoff"
      }
    },
    {
      "Path": "Time/$methods/hash",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hash",
      "Callable": false,
      "File": "time.c",
      "DefStart": 86585,
      "DefEnd": 86721,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#hash"
      }
    },
    {
      "Path": "Time/$methods/hour",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hour",
      "Callable": false,
      "File": "time.c",
      "DefStart": 99498,
      "DefEnd": 99657,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#hour"
      }
    },
    {
      "Path": "Time/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "time.c",
      "DefStart": 56447,
      "DefEnd": 56617,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#initialize"
      }
    },
    {
      "Path": "Time/$methods/initialize_copy",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize_copy",
      "Callable": false,
      "File": "time.c",
      "DefStart": 86736,
      "DefEnd": 87006,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#initialize_copy"
      }
    },
    {
      "Path": "Time/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "time.c",
      "DefStart": 92810,
      "DefEnd": 93102,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#inspect"
      }
    },
    {
      "Path": "Time/$methods/isdst",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "isdst",
      "Callable": false,
      "File": "time.c",
      "DefStart": 104791,
      "DefEnd": 104960,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#isdst"
      }
    },
    {
      "Path": "Time/$methods/localtime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "localtime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 88250,
      "DefEnd": 88584,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#localtime"
      }
    },
    {
      "Path": "Time/$methods/marshal_dump",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "marshal_dump",
      "Callable": false,
      "File": "time.c",
      "DefStart": 119467,
      "DefEnd": 122222,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#marshal_dump"
      }
    },
    {
      "Path": "Time/$methods/marshal_load",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "marshal_load",
      "Callable": false,
      "File": "time.c",
      "DefStart": 122414,
      "DefEnd": 125753,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#marshal_load"
      }
    },
    {
      "Path": "Time/$methods/mday",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "mday",
      "Callable": false,
      "File": "time.c",
      "DefStart": 99902,
      "DefEnd": 100061,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#mday"
      }
    },
    {
      "Path": "Time/$methods/min",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "min",
      "Callable": false,
      "File": "time.c",
      "DefStart": 99153,
      "DefEnd": 99310,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#min"
      }
    },
    {
      "Path": "Time/$methods/mon",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "mon",
      "Callable": false,
      "File": "time.c",
      "DefStart": 100310,
      "DefEnd": 100467,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#mon"
      }
    },
    {
      "Path": "Time/$methods/monday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "monday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 102107,
      "DefEnd": 102163,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#monday?"
      }
    },
    {
      "Path": "Time/$methods/month",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "month",
      "Callable": false,
      "File": "time.c",
      "DefStart": 100310,
      "DefEnd": 100467,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#month"
      }
    },
    {
      "Path": "Time/$methods/nsec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "nsec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 83167,
      "DefEnd": 83367,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#nsec"
      }
    },
    {
      "Path": "Time/$methods/round",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "round",
      "Callable": false,
      "File": "time.c",
      "DefStart": 97649,
      "DefEnd": 98450,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#round"
      }
    },
    {
      "Path": "Time/$methods/saturday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "saturday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 103574,
      "DefEnd": 103632,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#saturday?"
      }
    },
    {
      "Path": "Time/$methods/sec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 98805,
      "DefEnd": 98962,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#sec"
      }
    },
    {
      "Path": "Time/$methods/strftime",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "strftime",
      "Callable": false,
      "File": "time.c",
      "DefStart": 118116,
      "DefEnd": 119452,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#strftime"
      }
    },
    {
      "Path": "Time/$methods/subsec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "subsec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 83882,
      "DefEnd": 84067,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#subsec"
      }
    },
    {
      "Path": "Time/$methods/succ",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "succ",
      "Callable": false,
      "File": "",
      "DefStart": 131318,
      "DefEnd": 131368,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "",
        "Module": "",
        "RubyPath": "Time#succ"
      }
    },
    {
      "Path": "Time/$methods/sunday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "sunday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 101818,
      "DefEnd": 101874,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#sunday?"
      }
    },
    {
      "Path": "Time/$methods/thursday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "thursday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 102990,
      "DefEnd": 103048,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#thursday?"
      }
    },
    {
      "Path": "Time/$methods/to_a",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_a",
      "Callable": false,
      "File": "time.c",
      "DefStart": 106797,
      "DefEnd": 107243,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#to_a"
      }
    },
    {
      "Path": "Time/$methods/to_f",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_f",
      "Callable": false,
      "File": "time.c",
      "DefStart": 81289,
      "DefEnd": 81449,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#to_f"
      }
    },
    {
      "Path": "Time/$methods/to_i",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_i",
      "Callable": false,
      "File": "time.c",
      "DefStart": 80758,
      "DefEnd": 80915,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#to_i"
      }
    },
    {
      "Path": "Time/$methods/to_r",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_r",
      "Callable": false,
      "File": "time.c",
      "DefStart": 81860,
      "DefEnd": 82102,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#to_r"
      }
    },
    {
      "Path": "Time/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "time.c",
      "DefStart": 92810,
      "DefEnd": 93102,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#to_s"
      }
    },
    {
      "Path": "Time/$methods/tuesday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tuesday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 102398,
      "DefEnd": 102455,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#tuesday?"
      }
    },
    {
      "Path": "Time/$methods/tv_nsec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tv_nsec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 83167,
      "DefEnd": 83367,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#tv_nsec"
      }
    },
    {
      "Path": "Time/$methods/tv_sec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tv_sec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 80758,
      "DefEnd": 80915,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#tv_sec"
      }
    },
    {
      "Path": "Time/$methods/tv_usec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "tv_usec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 82382,
      "DefEnd": 82654,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#tv_usec"
      }
    },
    {
      "Path": "Time/$methods/usec",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "usec",
      "Callable": false,
      "File": "time.c",
      "DefStart": 82382,
      "DefEnd": 82654,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#usec"
      }
    },
    {
      "Path": "Time/$methods/utc",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "utc",
      "Callable": false,
      "File": "time.c",
      "DefStart": 89064,
      "DefEnd": 89456,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#utc"
      }
    },
    {
      "Path": "Time/$methods/utc?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "utc?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 86302,
      "DefEnd": 86460,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#utc?"
      }
    },
    {
      "Path": "Time/$methods/utc_offset",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "utc_offset",
      "Callable": false,
      "File": "time.c",
      "DefStart": 106059,
      "DefEnd": 106290,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#utc_offset"
      }
    },
    {
      "Path": "Time/$methods/wday",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "wday",
      "Callable": false,
      "File": "time.c",
      "DefStart": 101257,
      "DefEnd": 101421,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#wday"
      }
    },
    {
      "Path": "Time/$methods/wednesday?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "wednesday?",
      "Callable": false,
      "File": "time.c",
      "DefStart": 102694,
      "DefEnd": 102753,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#wednesday?"
      }
    },
    {
      "Path": "Time/$methods/yday",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "yday",
      "Callable": false,
      "File": "time.c",
      "DefStart": 103835,
      "DefEnd": 103994,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#yday"
      }
    },
    {
      "Path": "Time/$methods/year",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "year",
      "Callable": false,
      "File": "time.c",
      "DefStart": 100663,
      "DefEnd": 100813,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#year"
      }
    },
    {
      "Path": "Time/$methods/zone",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "zone",
      "Callable": false,
      "File": "time.c",
      "DefStart": 105289,
      "DefEnd": 105622,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "static VALUE",
        "Module": "",
        "RubyPath": "Time#zone"
      }
    },
    {
      "Path": "URI",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "URI",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 161,
      "DefEnd": 469,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "",
        "RubyPath": "URI"
      }
    },
    {
      "Path": "URI/$classmethods/decode_www_form",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "decode_www_form",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 11536,
      "DefEnd": 12504,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.decode_www_form(str, enc=Encoding::UTF_8, separator: '\u0026', use__charset_: false, isindex: false)",
        "Module": "URI",
        "RubyPath": "URI.decode_www_form"
      }
    },
    {
      "Path": "URI/$classmethods/decode_www_form_component",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "decode_www_form_component",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 8990,
      "DefEnd": 9215,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.decode_www_form_component(str, enc=Encoding::UTF_8)",
        "Module": "URI",
        "RubyPath": "URI.decode_www_form_component"
      }
    },
    {
      "Path": "URI/$classmethods/encode_www_form",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "encode_www_form",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 10370,
      "DefEnd": 10899,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.encode_www_form(enum, enc=nil)",
        "Module": "URI",
        "RubyPath": "URI.encode_www_form"
      }
    },
    {
      "Path": "URI/$classmethods/encode_www_form_component",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "encode_www_form_component",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 8391,
      "DefEnd": 8844,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.encode_www_form_component(str, enc=nil)",
        "Module": "URI",
        "RubyPath": "URI.encode_www_form_component"
      }
    },
    {
      "Path": "URI/$classmethods/extract",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "extract",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 6246,
      "DefEnd": 6418,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.extract(str, schemes = nil, \u0026block)",
        "Module": "URI",
        "RubyPath": "URI.extract"
      }
    },
    {
      "Path": "URI/$classmethods/get_encoding",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "get_encoding",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 19195,
      "DefEnd": 19303,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.get_encoding(label)",
        "Module": "URI",
        "RubyPath": "URI.get_encoding"
      }
    },
    {
      "Path": "URI/$classmethods/join",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "join",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 5601,
      "DefEnd": 5656,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.join(*str)",
        "Module": "URI",
        "RubyPath": "URI.join"
      }
    },
    {
      "Path": "URI/$classmethods/parse",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parse",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 4732,
      "DefEnd": 4787,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.parse(uri)",
        "Module": "URI",
        "RubyPath": "URI.parse"
      }
    },
    {
      "Path": "URI/$classmethods/regexp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "regexp",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 7191,
      "DefEnd": 7339,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.regexp(schemes = nil)",
        "Module": "URI",
        "RubyPath": "URI.regexp"
      }
    },
    {
      "Path": "URI/$classmethods/scheme_list",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scheme_list",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3264,
      "DefEnd": 3304,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.scheme_list",
        "Module": "URI",
        "RubyPath": "URI.scheme_list"
      }
    },
    {
      "Path": "URI/$classmethods/split",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 4114,
      "DefEnd": 4169,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.split(uri)",
        "Module": "URI",
        "RubyPath": "URI.split"
      }
    },
    {
      "Path": "URI/@@schemes",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@@schemes",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3205,
      "DefEnd": 3219,
      "Exported": false,
      "Data": {
        "RubyKind": "classvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::@@schemes"
      }
    },
    {
      "Path": "URI/BadURIError",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "BadURIError",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3570,
      "DefEnd": 3600,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::BadURIError"
      }
    },
    {
      "Path": "URI/DEFAULT_PARSER",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PARSER",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 398,
      "DefEnd": 425,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::DEFAULT_PARSER"
      }
    },
    {
      "Path": "URI/Error",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "Error",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3355,
      "DefEnd": 3387,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Error"
      }
    },
    {
      "Path": "URI/Escape",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "Escape",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 1633,
      "DefEnd": 3151,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Escape"
      }
    },
    {
      "Path": "URI/Escape/$methods/decode",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "decode",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3124,
      "DefEnd": 3145,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "unescape(*arg)",
        "Module": "URI::Escape",
        "RubyPath": "URI::Escape#decode"
      }
    },
    {
      "Path": "URI/Escape/$methods/encode",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "encode",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 2567,
      "DefEnd": 2586,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "escape(*arg)",
        "Module": "URI::Escape",
        "RubyPath": "URI::Escape#encode"
      }
    },
    {
      "Path": "URI/Escape/$methods/escape",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "escape",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 2430,
      "DefEnd": 2562,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "escape(*arg)",
        "Module": "URI::Escape",
        "RubyPath": "URI::Escape#escape"
      }
    },
    {
      "Path": "URI/Escape/$methods/unescape",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "unescape",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 2981,
      "DefEnd": 3119,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "unescape(*arg)",
        "Module": "URI::Escape",
        "RubyPath": "URI::Escape#unescape"
      }
    },
    {
      "Path": "URI/FTP",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "FTP",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 560,
      "DefEnd": 7161,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP"
      }
    },
    {
      "Path": "URI/FTP/$classmethods/build",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 2877,
      "DefEnd": 3481,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build(args)",
        "Module": "URI",
        "RubyPath": "URI::FTP.build"
      }
    },
    {
      "Path": "URI/FTP/$classmethods/new2",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "new2",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 1173,
      "DefEnd": 1870,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.new2(user, password, host, port, path,",
        "Module": "URI",
        "RubyPath": "URI::FTP.new2"
      }
    },
    {
      "Path": "URI/FTP/$methods/check_typecode",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 4815,
      "DefEnd": 5016,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_typecode(v)",
        "Module": "URI",
        "RubyPath": "URI::FTP#check_typecode"
      }
    },
    {
      "Path": "URI/FTP/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 3903,
      "DefEnd": 4644,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(scheme,",
        "Module": "URI",
        "RubyPath": "URI::FTP#initialize"
      }
    },
    {
      "Path": "URI/FTP/$methods/merge",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "merge",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 5888,
      "DefEnd": 6031,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge(oth) # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::FTP#merge"
      }
    },
    {
      "Path": "URI/FTP/$methods/path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "path",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 6652,
      "DefEnd": 6717,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "path",
        "Module": "URI",
        "RubyPath": "URI::FTP#path"
      }
    },
    {
      "Path": "URI/FTP/$methods/set_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_path",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 6773,
      "DefEnd": 6835,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_path(v)",
        "Module": "URI",
        "RubyPath": "URI::FTP#set_path"
      }
    },
    {
      "Path": "URI/FTP/$methods/set_typecode",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 5138,
      "DefEnd": 5185,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_typecode(v)",
        "Module": "URI",
        "RubyPath": "URI::FTP#set_typecode"
      }
    },
    {
      "Path": "URI/FTP/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 6919,
      "DefEnd": 7155,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to_s",
        "Module": "URI",
        "RubyPath": "URI::FTP#to_s"
      }
    },
    {
      "Path": "URI/FTP/$methods/typecode",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 4710,
      "DefEnd": 4731,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "typecode",
        "Module": "URI",
        "RubyPath": "URI::FTP#typecode"
      }
    },
    {
      "Path": "URI/FTP/$methods/typecode=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "typecode=",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 5776,
      "DefEnd": 5882,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "typecode=(typecode)",
        "Module": "URI",
        "RubyPath": "URI::FTP#typecode="
      }
    },
    {
      "Path": "URI/FTP/@path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@path",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 7102,
      "DefEnd": 7119,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::@path"
      }
    },
    {
      "Path": "URI/FTP/@typecode",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 5164,
      "DefEnd": 5177,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::@typecode"
      }
    },
    {
      "Path": "URI/FTP/COMPONENT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "COMPONENT",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 715,
      "DefEnd": 810,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::COMPONENT"
      }
    },
    {
      "Path": "URI/FTP/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 624,
      "DefEnd": 641,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/FTP/TYPECODE",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "TYPECODE",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 1057,
      "DefEnd": 1090,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::TYPECODE"
      }
    },
    {
      "Path": "URI/FTP/TYPECODE_PREFIX",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "TYPECODE_PREFIX",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 1134,
      "DefEnd": 1167,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP::TYPECODE_PREFIX"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/initialize@path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "path",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 4182,
      "DefEnd": 4207,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#initialize\u003epath"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/initialize@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 4381,
      "DefEnd": 4415,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#initialize\u003etmp"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/initialize@typecode",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 4424,
      "DefEnd": 4472,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#initialize\u003etypecode"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/merge@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 5919,
      "DefEnd": 5935,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#merge\u003etmp"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/to_s@save_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "save_path",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 6977,
      "DefEnd": 6994,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#to_s\u003esave_path"
      }
    },
    {
      "Path": "URI/FTP@_local_0@/$methods/to_s@str",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "str",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 7063,
      "DefEnd": 7074,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003e#to_s\u003estr"
      }
    },
    {
      "Path": "URI/FTP@_local_0@build@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 3224,
      "DefEnd": 3268,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003ebuild\u003etmp"
      }
    },
    {
      "Path": "URI/FTP@_local_0@new2@typecode",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "typecode",
      "Callable": false,
      "File": "lib/uri/ftp.rb",
      "DefStart": 1470,
      "DefEnd": 1484,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::FTP\u003e_local_0\u003enew2\u003etypecode"
      }
    },
    {
      "Path": "URI/Generic",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "Generic",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 339,
      "DefEnd": 36625,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic"
      }
    },
    {
      "Path": "URI/Generic/$classmethods/build",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 2399,
      "DefEnd": 3012,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build(args)",
        "Module": "URI",
        "RubyPath": "URI::Generic.build"
      }
    },
    {
      "Path": "URI/Generic/$classmethods/build2",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build2",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 1388,
      "DefEnd": 1999,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build2(args)",
        "Module": "URI",
        "RubyPath": "URI::Generic.build2"
      }
    },
    {
      "Path": "URI/Generic/$classmethods/component",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "component",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 920,
      "DefEnd": 968,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.component",
        "Module": "URI",
        "RubyPath": "URI::Generic.component"
      }
    },
    {
      "Path": "URI/Generic/$classmethods/default_port",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "default_port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 494,
      "DefEnd": 548,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.default_port",
        "Module": "URI",
        "RubyPath": "URI::Generic.default_port"
      }
    },
    {
      "Path": "URI/Generic/$classmethods/use_registry",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "use_registry",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 1010,
      "DefEnd": 1074,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.use_registry # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::Generic.use_registry"
      }
    },
    {
      "Path": "URI/Generic/$methods/+",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "+",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 26503,
      "DefEnd": 26516,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#+"
      }
    },
    {
      "Path": "URI/Generic/$methods/-",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "-",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 30199,
      "DefEnd": 30217,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "route_from(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#-"
      }
    },
    {
      "Path": "URI/Generic/$methods/==",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "==",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 31987,
      "DefEnd": 32142,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "==(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#=="
      }
    },
    {
      "Path": "URI/Generic/$methods/absolute",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "absolute",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22622,
      "DefEnd": 22646,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "absolute?",
        "Module": "URI",
        "RubyPath": "URI::Generic#absolute"
      }
    },
    {
      "Path": "URI/Generic/$methods/absolute?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "absolute?",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22531,
      "DefEnd": 22617,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "absolute?",
        "Module": "URI",
        "RubyPath": "URI::Generic#absolute?"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_host",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_host",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13757,
      "DefEnd": 14069,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_host(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_host"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_opaque",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_opaque",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 20343,
      "DefEnd": 20926,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_opaque(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_opaque"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_password",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_password",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 10012,
      "DefEnd": 10456,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_password(v, user = @user)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_password"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 17700,
      "DefEnd": 18573,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_path(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_path"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_port",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 15949,
      "DefEnd": 16292,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_port(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_port"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_registry",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_registry",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 17136,
      "DefEnd": 17227,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_registry(v) # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_registry"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_scheme",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_scheme",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 7741,
      "DefEnd": 7935,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_scheme(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_scheme"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_user",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_user",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 9417,
      "DefEnd": 9751,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_user(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_user"
      }
    },
    {
      "Path": "URI/Generic/$methods/check_userinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_userinfo",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 8954,
      "DefEnd": 9156,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_userinfo(user, password = nil)",
        "Module": "URI",
        "RubyPath": "URI::Generic#check_userinfo"
      }
    },
    {
      "Path": "URI/Generic/$methods/coerce",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "coerce",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 33909,
      "DefEnd": 34056,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "coerce(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#coerce"
      }
    },
    {
      "Path": "URI/Generic/$methods/component",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "component",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 7595,
      "DefEnd": 7643,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "component",
        "Module": "URI",
        "RubyPath": "URI::Generic#component"
      }
    },
    {
      "Path": "URI/Generic/$methods/component_ary",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "component_ary",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 32528,
      "DefEnd": 32615,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "component_ary",
        "Module": "URI",
        "RubyPath": "URI::Generic#component_ary"
      }
    },
    {
      "Path": "URI/Generic/$methods/default_port",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "default_port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 593,
      "DefEnd": 647,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "default_port",
        "Module": "URI",
        "RubyPath": "URI::Generic#default_port"
      }
    },
    {
      "Path": "URI/Generic/$methods/eql?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "eql?",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 32200,
      "DefEnd": 32333,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "eql?(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#eql?"
      }
    },
    {
      "Path": "URI/Generic/$methods/escape_userpass",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "escape_userpass",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13043,
      "DefEnd": 13137,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "escape_userpass(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#escape_userpass"
      }
    },
    {
      "Path": "URI/Generic/$methods/find_proxy",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "find_proxy",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 34650,
      "DefEnd": 36619,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "find_proxy",
        "Module": "URI",
        "RubyPath": "URI::Generic#find_proxy"
      }
    },
    {
      "Path": "URI/Generic/$methods/fragment",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "fragment",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6972,
      "DefEnd": 6993,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "fragment",
        "Module": "URI",
        "RubyPath": "URI::Generic#fragment"
      }
    },
    {
      "Path": "URI/Generic/$methods/fragment=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "fragment=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 21993,
      "DefEnd": 22337,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "fragment=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#fragment="
      }
    },
    {
      "Path": "URI/Generic/$methods/hash",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hash",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 32148,
      "DefEnd": 32194,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "hash",
        "Module": "URI",
        "RubyPath": "URI::Generic#hash"
      }
    },
    {
      "Path": "URI/Generic/$methods/hierarchical?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hierarchical?",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22386,
      "DefEnd": 22474,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "hierarchical?",
        "Module": "URI",
        "RubyPath": "URI::Generic#hierarchical?"
      }
    },
    {
      "Path": "URI/Generic/$methods/host",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "host",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 5958,
      "DefEnd": 5975,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "host",
        "Module": "URI",
        "RubyPath": "URI::Generic#host"
      }
    },
    {
      "Path": "URI/Generic/$methods/host=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "host=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 14704,
      "DefEnd": 14770,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "host=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#host="
      }
    },
    {
      "Path": "URI/Generic/$methods/hostname",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hostname",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 15094,
      "DefEnd": 15169,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "hostname",
        "Module": "URI",
        "RubyPath": "URI::Generic#hostname"
      }
    },
    {
      "Path": "URI/Generic/$methods/hostname=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hostname=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 15624,
      "DefEnd": 15720,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "hostname=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#hostname="
      }
    },
    {
      "Path": "URI/Generic/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 3762,
      "DefEnd": 5087,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(scheme,",
        "Module": "URI",
        "RubyPath": "URI::Generic#initialize"
      }
    },
    {
      "Path": "URI/Generic/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 33390,
      "DefEnd": 33468,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "inspect",
        "Module": "URI",
        "RubyPath": "URI::Generic#inspect"
      }
    },
    {
      "Path": "URI/Generic/$methods/merge!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "merge!",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 24994,
      "DefEnd": 25123,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge!(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#merge!"
      }
    },
    {
      "Path": "URI/Generic/$methods/merge",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "merge",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 25479,
      "DefEnd": 26490,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#merge"
      }
    },
    {
      "Path": "URI/Generic/$methods/merge0",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "merge0",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 26597,
      "DefEnd": 27067,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge0(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#merge0"
      }
    },
    {
      "Path": "URI/Generic/$methods/merge_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "merge_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22994,
      "DefEnd": 24592,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "merge_path(base, rel)",
        "Module": "URI",
        "RubyPath": "URI::Generic#merge_path"
      }
    },
    {
      "Path": "URI/Generic/$methods/normalize!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "normalize!",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 30856,
      "DefEnd": 31120,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "normalize!",
        "Module": "URI",
        "RubyPath": "URI::Generic#normalize!"
      }
    },
    {
      "Path": "URI/Generic/$methods/normalize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "normalize",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 30730,
      "DefEnd": 30798,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "normalize",
        "Module": "URI",
        "RubyPath": "URI::Generic#normalize"
      }
    },
    {
      "Path": "URI/Generic/$methods/opaque",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "opaque",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6809,
      "DefEnd": 6828,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "opaque",
        "Module": "URI",
        "RubyPath": "URI::Generic#opaque"
      }
    },
    {
      "Path": "URI/Generic/$methods/opaque=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "opaque=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 21347,
      "DefEnd": 21419,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "opaque=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#opaque="
      }
    },
    {
      "Path": "URI/Generic/$methods/parser",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parser",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 7116,
      "DefEnd": 7252,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "parser",
        "Module": "URI",
        "RubyPath": "URI::Generic#parser"
      }
    },
    {
      "Path": "URI/Generic/$methods/password",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "password",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13492,
      "DefEnd": 13528,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "password",
        "Module": "URI",
        "RubyPath": "URI::Generic#password"
      }
    },
    {
      "Path": "URI/Generic/$methods/password=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "password=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 11806,
      "DefEnd": 11922,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "password=(password)",
        "Module": "URI",
        "RubyPath": "URI::Generic#password="
      }
    },
    {
      "Path": "URI/Generic/$methods/path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6327,
      "DefEnd": 6344,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "path",
        "Module": "URI",
        "RubyPath": "URI::Generic#path"
      }
    },
    {
      "Path": "URI/Generic/$methods/path=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "path=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 19226,
      "DefEnd": 19292,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "path=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#path="
      }
    },
    {
      "Path": "URI/Generic/$methods/path_query",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "path_query",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 31191,
      "DefEnd": 31295,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "path_query",
        "Module": "URI",
        "RubyPath": "URI::Generic#path_query"
      }
    },
    {
      "Path": "URI/Generic/$methods/port",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6147,
      "DefEnd": 6164,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "port",
        "Module": "URI",
        "RubyPath": "URI::Generic#port"
      }
    },
    {
      "Path": "URI/Generic/$methods/port=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "port=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 17061,
      "DefEnd": 17130,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "port=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#port="
      }
    },
    {
      "Path": "URI/Generic/$methods/query",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "query",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6482,
      "DefEnd": 6500,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "query",
        "Module": "URI",
        "RubyPath": "URI::Generic#query"
      }
    },
    {
      "Path": "URI/Generic/$methods/query=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "query=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 19685,
      "DefEnd": 20101,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "query=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#query="
      }
    },
    {
      "Path": "URI/Generic/$methods/registry",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "registry",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 6170,
      "DefEnd": 6210,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "registry # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::Generic#registry"
      }
    },
    {
      "Path": "URI/Generic/$methods/registry=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "registry=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 17383,
      "DefEnd": 17459,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "registry=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#registry="
      }
    },
    {
      "Path": "URI/Generic/$methods/relative?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "relative?",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22696,
      "DefEnd": 22734,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "relative?",
        "Module": "URI",
        "RubyPath": "URI::Generic#relative?"
      }
    },
    {
      "Path": "URI/Generic/$methods/replace!",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "replace!",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 7297,
      "DefEnd": 7513,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "replace!(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#replace!"
      }
    },
    {
      "Path": "URI/Generic/$methods/route_from",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "route_from",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 29782,
      "DefEnd": 30193,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "route_from(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#route_from"
      }
    },
    {
      "Path": "URI/Generic/$methods/route_from0",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "route_from0",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 28000,
      "DefEnd": 29354,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "route_from0(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#route_from0"
      }
    },
    {
      "Path": "URI/Generic/$methods/route_from_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "route_from_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 27109,
      "DefEnd": 27932,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "route_from_path(src, dst)",
        "Module": "URI",
        "RubyPath": "URI::Generic#route_from_path"
      }
    },
    {
      "Path": "URI/Generic/$methods/route_to",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "route_to",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 30601,
      "DefEnd": 30683,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "route_to(oth)",
        "Module": "URI",
        "RubyPath": "URI::Generic#route_to"
      }
    },
    {
      "Path": "URI/Generic/$methods/scheme",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scheme",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 5210,
      "DefEnd": 5229,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "scheme",
        "Module": "URI",
        "RubyPath": "URI::Generic#scheme"
      }
    },
    {
      "Path": "URI/Generic/$methods/scheme=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scheme=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 8609,
      "DefEnd": 8681,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "scheme=(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#scheme="
      }
    },
    {
      "Path": "URI/Generic/$methods/select",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "select",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 33065,
      "DefEnd": 33341,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "select(*components)",
        "Module": "URI",
        "RubyPath": "URI::Generic#select"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_host",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_host",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 14195,
      "DefEnd": 14234,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_host(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_host"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_opaque",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_opaque",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 21058,
      "DefEnd": 21101,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_opaque(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_opaque"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_password",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_password",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12618,
      "DefEnd": 12683,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_password(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_password"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 18699,
      "DefEnd": 18738,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_path(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_path"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_port",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 16418,
      "DefEnd": 16589,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_port(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_port"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_registry",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_registry",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 17261,
      "DefEnd": 17349,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_registry(v) #:nodoc:",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_registry"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_scheme",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_scheme",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 8067,
      "DefEnd": 8127,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_scheme(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_scheme"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_user",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_user",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12420,
      "DefEnd": 12484,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_user(v)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_user"
      }
    },
    {
      "Path": "URI/Generic/$methods/set_userinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_userinfo",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12078,
      "DefEnd": 12290,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_userinfo(user, password = nil)",
        "Module": "URI",
        "RubyPath": "URI::Generic#set_userinfo"
      }
    },
    {
      "Path": "URI/Generic/$methods/split_path",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22800,
      "DefEnd": 22857,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "split_path(path)",
        "Module": "URI",
        "RubyPath": "URI::Generic#split_path"
      }
    },
    {
      "Path": "URI/Generic/$methods/split_userinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split_userinfo",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12814,
      "DefEnd": 12945,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "split_userinfo(ui)",
        "Module": "URI",
        "RubyPath": "URI::Generic#split_userinfo"
      }
    },
    {
      "Path": "URI/Generic/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 31370,
      "DefEnd": 31945,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to_s",
        "Module": "URI",
        "RubyPath": "URI::Generic#to_s"
      }
    },
    {
      "Path": "URI/Generic/$methods/user",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "user",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13421,
      "DefEnd": 13449,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "user",
        "Module": "URI",
        "RubyPath": "URI::Generic#user"
      }
    },
    {
      "Path": "URI/Generic/$methods/user=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "user=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 11206,
      "DefEnd": 11294,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "user=(user)",
        "Module": "URI",
        "RubyPath": "URI::Generic#user="
      }
    },
    {
      "Path": "URI/Generic/$methods/userinfo",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "userinfo",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13236,
      "DefEnd": 13382,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "userinfo",
        "Module": "URI",
        "RubyPath": "URI::Generic#userinfo"
      }
    },
    {
      "Path": "URI/Generic/$methods/userinfo=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "userinfo=",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 10559,
      "DefEnd": 10729,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "userinfo=(userinfo)",
        "Module": "URI",
        "RubyPath": "URI::Generic#userinfo="
      }
    },
    {
      "Path": "URI/Generic/@@to_s",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@@to_s",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 33347,
      "DefEnd": 33385,
      "Exported": false,
      "Data": {
        "RubyKind": "classvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@@to_s"
      }
    },
    {
      "Path": "URI/Generic/@fragment",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@fragment",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22316,
      "DefEnd": 22329,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@fragment"
      }
    },
    {
      "Path": "URI/Generic/@host",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@host",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 14217,
      "DefEnd": 14226,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@host"
      }
    },
    {
      "Path": "URI/Generic/@opaque",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@opaque",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 21082,
      "DefEnd": 21093,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@opaque"
      }
    },
    {
      "Path": "URI/Generic/@parser",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@parser",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 4187,
      "DefEnd": 4236,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@parser"
      }
    },
    {
      "Path": "URI/Generic/@password",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@password",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12644,
      "DefEnd": 12657,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@password"
      }
    },
    {
      "Path": "URI/Generic/@path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 18721,
      "DefEnd": 18730,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@path"
      }
    },
    {
      "Path": "URI/Generic/@port",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@port",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 16572,
      "DefEnd": 16581,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@port"
      }
    },
    {
      "Path": "URI/Generic/@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@query",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 20083,
      "DefEnd": 20093,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@query"
      }
    },
    {
      "Path": "URI/Generic/@scheme",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@scheme",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 8091,
      "DefEnd": 8119,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@scheme"
      }
    },
    {
      "Path": "URI/Generic/@user",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@user",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 12201,
      "DefEnd": 12217,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::@user"
      }
    },
    {
      "Path": "URI/Generic/COMPONENT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "COMPONENT",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 725,
      "DefEnd": 860,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::COMPONENT"
      }
    },
    {
      "Path": "URI/Generic/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 431,
      "DefEnd": 449,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/Generic/USE_REGISTRY",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "USE_REGISTRY",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 974,
      "DefEnd": 994,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic::USE_REGISTRY"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/coerce@oth",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "oth",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 33966,
      "DefEnd": 33989,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#coerce\u003eoth"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/escape_userpass@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 13072,
      "DefEnd": 13103,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#escape_userpass\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/find_proxy@addr",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "addr",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 36145,
      "DefEnd": 36186,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#find_proxy\u003eaddr"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "name",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 36293,
      "DefEnd": 36310,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#find_proxy\u003ename"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/find_proxy@no_proxy",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "no_proxy",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 36320,
      "DefEnd": 36360,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#find_proxy\u003eno_proxy"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/find_proxy@pairs",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "pairs",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 35038,
      "DefEnd": 35089,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#find_proxy\u003epairs"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "proxy_uri",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 35946,
      "DefEnd": 35987,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#find_proxy\u003eproxy_uri"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/fragment=@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22074,
      "DefEnd": 22083,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#fragment=\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/fragment=@x",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "x",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 22055,
      "DefEnd": 22067,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#fragment=\u003ex"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/hostname=@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 15647,
      "DefEnd": 15659,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#hostname=\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/hostname@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 15113,
      "DefEnd": 15126,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#hostname\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge!@t",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "t",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 25016,
      "DefEnd": 25030,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge!\u003et"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge0@oth",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "oth",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 26619,
      "DefEnd": 26658,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge0\u003eoth"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge@authority",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "authority",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 25655,
      "DefEnd": 25703,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge\u003eauthority"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@add_trailer_slash",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "add_trailer_slash",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 24441,
      "DefEnd": 24466,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003eadd_trailer_slash"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "base_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 23904,
      "DefEnd": 23920,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003ebase_path"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@first",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "first",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 23336,
      "DefEnd": 23358,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003efirst"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@i",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "i",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 23254,
      "DefEnd": 23279,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003ei"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "rel_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 23128,
      "DefEnd": 23155,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003erel_path"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 23653,
      "DefEnd": 23661,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003etmp"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/merge_path@x",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "x",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 24025,
      "DefEnd": 24038,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#merge_path\u003ex"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/normalize@uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uri",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 30750,
      "DefEnd": 30759,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#normalize\u003euri"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/path_query@str",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "str",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 31212,
      "DefEnd": 31223,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#path_query\u003estr"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/query=@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 19830,
      "DefEnd": 19839,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#query=\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/query=@x",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "x",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 19811,
      "DefEnd": 19823,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#query=\u003ex"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "oth",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 28027,
      "DefEnd": 28066,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#route_from0\u003eoth"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "rel",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 28337,
      "DefEnd": 28573,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#route_from0\u003erel"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "dst_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 27426,
      "DefEnd": 27465,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#route_from_path\u003edst_path"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "src_path",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 27381,
      "DefEnd": 27419,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#route_from_path\u003esrc_path"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 27622,
      "DefEnd": 27641,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#route_from_path\u003etmp"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/set_port@v",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "v",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 16533,
      "DefEnd": 16543,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#set_port\u003ev"
      }
    },
    {
      "Path": "URI/Generic@_local_0@/$methods/to_s@str",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "str",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 31385,
      "DefEnd": 31393,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003e#to_s\u003estr"
      }
    },
    {
      "Path": "URI/Generic@_local_0@build2@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 1742,
      "DefEnd": 1750,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003ebuild2\u003etmp"
      }
    },
    {
      "Path": "URI/Generic@_local_0@build@component",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "component",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 2743,
      "DefEnd": 2808,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003ebuild\u003ecomponent"
      }
    },
    {
      "Path": "URI/Generic@_local_0@build@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/generic.rb",
      "DefStart": 2570,
      "DefEnd": 2723,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Generic\u003e_local_0\u003ebuild\u003etmp"
      }
    },
    {
      "Path": "URI/HTML5ASCIIINCOMPAT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "HTML5ASCIIINCOMPAT",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 7809,
      "DefEnd": 7931,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTML5ASCIIINCOMPAT"
      }
    },
    {
      "Path": "URI/HTTP",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "HTTP",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 593,
      "DefEnd": 2743,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTP"
      }
    },
    {
      "Path": "URI/HTTP/$classmethods/build",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 1701,
      "DefEnd": 1804,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build(args)",
        "Module": "URI",
        "RubyPath": "URI::HTTP.build"
      }
    },
    {
      "Path": "URI/HTTP/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 2326,
      "DefEnd": 2372,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(*arg)",
        "Module": "URI",
        "RubyPath": "URI::HTTP#initialize"
      }
    },
    {
      "Path": "URI/HTTP/$methods/request_uri",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "request_uri",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 2629,
      "DefEnd": 2737,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "request_uri",
        "Module": "URI",
        "RubyPath": "URI::HTTP#request_uri"
      }
    },
    {
      "Path": "URI/HTTP/COMPONENT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "COMPONENT",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 739,
      "DefEnd": 854,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTP::COMPONENT"
      }
    },
    {
      "Path": "URI/HTTP/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 659,
      "DefEnd": 676,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTP::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "r",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 2699,
      "DefEnd": 2710,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTP\u003e_local_0\u003e#request_uri\u003er"
      }
    },
    {
      "Path": "URI/HTTP@_local_0@build@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/http.rb",
      "DefStart": 1728,
      "DefEnd": 1772,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTP\u003e_local_0\u003ebuild\u003etmp"
      }
    },
    {
      "Path": "URI/HTTPS",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "HTTPS",
      "Callable": false,
      "File": "lib/uri/https.rb",
      "DefStart": 411,
      "DefEnd": 501,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTPS"
      }
    },
    {
      "Path": "URI/HTTPS/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/https.rb",
      "DefStart": 477,
      "DefEnd": 495,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::HTTPS::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/InvalidComponentError",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "InvalidComponentError",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3483,
      "DefEnd": 3523,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::InvalidComponentError"
      }
    },
    {
      "Path": "URI/InvalidURIError",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "InvalidURIError",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 3413,
      "DefEnd": 3447,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::InvalidURIError"
      }
    },
    {
      "Path": "URI/LDAP",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "LDAP",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 490,
      "DefEnd": 5796,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP"
      }
    },
    {
      "Path": "URI/LDAP/$classmethods/build",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1938,
      "DefEnd": 2304,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build(args)",
        "Module": "URI",
        "RubyPath": "URI::LDAP.build"
      }
    },
    {
      "Path": "URI/LDAP/$methods/attributes",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "attributes",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4402,
      "DefEnd": 4442,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "attributes",
        "Module": "URI",
        "RubyPath": "URI::LDAP#attributes"
      }
    },
    {
      "Path": "URI/LDAP/$methods/attributes=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "attributes=",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4656,
      "DefEnd": 4720,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "attributes=(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#attributes="
      }
    },
    {
      "Path": "URI/LDAP/$methods/build_path_query",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build_path_query",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 3842,
      "DefEnd": 4078,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "build_path_query",
        "Module": "URI",
        "RubyPath": "URI::LDAP#build_path_query"
      }
    },
    {
      "Path": "URI/LDAP/$methods/dn",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "dn",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4132,
      "DefEnd": 4156,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "dn",
        "Module": "URI",
        "RubyPath": "URI::LDAP#dn"
      }
    },
    {
      "Path": "URI/LDAP/$methods/dn=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "dn=",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4322,
      "DefEnd": 4370,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "dn=(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#dn="
      }
    },
    {
      "Path": "URI/LDAP/$methods/extensions",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "extensions",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5353,
      "DefEnd": 5393,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "extensions",
        "Module": "URI",
        "RubyPath": "URI::LDAP#extensions"
      }
    },
    {
      "Path": "URI/LDAP/$methods/extensions=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "extensions=",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5607,
      "DefEnd": 5671,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "extensions=(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#extensions="
      }
    },
    {
      "Path": "URI/LDAP/$methods/filter",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "filter",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5043,
      "DefEnd": 5075,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "filter",
        "Module": "URI",
        "RubyPath": "URI::LDAP#filter"
      }
    },
    {
      "Path": "URI/LDAP/$methods/filter=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "filter=",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5265,
      "DefEnd": 5321,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "filter=(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#filter="
      }
    },
    {
      "Path": "URI/LDAP/$methods/hierarchical?",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "hierarchical?",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5753,
      "DefEnd": 5790,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "hierarchical?",
        "Module": "URI",
        "RubyPath": "URI::LDAP#hierarchical?"
      }
    },
    {
      "Path": "URI/LDAP/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 2824,
      "DefEnd": 2980,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(*arg)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#initialize"
      }
    },
    {
      "Path": "URI/LDAP/$methods/parse_dn",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parse_dn",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 3065,
      "DefEnd": 3110,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "parse_dn",
        "Module": "URI",
        "RubyPath": "URI::LDAP#parse_dn"
      }
    },
    {
      "Path": "URI/LDAP/$methods/parse_query",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parse_query",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 3269,
      "DefEnd": 3715,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "parse_query",
        "Module": "URI",
        "RubyPath": "URI::LDAP#parse_query"
      }
    },
    {
      "Path": "URI/LDAP/$methods/scope",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scope",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4747,
      "DefEnd": 4777,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "scope",
        "Module": "URI",
        "RubyPath": "URI::LDAP#scope"
      }
    },
    {
      "Path": "URI/LDAP/$methods/scope=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "scope=",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4961,
      "DefEnd": 5015,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "scope=(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#scope="
      }
    },
    {
      "Path": "URI/LDAP/$methods/set_attributes",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_attributes",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4490,
      "DefEnd": 4586,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_attributes(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#set_attributes"
      }
    },
    {
      "Path": "URI/LDAP/$methods/set_dn",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_dn",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4196,
      "DefEnd": 4268,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_dn(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#set_dn"
      }
    },
    {
      "Path": "URI/LDAP/$methods/set_extensions",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_extensions",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5441,
      "DefEnd": 5537,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_extensions(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#set_extensions"
      }
    },
    {
      "Path": "URI/LDAP/$methods/set_filter",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_filter",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5119,
      "DefEnd": 5203,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_filter(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#set_filter"
      }
    },
    {
      "Path": "URI/LDAP/$methods/set_scope",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_scope",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4820,
      "DefEnd": 4901,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_scope(val)",
        "Module": "URI",
        "RubyPath": "URI::LDAP#set_scope"
      }
    },
    {
      "Path": "URI/LDAP/@attributes",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@attributes",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4520,
      "DefEnd": 4537,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@attributes"
      }
    },
    {
      "Path": "URI/LDAP/@dn",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@dn",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4218,
      "DefEnd": 4227,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@dn"
      }
    },
    {
      "Path": "URI/LDAP/@extensions",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@extensions",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5471,
      "DefEnd": 5488,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@extensions"
      }
    },
    {
      "Path": "URI/LDAP/@filter",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@filter",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 5145,
      "DefEnd": 5158,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@filter"
      }
    },
    {
      "Path": "URI/LDAP/@path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@path",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 3869,
      "DefEnd": 3886,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@path"
      }
    },
    {
      "Path": "URI/LDAP/@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@query",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4046,
      "DefEnd": 4070,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@query"
      }
    },
    {
      "Path": "URI/LDAP/@scope",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@scope",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 4845,
      "DefEnd": 4857,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::@scope"
      }
    },
    {
      "Path": "URI/LDAP/COMPONENT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "COMPONENT",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 639,
      "DefEnd": 778,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::COMPONENT"
      }
    },
    {
      "Path": "URI/LDAP/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 558,
      "DefEnd": 576,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/LDAP/SCOPE",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "SCOPE",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1072,
      "DefEnd": 1171,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::SCOPE"
      }
    },
    {
      "Path": "URI/LDAP/SCOPE_BASE",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "SCOPE_BASE",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1138,
      "DefEnd": 1157,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::SCOPE_BASE"
      }
    },
    {
      "Path": "URI/LDAP/SCOPE_ONE",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "SCOPE_ONE",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1088,
      "DefEnd": 1105,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::SCOPE_ONE"
      }
    },
    {
      "Path": "URI/LDAP/SCOPE_SUB",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "SCOPE_SUB",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1113,
      "DefEnd": 1130,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP::SCOPE_SUB"
      }
    },
    {
      "Path": "URI/LDAP@_local_0@/$methods/build_path_query@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "query",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 3894,
      "DefEnd": 3904,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP\u003e_local_0\u003e#build_path_query\u003equery"
      }
    },
    {
      "Path": "URI/LDAP@_local_0@build@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "query",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 2076,
      "DefEnd": 2086,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP\u003e_local_0\u003ebuild\u003equery"
      }
    },
    {
      "Path": "URI/LDAP@_local_0@build@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/ldap.rb",
      "DefStart": 1965,
      "DefEnd": 2009,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAP\u003e_local_0\u003ebuild\u003etmp"
      }
    },
    {
      "Path": "URI/LDAPS",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "LDAPS",
      "Callable": false,
      "File": "lib/uri/ldaps.rb",
      "DefStart": 346,
      "DefEnd": 436,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAPS"
      }
    },
    {
      "Path": "URI/LDAPS/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/ldaps.rb",
      "DefStart": 412,
      "DefEnd": 430,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::LDAPS::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/MailTo",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "MailTo",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 287,
      "DefEnd": 7677,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo"
      }
    },
    {
      "Path": "URI/MailTo/$classmethods/build",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "build",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 3163,
      "DefEnd": 4001,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "self.build(args)",
        "Module": "URI",
        "RubyPath": "URI::MailTo.build"
      }
    },
    {
      "Path": "URI/MailTo/$methods/check_headers",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_headers",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 5912,
      "DefEnd": 6153,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_headers(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#check_headers"
      }
    },
    {
      "Path": "URI/MailTo/$methods/check_to",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "check_to",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 4993,
      "DefEnd": 5624,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "check_to(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#check_to"
      }
    },
    {
      "Path": "URI/MailTo/$methods/headers",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "headers",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 4934,
      "DefEnd": 4954,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "headers",
        "Module": "URI",
        "RubyPath": "URI::MailTo#headers"
      }
    },
    {
      "Path": "URI/MailTo/$methods/headers=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "headers=",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 6435,
      "DefEnd": 6510,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "headers=(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#headers="
      }
    },
    {
      "Path": "URI/MailTo/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 4254,
      "DefEnd": 4791,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(*arg)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#initialize"
      }
    },
    {
      "Path": "URI/MailTo/$methods/set_headers",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_headers",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 6223,
      "DefEnd": 6373,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_headers(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#set_headers"
      }
    },
    {
      "Path": "URI/MailTo/$methods/set_to",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "set_to",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 5684,
      "DefEnd": 5719,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "set_to(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#set_to"
      }
    },
    {
      "Path": "URI/MailTo/$methods/to",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 4854,
      "DefEnd": 4869,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to",
        "Module": "URI",
        "RubyPath": "URI::MailTo#to"
      }
    },
    {
      "Path": "URI/MailTo/$methods/to=",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to=",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 5771,
      "DefEnd": 5831,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to=(v)",
        "Module": "URI",
        "RubyPath": "URI::MailTo#to="
      }
    },
    {
      "Path": "URI/MailTo/$methods/to_mailtext",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_mailtext",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 7201,
      "DefEnd": 7635,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to_mailtext",
        "Module": "URI",
        "RubyPath": "URI::MailTo#to_mailtext"
      }
    },
    {
      "Path": "URI/MailTo/$methods/to_rfc822text",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_rfc822text",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 7640,
      "DefEnd": 7671,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to_mailtext",
        "Module": "URI",
        "RubyPath": "URI::MailTo#to_rfc822text"
      }
    },
    {
      "Path": "URI/MailTo/$methods/to_s",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "to_s",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 6549,
      "DefEnd": 6870,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "to_s",
        "Module": "URI",
        "RubyPath": "URI::MailTo#to_s"
      }
    },
    {
      "Path": "URI/MailTo/@headers",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@headers",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 6248,
      "DefEnd": 6261,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::@headers"
      }
    },
    {
      "Path": "URI/MailTo/@to",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@to",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 5704,
      "DefEnd": 5711,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::@to"
      }
    },
    {
      "Path": "URI/MailTo/COMPONENT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "COMPONENT",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 461,
      "DefEnd": 506,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::COMPONENT"
      }
    },
    {
      "Path": "URI/MailTo/DEFAULT_PORT",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DEFAULT_PORT",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 378,
      "DefEnd": 396,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::DEFAULT_PORT"
      }
    },
    {
      "Path": "URI/MailTo/EMAIL_REGEXP",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "EMAIL_REGEXP",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 1891,
      "DefEnd": 2043,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::EMAIL_REGEXP"
      }
    },
    {
      "Path": "URI/MailTo/HEADER_REGEXP",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "HEADER_REGEXP",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 1615,
      "DefEnd": 1724,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo::HEADER_REGEXP"
      }
    },
    {
      "Path": "URI/MailTo@_local_0@/$methods/to_mailtext@body",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "body",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 7271,
      "DefEnd": 7280,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo\u003e_local_0\u003e#to_mailtext\u003ebody"
      }
    },
    {
      "Path": "URI/MailTo@_local_0@/$methods/to_mailtext@head",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "head",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 7255,
      "DefEnd": 7264,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo\u003e_local_0\u003e#to_mailtext\u003ehead"
      }
    },
    {
      "Path": "URI/MailTo@_local_0@/$methods/to_mailtext@to",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "to",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 7223,
      "DefEnd": 7248,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo\u003e_local_0\u003e#to_mailtext\u003eto"
      }
    },
    {
      "Path": "URI/MailTo@_local_0@build@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "query",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 3448,
      "DefEnd": 3879,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo\u003e_local_0\u003ebuild\u003equery"
      }
    },
    {
      "Path": "URI/MailTo@_local_0@build@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/mailto.rb",
      "DefStart": 3190,
      "DefEnd": 3234,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::MailTo\u003e_local_0\u003ebuild\u003etmp"
      }
    },
    {
      "Path": "URI/Parser",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "Parser",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 313,
      "DefEnd": 336,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Parser"
      }
    },
    {
      "Path": "URI/REGEXP",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "REGEXP",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 287,
      "DefEnd": 310,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::REGEXP"
      }
    },
    {
      "Path": "URI/RFC2396_Parser",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "RFC2396_Parser",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1909,
      "DefEnd": 17730,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/convert_to_uri",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "convert_to_uri",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 17475,
      "DefEnd": 17723,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "convert_to_uri(uri)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#convert_to_uri"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/escape",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "escape",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 8437,
      "DefEnd": 8836,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "escape(str, unsafe = @regexp[:UNSAFE])",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#escape"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/extract",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "extract",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 7492,
      "DefEnd": 7731,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "extract(str, schemes = nil)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#extract"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3155,
      "DefEnd": 3399,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize(opts = {})",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#initialize"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize_pattern",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize_pattern",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9447,
      "DefEnd": 16069,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize_pattern(opts = {})",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#initialize_pattern"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize_regexp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "initialize_regexp",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 16121,
      "DefEnd": 17469,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "initialize_regexp(pattern)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#initialize_regexp"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9334,
      "DefEnd": 9382,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "inspect",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#inspect"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/join",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "join",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 6911,
      "DefEnd": 6999,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "join(*uris)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#join"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/make_regexp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "make_regexp",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 7893,
      "DefEnd": 8068,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "make_regexp(schemes = nil)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#make_regexp"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/parse",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parse",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 6199,
      "DefEnd": 6747,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "parse(uri)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#parse"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/pattern",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "pattern",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3485,
      "DefEnd": 3505,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "pattern",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#pattern"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/regexp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "regexp",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3587,
      "DefEnd": 3606,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "regexp",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#regexp"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/split",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3663,
      "DefEnd": 5755,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "split(uri)",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#split"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/unescape",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "unescape",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9149,
      "DefEnd": 9285,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "unescape(str, escaped = @regexp[:ESCAPED])",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser#unescape"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/@@to_s",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@@to_s",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9291,
      "DefEnd": 9329,
      "Exported": false,
      "Data": {
        "RubyKind": "classvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser::@@to_s"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/@pattern",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@pattern",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3187,
      "DefEnd": 3222,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser::@pattern"
      }
    },
    {
      "Path": "URI/RFC2396_Parser/@regexp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@regexp",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 3293,
      "DefEnd": 3330,
      "Exported": false,
      "Data": {
        "RubyKind": "instancevariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser::@regexp"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/convert_to_uri@uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uri",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 17556,
      "DefEnd": 17585,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#convert_to_uri\u003euri"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/escape@unsafe",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "unsafe",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 8567,
      "DefEnd": 8622,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#escape\u003eunsafe"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/extract@result",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "result",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 7629,
      "DefEnd": 7640,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#extract\u003eresult"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "abs_path",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13779,
      "DefEnd": 13809,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eabs_path"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "abs_uri",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 14391,
      "DefEnd": 14444,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eabs_uri"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@authority",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "authority",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13321,
      "DefEnd": 13360,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eauthority"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "escaped",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9518,
      "DefEnd": 9571,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eescaped"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@fragment",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "fragment",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 10523,
      "DefEnd": 10544,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003efragment"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hex4",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11381,
      "DefEnd": 11412,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehex4"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq1",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hexseq1",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11538,
      "DefEnd": 11570,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehexseq1"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq2",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hexseq2",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11619,
      "DefEnd": 11655,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehexseq2"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hier_part",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hier_part",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 14132,
      "DefEnd": 14193,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehier_part"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@host",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "host",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12144,
      "DefEnd": 12191,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehost"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostname",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hostname",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 10732,
      "DefEnd": 10773,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehostname"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostport",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "hostport",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12307,
      "DefEnd": 12340,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ehostport"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv4addr",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ipv4addr",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11291,
      "DefEnd": 11345,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eipv4addr"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6addr",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ipv6addr",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11740,
      "DefEnd": 11800,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eipv6addr"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6ref",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ipv6ref",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11973,
      "DefEnd": 12002,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eipv6ref"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@lastpart",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "lastpart",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 11457,
      "DefEnd": 11493,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003elastpart"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@net_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "net_path",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 14001,
      "DefEnd": 14044,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003enet_path"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@opaque_part",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "opaque_part",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 14264,
      "DefEnd": 14304,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eopaque_part"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@param",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "param",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12739,
      "DefEnd": 12758,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eparam"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@path_segments",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "path_segments",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12924,
      "DefEnd": 12968,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003epath_segments"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@pchar",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "pchar",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12654,
      "DefEnd": 12701,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003epchar"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@port",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "port",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12229,
      "DefEnd": 12241,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eport"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "query",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 10451,
      "DefEnd": 10469,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003equery"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reg_name",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "reg_name",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13220,
      "DefEnd": 13272,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ereg_name"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "rel_path",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13882,
      "DefEnd": 13925,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003erel_path"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_segment",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "rel_segment",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13509,
      "DefEnd": 13563,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003erel_segment"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "rel_uri",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 14540,
      "DefEnd": 14607,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003erel_uri"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reserved",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "reserved",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9681,
      "DefEnd": 9735,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003ereserved"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ret",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9487,
      "DefEnd": 9495,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eret"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@scheme",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "scheme",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13653,
      "DefEnd": 13711,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003escheme"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@segment",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "segment",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12811,
      "DefEnd": 12846,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003esegment"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@server",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "server",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 13030,
      "DefEnd": 13069,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eserver"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "unreserved",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 9597,
      "DefEnd": 9657,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003eunreserved"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uric",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 10141,
      "DefEnd": 10191,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003euric"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric_no_slash",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uric_no_slash",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 10343,
      "DefEnd": 10400,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003euric_no_slash"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@userinfo",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "userinfo",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 12484,
      "DefEnd": 12535,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_pattern\u003euserinfo"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ret",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 16158,
      "DefEnd": 16166,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#initialize_regexp\u003eret"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/split@opaque",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "opaque",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 4636,
      "DefEnd": 4648,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#split\u003eopaque"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "path",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 5435,
      "DefEnd": 5444,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#split\u003epath"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/split@ret",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ret",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 5499,
      "DefEnd": 5730,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#split\u003eret"
      }
    },
    {
      "Path": "URI/RFC2396_Parser@_local_0@/$methods/split@scheme",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "scheme",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 4615,
      "DefEnd": 4627,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_Parser\u003e_local_0\u003e#split\u003escheme"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "RFC2396_REGEXP",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 270,
      "DefEnd": 1769,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC2396_REGEXP"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "PATTERN",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 343,
      "DefEnd": 1735,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "ALNUM",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 625,
      "DefEnd": 646,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::ALNUM"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/ALPHA",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "ALPHA",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 564,
      "DefEnd": 580,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::ALPHA"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/DOMLABEL",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "DOMLABEL",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1409,
      "DefEnd": 1463,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::DOMLABEL"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/ESCAPED",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "ESCAPED",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 852,
      "DefEnd": 876,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::ESCAPED"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/HEX",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "HEX",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 788,
      "DefEnd": 809,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::HEX"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/HOSTNAME",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "HOSTNAME",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1660,
      "DefEnd": 1707,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::HOSTNAME"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/RESERVED",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "RESERVED",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1299,
      "DefEnd": 1328,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::RESERVED"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/TOPLABEL",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "TOPLABEL",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1537,
      "DefEnd": 1591,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::TOPLABEL"
      }
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN/UNRESERVED",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "UNRESERVED",
      "Callable": false,
      "File": "lib/uri/rfc2396_parser.rb",
      "DefStart": 1023,
      "DefEnd": 1057,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI::RFC2396_REGEXP::PATTERN",
        "RubyPath": "URI::RFC2396_REGEXP::PATTERN::UNRESERVED"
      }
    },
    {
      "Path": "URI/RFC3986_PARSER",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "RFC3986_PARSER",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 339,
      "DefEnd": 374,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_PARSER"
      }
    },
    {
      "Path": "URI/RFC3986_Parser",
      "TreePath": "TODO",
      "Kind": "type",
      "Name": "RFC3986_Parser",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 13,
      "DefEnd": 5929,
      "Exported": true,
      "Data": {
        "RubyKind": "class",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/convert_to_uri",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "convert_to_uri",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 5674,
      "DefEnd": 5922,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "convert_to_uri(uri)",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#convert_to_uri"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/inspect",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "inspect",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 4440,
      "DefEnd": 4488,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "inspect",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#inspect"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/join",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "join",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 4293,
      "DefEnd": 4391,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "join(*uris) # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#join"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/parse",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "parse",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 3728,
      "DefEnd": 4286,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "parse(uri) # :nodoc:",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#parse"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/regexp",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "regexp",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 4494,
      "DefEnd": 5655,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "regexp",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#regexp"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/split",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "split",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 2386,
      "DefEnd": 3722,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "split(uri) #:nodoc:",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser#split"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/@@to_s",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "@@to_s",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 4397,
      "DefEnd": 4435,
      "Exported": false,
      "Data": {
        "RubyKind": "classvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser::@@to_s"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/RFC3986_URI",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "RFC3986_URI",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 139,
      "DefEnd": 1247,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser::RFC3986_URI"
      }
    },
    {
      "Path": "URI/RFC3986_Parser/RFC3986_relative_ref",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "RFC3986_relative_ref",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 1252,
      "DefEnd": 2380,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser::RFC3986_relative_ref"
      }
    },
    {
      "Path": "URI/RFC3986_Parser@_local_0@/$methods/convert_to_uri@uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uri",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 5755,
      "DefEnd": 5784,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser\u003e_local_0\u003e#convert_to_uri\u003euri"
      }
    },
    {
      "Path": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ary",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 3330,
      "DefEnd": 3341,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser\u003e_local_0\u003e#split\u003eary"
      }
    },
    {
      "Path": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "m",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 3286,
      "DefEnd": 3321,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser\u003e_local_0\u003e#split\u003em"
      }
    },
    {
      "Path": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "uri",
      "Callable": false,
      "File": "lib/uri/rfc3986_parser.rb",
      "DefStart": 2416,
      "DefEnd": 2432,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::RFC3986_Parser\u003e_local_0\u003e#split\u003euri"
      }
    },
    {
      "Path": "URI/TBLDECWWWCOMP_",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "TBLDECWWWCOMP_",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 7493,
      "DefEnd": 7512,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::TBLDECWWWCOMP_"
      }
    },
    {
      "Path": "URI/TBLENCWWWCOMP_",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "TBLENCWWWCOMP_",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 7343,
      "DefEnd": 7362,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::TBLENCWWWCOMP_"
      }
    },
    {
      "Path": "URI/Util",
      "TreePath": "TODO",
      "Kind": "module",
      "Name": "Util",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 659,
      "DefEnd": 1575,
      "Exported": true,
      "Data": {
        "RubyKind": "module",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::Util"
      }
    },
    {
      "Path": "URI/Util/$classmethods/make_components_hash",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "make_components_hash",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 685,
      "DefEnd": 1527,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "make_components_hash(klass, array_hash)",
        "Module": "URI::Util",
        "RubyPath": "URI::Util.make_components_hash"
      }
    },
    {
      "Path": "URI/Util/$methods/make_components_hash",
      "TreePath": "TODO",
      "Kind": "func",
      "Name": "make_components_hash",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 685,
      "DefEnd": 1527,
      "Exported": true,
      "Data": {
        "RubyKind": "method",
        "TypeString": "make_components_hash(klass, array_hash)",
        "Module": "URI::Util",
        "RubyPath": "URI::Util#make_components_hash"
      }
    },
    {
      "Path": "URI/Util@_local_0@/$methods/make_components_hash@tmp",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "tmp",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 735,
      "DefEnd": 743,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI::Util",
        "RubyPath": "URI::Util\u003e_local_0\u003e#make_components_hash\u003etmp"
      }
    },
    {
      "Path": "URI/VERSION",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "VERSION",
      "Callable": false,
      "File": "lib/uri.rb",
      "DefStart": 2848,
      "DefEnd": 2918,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::VERSION"
      }
    },
    {
      "Path": "URI/VERSION_CODE",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "VERSION_CODE",
      "Callable": false,
      "File": "lib/uri.rb",
      "DefStart": 2815,
      "DefEnd": 2845,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::VERSION_CODE"
      }
    },
    {
      "Path": "URI/WEB_ENCODINGS_",
      "TreePath": "TODO",
      "Kind": "const",
      "Name": "WEB_ENCODINGS_",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 12844,
      "DefEnd": 19084,
      "Exported": true,
      "Data": {
        "RubyKind": "constant",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI::WEB_ENCODINGS_"
      }
    },
    {
      "Path": "URI@_local_9@decode_www_form@ary",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "ary",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 11761,
      "DefEnd": 11769,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI\u003e_local_9\u003edecode_www_form\u003eary"
      }
    },
    {
      "Path": "URI@_local_9@decode_www_form@enc",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "enc",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 11803,
      "DefEnd": 11827,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI\u003e_local_9\u003edecode_www_form\u003eenc"
      }
    },
    {
      "Path": "URI@_local_9@encode_www_form_component@str",
      "TreePath": "TODO",
      "Kind": "var",
      "Name": "str",
      "Callable": false,
      "File": "lib/uri/common.rb",
      "DefStart": 8444,
      "DefEnd": 8462,
      "Exported": true,
      "Data": {
        "RubyKind": "localvariable",
        "TypeString": "",
        "Module": "URI",
        "RubyPath": "URI\u003e_local_9\u003eencode_www_form_component\u003estr"
      }
    }
  ],
  "Refs": [
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel/$methods/URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19396,
      "End": 19399
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel@_local_0@/$methods/URI@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19456,
      "End": 19459
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19329,
      "End": 19335
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33356,
      "End": 33362
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9300,
      "End": 9306
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "Kernel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4406,
      "End": 4412
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String/$classmethods/try_convert",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19469,
      "End": 19480
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String/$classmethods/try_convert",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17569,
      "End": 17580
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String/$classmethods/try_convert",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5768,
      "End": 5779
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19462,
      "End": 19468
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33951,
      "End": 33957
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3326,
      "End": 3332
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17562,
      "End": 17568
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "String",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5761,
      "End": 5767
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/decode_www_form_component",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8999,
      "End": 9024
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/decode_www_form",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11545,
      "End": 11560
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/encode_www_form_component",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8400,
      "End": 8425
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/encode_www_form",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 10379,
      "End": 10394
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/extract",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 6255,
      "End": 6262
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/get_encoding",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19204,
      "End": 19216
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/join",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 5610,
      "End": 5614
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/parse",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19496,
      "End": 19501
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/parse",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4741,
      "End": 4746
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/parse",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36595,
      "End": 36600
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/regexp",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7200,
      "End": 7206
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/scheme_list",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3273,
      "End": 3284
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/scheme_list",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6340,
      "End": 6351
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/scheme_list",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6388,
      "End": 6399
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/scheme_list",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3879,
      "End": 3890
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/scheme_list",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3927,
      "End": 3938
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/$classmethods/split",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4123,
      "End": 4128
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3205,
      "End": 3214
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3289,
      "End": 3298
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7164,
      "End": 7173
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2747,
      "End": 2756
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 504,
      "End": 513
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5800,
      "End": 5809
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 439,
      "End": 448
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/@@schemes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7681,
      "End": 7690
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/BadURIError",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3576,
      "End": 3587
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/BadURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26715,
      "End": 26726
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/BadURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28105,
      "End": 28116
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/BadURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28199,
      "End": 28210
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/BadURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34677,
      "End": 34688
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 2527,
      "End": 2541
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3082,
      "End": 3096
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 398,
      "End": 412
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 428,
      "End": 442
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 580,
      "End": 594
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 6368,
      "End": 6382
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7298,
      "End": 7312
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4207,
      "End": 4221
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7175,
      "End": 7189
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/DEFAULT_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7220,
      "End": 7234
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Error",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3361,
      "End": 3366
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Error",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3437,
      "End": 3442
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Error",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3513,
      "End": 3518
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Error",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3590,
      "End": 3595
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Escape/$methods/escape",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 2434,
      "End": 2440
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Escape/$methods/unescape",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 2985,
      "End": 2993
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Escape",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 1640,
      "End": 1646
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Escape",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3178,
      "End": 3184
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$classmethods/build",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 2886,
      "End": 2891
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$classmethods/new2",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1182,
      "End": 1186
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/check_typecode",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4819,
      "End": 4833
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/check_typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5806,
      "End": 5820
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/initialize",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1678,
      "End": 1681
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3907,
      "End": 3917
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/merge",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5892,
      "End": 5897
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6656,
      "End": 6660
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/set_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6777,
      "End": 6785
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/set_typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4592,
      "End": 4604
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/set_typecode",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5142,
      "End": 5154
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/set_typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5837,
      "End": 5849
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/to_s",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6923,
      "End": 6927
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/$methods/typecode=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5780,
      "End": 5789
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4387,
      "End": 4392
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4435,
      "End": 4440
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4481,
      "End": 4486
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4489,
      "End": 4494
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6674,
      "End": 6679
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6989,
      "End": 6994
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7003,
      "End": 7008
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7011,
      "End": 7016
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7102,
      "End": 7107
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4356,
      "End": 4365
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5164,
      "End": 5173
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6959,
      "End": 6968
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7037,
      "End": 7046
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7084,
      "End": 7093
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 715,
      "End": 724
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 624,
      "End": 636
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE_PREFIX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1134,
      "End": 1149
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE_PREFIX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3357,
      "End": 3372
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE_PREFIX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4447,
      "End": 4462
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE_PREFIX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7019,
      "End": 7034
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1057,
      "End": 1065
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1529,
      "End": 1537
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4846,
      "End": 4854
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP/TYPECODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4970,
      "End": 4978
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4182,
      "End": 4186
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4189,
      "End": 4193
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4214,
      "End": 4218
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4288,
      "End": 4292
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4381,
      "End": 4384
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4441,
      "End": 4444
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4498,
      "End": 4501
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4424,
      "End": 4432
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/initialize@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4555,
      "End": 4563
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/merge@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5919,
      "End": 5922
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/merge@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5953,
      "End": 5956
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/merge@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5965,
      "End": 5968
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/merge@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6020,
      "End": 6023
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/to_s@save_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6934,
      "End": 6943
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/to_s@save_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 6977,
      "End": 6986
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/to_s@save_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7110,
      "End": 7119
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7063,
      "End": 7066
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7144,
      "End": 7147
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3224,
      "End": 3227
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3279,
      "End": 3282
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3305,
      "End": 3308
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3340,
      "End": 3343
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3375,
      "End": 3378
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3410,
      "End": 3413
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3424,
      "End": 3427
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3469,
      "End": 3472
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@new2@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1470,
      "End": 1478
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@new2@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1516,
      "End": 1524
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP@_local_0@new2@typecode",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1626,
      "End": 1634
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1177,
      "End": 1181
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 1673,
      "End": 1677
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 2881,
      "End": 2885
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4539,
      "End": 4543
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4587,
      "End": 4591
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 566,
      "End": 569
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 5945,
      "End": 5949
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/FTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 7183,
      "End": 7186
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/build2",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1397,
      "End": 1403
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/build",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1442,
      "End": 1447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/build",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1543,
      "End": 1548
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/build",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1959,
      "End": 1964
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/build",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2408,
      "End": 2413
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/component",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 929,
      "End": 938
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/default_port",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 503,
      "End": 515
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$classmethods/use_registry",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1019,
      "End": 1031
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/==",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31991,
      "End": 31993
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/absolute?",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22535,
      "End": 22544
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/absolute?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22717,
      "End": 22726
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/absolute?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26787,
      "End": 26796
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/absolute?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26976,
      "End": 26985
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_host",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13761,
      "End": 13771
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 14723,
      "End": 14733
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_opaque",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20347,
      "End": 20359
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21368,
      "End": 21380
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_password",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10016,
      "End": 10030
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11836,
      "End": 11850
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9099,
      "End": 9113
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17704,
      "End": 17714
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19245,
      "End": 19255
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_port",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15953,
      "End": 15963
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17080,
      "End": 17090
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_registry",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17140,
      "End": 17154
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_scheme",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7745,
      "End": 7757
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8630,
      "End": 8642
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10641,
      "End": 10655
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_userinfo",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8958,
      "End": 8972
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11228,
      "End": 11238
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9076,
      "End": 9086
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/check_user",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9421,
      "End": 9431
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/coerce",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33913,
      "End": 33919
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component_ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32168,
      "End": 32181
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component_ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32288,
      "End": 32301
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component_ary",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32532,
      "End": 32545
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32552,
      "End": 32561
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7426,
      "End": 7435
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/component",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7599,
      "End": 7608
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/default_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31742,
      "End": 31754
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/default_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 5057,
      "End": 5069
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/default_port",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 597,
      "End": 609
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/eql?",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32204,
      "End": 32208
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/escape_userpass",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13047,
      "End": 13062
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/find_proxy",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34654,
      "End": 34664
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/fragment=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21997,
      "End": 22006
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/hash",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32152,
      "End": 32156
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/hierarchical?",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22390,
      "End": 22403
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 14708,
      "End": 14713
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15122,
      "End": 15126
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28748,
      "End": 28752
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31036,
      "End": 31040
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31044,
      "End": 31048
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31052,
      "End": 31056
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31088,
      "End": 31092
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/hostname=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15628,
      "End": 15637
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/hostname",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15098,
      "End": 15106
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/hostname",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36087,
      "End": 36095
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/initialize",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28356,
      "End": 28359
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/initialize",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2995,
      "End": 2998
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 3766,
      "End": 3776
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/inspect",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33394,
      "End": 33401
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge!",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24998,
      "End": 25004
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge0",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25526,
      "End": 25532
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge0",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26601,
      "End": 26607
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22998,
      "End": 23008
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25020,
      "End": 25025
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/merge",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25483,
      "End": 25488
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/normalize!",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30860,
      "End": 30870
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/normalize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30734,
      "End": 30743
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/normalize",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32045,
      "End": 32054
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/opaque=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21351,
      "End": 21358
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10296,
      "End": 10302
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13076,
      "End": 13082
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13913,
      "End": 13919
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16128,
      "End": 16134
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18168,
      "End": 18174
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18355,
      "End": 18361
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18388,
      "End": 18394
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20766,
      "End": 20772
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26625,
      "End": 26631
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28033,
      "End": 28039
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30625,
      "End": 30631
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32253,
      "End": 32259
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33972,
      "End": 33978
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7120,
      "End": 7126
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7775,
      "End": 7781
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9569,
      "End": 9575
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/password=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11810,
      "End": 11819
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/password",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13496,
      "End": 13504
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/path=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19230,
      "End": 19235
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/path_query",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31195,
      "End": 31205
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31832,
      "End": 31842
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30880,
      "End": 30884
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30888,
      "End": 30892
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/port=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17065,
      "End": 17070
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17118,
      "End": 17122
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/query=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19689,
      "End": 19695
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30098,
      "End": 30103
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/registry=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17387,
      "End": 17396
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/registry",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 6174,
      "End": 6182
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/relative?",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22700,
      "End": 22709
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/relative?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26674,
      "End": 26683
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/relative?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28081,
      "End": 28090
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/relative?",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34722,
      "End": 34731
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/replace!",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25081,
      "End": 25089
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/replace!",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7301,
      "End": 7309
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/route_from0",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28004,
      "End": 28015
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/route_from0",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29882,
      "End": 29893
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/route_from_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27113,
      "End": 27128
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/route_from",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29786,
      "End": 29796
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/route_to",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30605,
      "End": 30613
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8613,
      "End": 8620
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28270,
      "End": 28276
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30940,
      "End": 30946
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30950,
      "End": 30956
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30960,
      "End": 30966
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31000,
      "End": 31006
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34750,
      "End": 34756
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/select",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33069,
      "End": 33075
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_host",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 14199,
      "End": 14207
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 14743,
      "End": 14751
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31074,
      "End": 31082
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4575,
      "End": 4583
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_opaque",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21062,
      "End": 21072
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21390,
      "End": 21400
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4686,
      "End": 4696
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11867,
      "End": 11879
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_password",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12622,
      "End": 12634
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18703,
      "End": 18711
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19265,
      "End": 19273
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30907,
      "End": 30915
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4631,
      "End": 4639
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4947,
      "End": 4955
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_port",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16422,
      "End": 16430
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17100,
      "End": 17108
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4603,
      "End": 4611
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 5021,
      "End": 5029
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_registry",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17265,
      "End": 17277
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30984,
      "End": 30994
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4507,
      "End": 4517
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_scheme",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8071,
      "End": 8081
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8652,
      "End": 8662
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10673,
      "End": 10685
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_userinfo",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12082,
      "End": 12094
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12442,
      "End": 12454
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4539,
      "End": 4551
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11251,
      "End": 11259
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/set_user",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12424,
      "End": 12432
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_path",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22804,
      "End": 22814
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23105,
      "End": 23115
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23140,
      "End": 23150
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12164,
      "End": 12178
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_userinfo",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12818,
      "End": 12832
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/split_userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9039,
      "End": 9053
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/to_s",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31374,
      "End": 31378
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/user=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 11210,
      "End": 11215
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/userinfo=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10563,
      "End": 10572
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/userinfo",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13240,
      "End": 13248
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28726,
      "End": 28734
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31583,
      "End": 31591
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31614,
      "End": 31622
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/$methods/user",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13425,
      "End": 13429
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33347,
      "End": 33353
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33408,
      "End": 33414
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22023,
      "End": 22032
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22316,
      "End": 22325
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31863,
      "End": 31872
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31907,
      "End": 31916
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4165,
      "End": 4174
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 14217,
      "End": 14222
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20582,
      "End": 20587
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31527,
      "End": 31532
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31667,
      "End": 31672
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31690,
      "End": 31695
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4072,
      "End": 4077
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10057,
      "End": 10064
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13809,
      "End": 13816
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16001,
      "End": 16008
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17917,
      "End": 17924
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19796,
      "End": 19803
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 21082,
      "End": 21089
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31473,
      "End": 31480
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31496,
      "End": 31503
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4145,
      "End": 4152
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4974,
      "End": 4981
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9444,
      "End": 9451
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4187,
      "End": 4194
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7146,
      "End": 7153
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7159,
      "End": 7166
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7209,
      "End": 7216
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12224,
      "End": 12233
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12272,
      "End": 12281
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12458,
      "End": 12467
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12644,
      "End": 12653
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13293,
      "End": 13302
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13355,
      "End": 13364
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13511,
      "End": 13520
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@password",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4050,
      "End": 4059
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18721,
      "End": 18726
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20609,
      "End": 20614
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22413,
      "End": 22418
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31218,
      "End": 31223
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4108,
      "End": 4113
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4964,
      "End": 4969
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16572,
      "End": 16577
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20591,
      "End": 20596
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31719,
      "End": 31724
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31728,
      "End": 31733
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31793,
      "End": 31798
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4090,
      "End": 4095
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 5074,
      "End": 5079
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19712,
      "End": 19718
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20083,
      "End": 20089
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31233,
      "End": 31239
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31261,
      "End": 31267
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4126,
      "End": 4132
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18113,
      "End": 18120
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18124,
      "End": 18131
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22554,
      "End": 22561
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31403,
      "End": 31410
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31426,
      "End": 31433
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4012,
      "End": 4019
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4821,
      "End": 4828
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4910,
      "End": 4917
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4928,
      "End": 4935
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 8091,
      "End": 8098
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12201,
      "End": 12206
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 12265,
      "End": 12270
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13258,
      "End": 13263
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13316,
      "End": 13321
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13341,
      "End": 13346
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13436,
      "End": 13441
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20600,
      "End": 20605
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/@user",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4032,
      "End": 4037
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2492,
      "End": 2501
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2592,
      "End": 2601
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2799,
      "End": 2808
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 725,
      "End": 734
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 431,
      "End": 443
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic/USE_REGISTRY",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 974,
      "End": 986
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/coerce@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 33966,
      "End": 33969
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/coerce@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34039,
      "End": 34042
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/escape_userpass@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13072,
      "End": 13073
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36145,
      "End": 36149
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36232,
      "End": 36236
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34738,
      "End": 34742
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34808,
      "End": 34812
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35382,
      "End": 35386
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35551,
      "End": 35555
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35674,
      "End": 35678
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35713,
      "End": 35717
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35765,
      "End": 35769
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35800,
      "End": 35804
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35962,
      "End": 35966
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35975,
      "End": 35979
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36293,
      "End": 36297
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36335,
      "End": 36339
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36348,
      "End": 36352
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@no_proxy",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36320,
      "End": 36328
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@no_proxy",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36369,
      "End": 36377
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@pairs",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35038,
      "End": 35043
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@pairs",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35103,
      "End": 35108
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@pairs",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35216,
      "End": 35221
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34783,
      "End": 34792
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35168,
      "End": 35177
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35366,
      "End": 35375
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35415,
      "End": 35424
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35527,
      "End": 35536
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35581,
      "End": 35590
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35651,
      "End": 35660
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35749,
      "End": 35758
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35784,
      "End": 35793
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 35946,
      "End": 35955
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36008,
      "End": 36017
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/find_proxy@proxy_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36026,
      "End": 36035
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22074,
      "End": 22075
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22104,
      "End": 22105
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22148,
      "End": 22149
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22174,
      "End": 22175
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22219,
      "End": 22220
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22273,
      "End": 22274
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22328,
      "End": 22329
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22055,
      "End": 22056
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22078,
      "End": 22079
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/fragment=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 22087,
      "End": 22088
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15647,
      "End": 15648
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15655,
      "End": 15656
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15711,
      "End": 15712
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15113,
      "End": 15114
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15151,
      "End": 15152
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/hostname@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15160,
      "End": 15161
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge!@t",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25016,
      "End": 25017
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge!@t",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25048,
      "End": 25049
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge!@t",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25090,
      "End": 25091
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26619,
      "End": 26622
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26687,
      "End": 26690
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26800,
      "End": 26803
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26942,
      "End": 26945
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26947,
      "End": 26950
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27011,
      "End": 27014
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27041,
      "End": 27044
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27046,
      "End": 27049
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge@authority",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25655,
      "End": 25664
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge@authority",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25786,
      "End": 25795
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge@authority",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25987,
      "End": 25996
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@add_trailer_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23838,
      "End": 23855
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@add_trailer_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23963,
      "End": 23980
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@add_trailer_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24441,
      "End": 24458
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@add_trailer_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24533,
      "End": 24550
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23093,
      "End": 23102
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23200,
      "End": 23209
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23219,
      "End": 23228
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23258,
      "End": 23267
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23288,
      "End": 23297
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23385,
      "End": 23394
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23879,
      "End": 23888
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23904,
      "End": 23913
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23989,
      "End": 23998
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24166,
      "End": 24175
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24183,
      "End": 24192
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24376,
      "End": 24385
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24511,
      "End": 24520
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@base_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24565,
      "End": 24574
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@first",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23336,
      "End": 23341
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@first",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23364,
      "End": 23369
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@i",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23254,
      "End": 23255
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23128,
      "End": 23136
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23344,
      "End": 23352
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23409,
      "End": 23417
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23515,
      "End": 23523
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23536,
      "End": 23544
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23560,
      "End": 23568
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23588,
      "End": 23596
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23668,
      "End": 23676
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23653,
      "End": 23656
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 23859,
      "End": 23862
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24029,
      "End": 24032
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24401,
      "End": 24404
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24025,
      "End": 24026
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24050,
      "End": 24051
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/merge_path@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 24389,
      "End": 24390
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/normalize@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30750,
      "End": 30753
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/normalize@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30766,
      "End": 30769
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/normalize@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30787,
      "End": 30790
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/path_query@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31212,
      "End": 31215
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/path_query@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31248,
      "End": 31251
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/path_query@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31284,
      "End": 31287
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19830,
      "End": 19831
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19860,
      "End": 19861
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19904,
      "End": 19905
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19930,
      "End": 19931
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19975,
      "End": 19976
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20040,
      "End": 20041
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20092,
      "End": 20093
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19811,
      "End": 19812
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19834,
      "End": 19835
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/query=@x",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19843,
      "End": 19844
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28027,
      "End": 28030
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28171,
      "End": 28174
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28239,
      "End": 28242
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28280,
      "End": 28283
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28600,
      "End": 28603
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28652,
      "End": 28655
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28700,
      "End": 28703
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28844,
      "End": 28847
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29005,
      "End": 29008
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29079,
      "End": 29082
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29153,
      "End": 29156
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29231,
      "End": 29234
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@oth",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29338,
      "End": 29341
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28337,
      "End": 28340
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28584,
      "End": 28587
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28626,
      "End": 28629
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28688,
      "End": 28691
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28811,
      "End": 28814
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28832,
      "End": 28835
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28876,
      "End": 28879
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28881,
      "End": 28884
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28901,
      "End": 28904
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28929,
      "End": 28932
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28953,
      "End": 28956
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28981,
      "End": 28984
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28993,
      "End": 28996
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29022,
      "End": 29025
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29047,
      "End": 29050
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29066,
      "End": 29069
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29104,
      "End": 29107
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29109,
      "End": 29112
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29125,
      "End": 29128
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29139,
      "End": 29142
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29172,
      "End": 29175
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29199,
      "End": 29202
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29218,
      "End": 29221
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29256,
      "End": 29259
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29261,
      "End": 29264
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from0@rel",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 29343,
      "End": 29346
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27426,
      "End": 27434
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27507,
      "End": 27515
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27526,
      "End": 27534
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27590,
      "End": 27598
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27628,
      "End": 27636
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@dst_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27744,
      "End": 27752
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27381,
      "End": 27389
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27544,
      "End": 27552
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27567,
      "End": 27575
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27670,
      "End": 27678
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@src_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27905,
      "End": 27913
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27622,
      "End": 27625
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27697,
      "End": 27700
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27823,
      "End": 27826
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27857,
      "End": 27860
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/route_from_path@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27921,
      "End": 27924
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/set_port@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16502,
      "End": 16503
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/set_port@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16533,
      "End": 16534
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/set_port@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16537,
      "End": 16538
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/set_port@v",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16580,
      "End": 16581
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31385,
      "End": 31388
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31419,
      "End": 31422
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31442,
      "End": 31445
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31489,
      "End": 31492
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31543,
      "End": 31546
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31602,
      "End": 31605
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31633,
      "End": 31636
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31683,
      "End": 31686
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31765,
      "End": 31768
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31786,
      "End": 31789
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31825,
      "End": 31828
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31881,
      "End": 31884
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31900,
      "End": 31903
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@/$methods/to_s@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31934,
      "End": 31937
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build2@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1742,
      "End": 1745
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@component",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2743,
      "End": 2752
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@component",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2907,
      "End": 2916
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2515,
      "End": 2518
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2570,
      "End": 2573
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2948,
      "End": 2951
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2965,
      "End": 2968
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 572,
      "End": 579
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1014,
      "End": 1018
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1048,
      "End": 1052
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1392,
      "End": 1396
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1437,
      "End": 1441
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15117,
      "End": 15121
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1538,
      "End": 1542
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 15699,
      "End": 15703
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1954,
      "End": 1958
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2403,
      "End": 2407
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2483,
      "End": 2490
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25040,
      "End": 25044
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 25101,
      "End": 25105
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2583,
      "End": 2590
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26669,
      "End": 26673
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26782,
      "End": 26786
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 26971,
      "End": 26975
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 27001,
      "End": 27005
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2755,
      "End": 2759
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2790,
      "End": 2797
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28076,
      "End": 28080
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28145,
      "End": 28149
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28265,
      "End": 28269
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28306,
      "End": 28310
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28312,
      "End": 28316
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28348,
      "End": 28355
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28721,
      "End": 28725
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28743,
      "End": 28747
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28775,
      "End": 28779
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28781,
      "End": 28785
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2892,
      "End": 2896
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2990,
      "End": 2994
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30093,
      "End": 30097
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 30995,
      "End": 30999
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31083,
      "End": 31087
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31578,
      "End": 31582
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31609,
      "End": 31613
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 31737,
      "End": 31741
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32008,
      "End": 32012
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32040,
      "End": 32044
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32163,
      "End": 32167
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32220,
      "End": 32224
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 32283,
      "End": 32287
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34044,
      "End": 34048
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 345,
      "End": 352
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34707,
      "End": 34711
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34717,
      "End": 34721
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 34745,
      "End": 34749
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36082,
      "End": 36086
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4265,
      "End": 4269
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4294,
      "End": 4298
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4327,
      "End": 4331
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4352,
      "End": 4356
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4377,
      "End": 4381
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4402,
      "End": 4406
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4429,
      "End": 4433
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4458,
      "End": 4462
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4502,
      "End": 4506
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4534,
      "End": 4538
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4570,
      "End": 4574
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4598,
      "End": 4602
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4626,
      "End": 4630
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4654,
      "End": 4658
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4681,
      "End": 4685
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4713,
      "End": 4717
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4942,
      "End": 4946
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 498,
      "End": 502
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 5016,
      "End": 5020
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 5052,
      "End": 5056
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 522,
      "End": 526
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 616,
      "End": 620
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7324,
      "End": 7328
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7389,
      "End": 7393
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7615,
      "End": 7619
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 924,
      "End": 928
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 945,
      "End": 949
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 606,
      "End": 613
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 503,
      "End": 510
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 302,
      "End": 309
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6601,
      "End": 6608
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Generic",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4140,
      "End": 4147
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTML5ASCIIINCOMPAT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7809,
      "End": 7827
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP/$classmethods/build",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 1710,
      "End": 1715
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2330,
      "End": 2340
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP/$methods/request_uri",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2633,
      "End": 2644
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 739,
      "End": 748
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 659,
      "End": 671
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2651,
      "End": 2652
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2675,
      "End": 2676
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2680,
      "End": 2681
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2699,
      "End": 2700
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2709,
      "End": 2710
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@/$methods/request_uri@r",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2728,
      "End": 2729
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 1728,
      "End": 1731
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 1792,
      "End": 1795
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTPS/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 477,
      "End": 489
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTPS",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 417,
      "End": 422
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTPS",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 525,
      "End": 530
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 1705,
      "End": 1709
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 2767,
      "End": 2771
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 599,
      "End": 603
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/HTTP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 425,
      "End": 429
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3489,
      "End": 3510
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4912,
      "End": 4933
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10340,
      "End": 10361
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13953,
      "End": 13974
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 1467,
      "End": 1488
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16168,
      "End": 16189
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18214,
      "End": 18235
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 18434,
      "End": 18455
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20808,
      "End": 20829
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 7817,
      "End": 7838
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9613,
      "End": 9634
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4539,
      "End": 4560
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidComponentError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6035,
      "End": 6056
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3419,
      "End": 3434
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 4148,
      "End": 4163
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10079,
      "End": 10094
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 10205,
      "End": 10220
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 13831,
      "End": 13846
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 16023,
      "End": 16038
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17180,
      "End": 17195
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17302,
      "End": 17317
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17412,
      "End": 17427
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 17939,
      "End": 17954
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 19746,
      "End": 19761
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 20667,
      "End": 20682
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 4780,
      "End": 4795
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 9466,
      "End": 9481
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2897,
      "End": 2912
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4343,
      "End": 4358
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4496,
      "End": 4511
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5370,
      "End": 5385
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2476,
      "End": 2491
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/InvalidURIError",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3657,
      "End": 3672
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$classmethods/build",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1947,
      "End": 1952
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/attributes=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4660,
      "End": 4671
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/attributes",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4406,
      "End": 4416
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3846,
      "End": 3862
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4234,
      "End": 4250
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4544,
      "End": 4560
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4864,
      "End": 4880
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5165,
      "End": 5181
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/build_path_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5495,
      "End": 5511
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/dn=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4326,
      "End": 4329
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/dn",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4136,
      "End": 4138
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/extensions=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5611,
      "End": 5622
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/extensions",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5357,
      "End": 5367
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/filter=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5269,
      "End": 5276
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/filter",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5047,
      "End": 5053
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/hierarchical?",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5757,
      "End": 5770
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2828,
      "End": 2838
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/parse_dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2946,
      "End": 2954
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/parse_dn",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3069,
      "End": 3077
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/parse_query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2961,
      "End": 2972
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/parse_query",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3273,
      "End": 3284
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/scope=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4965,
      "End": 4971
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/scope",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4751,
      "End": 4756
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_attributes",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4494,
      "End": 4508
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4683,
      "End": 4697
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_dn",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4200,
      "End": 4206
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4341,
      "End": 4347
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_extensions",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5445,
      "End": 5459
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5634,
      "End": 5648
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_filter",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5123,
      "End": 5133
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5288,
      "End": 5298
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_scope",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4824,
      "End": 4833
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/$methods/set_scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4983,
      "End": 4992
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3291,
      "End": 3302
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3468,
      "End": 3479
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3942,
      "End": 3953
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4423,
      "End": 4434
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4520,
      "End": 4531
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@attributes",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4567,
      "End": 4578
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3084,
      "End": 3087
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3883,
      "End": 3886
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4145,
      "End": 4148
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4218,
      "End": 4221
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@dn",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4257,
      "End": 4260
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3363,
      "End": 3374
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3636,
      "End": 3647
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3912,
      "End": 3923
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5374,
      "End": 5385
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5471,
      "End": 5482
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@extensions",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5518,
      "End": 5529
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3339,
      "End": 3346
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3578,
      "End": 3585
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3925,
      "End": 3932
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5060,
      "End": 5067
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5145,
      "End": 5152
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@filter",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5188,
      "End": 5195
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3090,
      "End": 3095
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3869,
      "End": 3874
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3391,
      "End": 3397
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3441,
      "End": 3447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4046,
      "End": 4052
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3315,
      "End": 3321
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3523,
      "End": 3529
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3934,
      "End": 3940
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4763,
      "End": 4769
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4845,
      "End": 4851
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/@scope",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4887,
      "End": 4893
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 639,
      "End": 648
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 558,
      "End": 570
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/SCOPE_BASE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1138,
      "End": 1148
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/SCOPE_ONE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1088,
      "End": 1097
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/SCOPE_SUB",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1113,
      "End": 1122
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP/SCOPE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1072,
      "End": 1077
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@/$methods/build_path_query@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 3894,
      "End": 3899
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@/$methods/build_path_query@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 4055,
      "End": 4060
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2076,
      "End": 2081
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2256,
      "End": 2261
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1965,
      "End": 1968
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2020,
      "End": 2023
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2037,
      "End": 2040
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2050,
      "End": 2053
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2242,
      "End": 2245
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 2292,
      "End": 2295
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAPS/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 412,
      "End": 424
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAPS",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 352,
      "End": 357
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAPS",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 460,
      "End": 465
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1942,
      "End": 1946
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 496,
      "End": 500
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 5820,
      "End": 5824
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/LDAP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 360,
      "End": 364
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$classmethods/build",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3172,
      "End": 3177
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/check_headers",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5916,
      "End": 5929
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/check_headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6457,
      "End": 6470
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/check_to",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4997,
      "End": 5005
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/check_to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5788,
      "End": 5796
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/headers=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6439,
      "End": 6447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4258,
      "End": 4268
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4754,
      "End": 4765
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_headers",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6227,
      "End": 6238
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6480,
      "End": 6491
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4735,
      "End": 4741
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_to",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5688,
      "End": 5694
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/set_to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5806,
      "End": 5812
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/to=",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5775,
      "End": 5778
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/to_mailtext",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7205,
      "End": 7216
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/$methods/to_s",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6553,
      "End": 6557
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4316,
      "End": 4324
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6248,
      "End": 6256
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6660,
      "End": 6668
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6694,
      "End": 6702
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@headers",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7287,
      "End": 7295
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4300,
      "End": 4303
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 5704,
      "End": 5707
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6591,
      "End": 6594
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6605,
      "End": 6608
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/COMPONENT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 461,
      "End": 470
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/DEFAULT_PORT",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 378,
      "End": 390
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/EMAIL_REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 1891,
      "End": 1903
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/HEADER_REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 1615,
      "End": 1628
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo/HEADER_REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 6002,
      "End": 6015
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@body",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7271,
      "End": 7275
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@body",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7620,
      "End": 7624
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@head",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7255,
      "End": 7259
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@head",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7612,
      "End": 7616
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7223,
      "End": 7225
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@/$methods/to_mailtext@to",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7606,
      "End": 7608
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3448,
      "End": 3453
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3895,
      "End": 3900
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3941,
      "End": 3946
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3190,
      "End": 3193
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3247,
      "End": 3250
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3281,
      "End": 3284
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3296,
      "End": 3299
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3341,
      "End": 3344
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3356,
      "End": 3359
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3388,
      "End": 3391
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3426,
      "End": 3429
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3471,
      "End": 3474
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3518,
      "End": 3521
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3740,
      "End": 3743
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3847,
      "End": 3850
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3918,
      "End": 3921
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo@_local_0@build@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3989,
      "End": 3992
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 293,
      "End": 299
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3167,
      "End": 3171
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4673,
      "End": 4677
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 4694,
      "End": 4698
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/MailTo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 7703,
      "End": 7709
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 313,
      "End": 319
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 415,
      "End": 421
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 287,
      "End": 293
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3195,
      "End": 3201
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 322,
      "End": 328
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/convert_to_uri",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17479,
      "End": 17493
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/convert_to_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6943,
      "End": 6957
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/escape",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 8441,
      "End": 8447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/extract",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 7496,
      "End": 7503
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/initialize_pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3198,
      "End": 3216
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/initialize_pattern",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9451,
      "End": 9469
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/initialize_regexp",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16125,
      "End": 16142
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/initialize_regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3303,
      "End": 3320
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/initialize",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3159,
      "End": 3169
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/inspect",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9338,
      "End": 9345
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/join",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6915,
      "End": 6919
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/make_regexp",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 7897,
      "End": 7908
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/parse",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17594,
      "End": 17599
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/parse",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6203,
      "End": 6208
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/split",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3667,
      "End": 3672
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/split",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6305,
      "End": 6310
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/$methods/unescape",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9153,
      "End": 9161
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9291,
      "End": 9297
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9352,
      "End": 9358
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3187,
      "End": 3195
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3229,
      "End": 3237
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3270,
      "End": 3278
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3321,
      "End": 3329
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@pattern",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 8027,
      "End": 8035
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3293,
      "End": 3300
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3337,
      "End": 3344
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3377,
      "End": 3384
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 3738,
      "End": 3745
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4589,
      "End": 4596
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser/@regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 7953,
      "End": 7960
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/convert_to_uri@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17556,
      "End": 17559
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/convert_to_uri@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17600,
      "End": 17603
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/escape@unsafe",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 8567,
      "End": 8573
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/extract@result",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 7629,
      "End": 7635
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/extract@result",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 7707,
      "End": 7713
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13779,
      "End": 13787
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13913,
      "End": 13921
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14032,
      "End": 14040
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14162,
      "End": 14170
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14568,
      "End": 14576
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15307,
      "End": 15315
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15886,
      "End": 15894
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14391,
      "End": 14398
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@abs_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14708,
      "End": 14715
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@authority",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13321,
      "End": 13330
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@authority",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14017,
      "End": 14026
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10181,
      "End": 10188
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10390,
      "End": 10397
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12524,
      "End": 12531
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12691,
      "End": 12698
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13261,
      "End": 13268
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13552,
      "End": 13559
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@escaped",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9518,
      "End": 9525
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10523,
      "End": 10531
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14735,
      "End": 14743
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15439,
      "End": 15447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@fragment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16003,
      "End": 16011
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11381,
      "End": 11385
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11474,
      "End": 11478
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11554,
      "End": 11558
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11564,
      "End": 11568
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hex4",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11635,
      "End": 11639
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq1",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11538,
      "End": 11545
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq1",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11771,
      "End": 11778
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq2",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11619,
      "End": 11626
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq2",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11757,
      "End": 11764
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hexseq2",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11788,
      "End": 11795
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hier_part",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14132,
      "End": 14141
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hier_part",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14417,
      "End": 14426
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12144,
      "End": 12148
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12321,
      "End": 12325
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15047,
      "End": 15051
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@host",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15654,
      "End": 15658
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostname",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10698,
      "End": 10706
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostname",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10732,
      "End": 10740
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostname",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12157,
      "End": 12165
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostname",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9893,
      "End": 9901
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostport",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12307,
      "End": 12315
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@hostport",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13059,
      "End": 13067
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv4addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11291,
      "End": 11299
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv4addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11482,
      "End": 11490
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv4addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12169,
      "End": 12177
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11740,
      "End": 11748
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6addr",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11989,
      "End": 11997
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6ref",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11973,
      "End": 11980
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ipv6ref",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12181,
      "End": 12188
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@lastpart",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11457,
      "End": 11465
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@lastpart",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11645,
      "End": 11653
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@net_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14001,
      "End": 14009
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@net_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14150,
      "End": 14158
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@net_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14556,
      "End": 14564
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@opaque_part",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14264,
      "End": 14275
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@opaque_part",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14430,
      "End": 14441
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@opaque_part",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14863,
      "End": 14874
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@param",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12739,
      "End": 12744
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@param",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12837,
      "End": 12842
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@path_segments",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12924,
      "End": 12937
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@path_segments",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13794,
      "End": 13807
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@pchar",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12654,
      "End": 12659
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@pchar",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12750,
      "End": 12755
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@pchar",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12824,
      "End": 12829
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12229,
      "End": 12233
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@port",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12332,
      "End": 12336
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10451,
      "End": 10456
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14183,
      "End": 14188
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14598,
      "End": 14603
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15372,
      "End": 15377
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@query",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15949,
      "End": 15954
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reg_name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13220,
      "End": 13228
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reg_name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13349,
      "End": 13357
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reg_name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15128,
      "End": 15136
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reg_name",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15728,
      "End": 15736
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13882,
      "End": 13890
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14580,
      "End": 14588
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13509,
      "End": 13520
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13896,
      "End": 13907
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15817,
      "End": 15828
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14540,
      "End": 14547
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@rel_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14719,
      "End": 14726
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10168,
      "End": 10176
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@reserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9681,
      "End": 9689
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10128,
      "End": 10131
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10321,
      "End": 10324
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10437,
      "End": 10440
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10506,
      "End": 10509
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10715,
      "End": 10718
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11274,
      "End": 11277
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11723,
      "End": 11726
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11957,
      "End": 11960
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12131,
      "End": 12134
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12290,
      "End": 12293
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12467,
      "End": 12470
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12902,
      "End": 12905
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13203,
      "End": 13206
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13489,
      "End": 13492
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13638,
      "End": 13641
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13762,
      "End": 13765
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13865,
      "End": 13868
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13984,
      "End": 13987
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14114,
      "End": 14117
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14244,
      "End": 14247
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14375,
      "End": 14378
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14524,
      "End": 14527
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14686,
      "End": 14689
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14755,
      "End": 14758
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15501,
      "End": 15504
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16058,
      "End": 16061
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9487,
      "End": 9490
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9502,
      "End": 9505
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9578,
      "End": 9581
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9664,
      "End": 9667
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9742,
      "End": 9745
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9809,
      "End": 9812
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9876,
      "End": 9879
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13653,
      "End": 13659
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14404,
      "End": 14410
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14786,
      "End": 14792
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12811,
      "End": 12818
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12943,
      "End": 12950
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@segment",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12957,
      "End": 12964
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@server",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13030,
      "End": 13036
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@server",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13339,
      "End": 13345
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10155,
      "End": 10165
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10366,
      "End": 10376
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12502,
      "End": 12512
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12669,
      "End": 12679
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13238,
      "End": 13248
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13530,
      "End": 13540
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@unreserved",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9597,
      "End": 9607
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric_no_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10343,
      "End": 10356
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric_no_slash",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14281,
      "End": 14294
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10141,
      "End": 10145
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10462,
      "End": 10466
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 10537,
      "End": 10541
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@uric",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14297,
      "End": 14301
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 12484,
      "End": 12492
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13045,
      "End": 13053
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 14984,
      "End": 14992
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_pattern@userinfo",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 15598,
      "End": 15606
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16158,
      "End": 16161
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16197,
      "End": 16200
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16289,
      "End": 16292
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16407,
      "End": 16410
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16463,
      "End": 16466
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16539,
      "End": 16542
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16649,
      "End": 16652
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16701,
      "End": 16704
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16817,
      "End": 16820
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16880,
      "End": 16883
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 16945,
      "End": 16948
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17006,
      "End": 17009
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17067,
      "End": 17070
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17135,
      "End": 17138
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17200,
      "End": 17203
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17265,
      "End": 17268
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17330,
      "End": 17333
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17392,
      "End": 17395
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/initialize_regexp@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 17458,
      "End": 17461
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4636,
      "End": 4642
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5458,
      "End": 5464
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@opaque",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5657,
      "End": 5663
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4796,
      "End": 4800
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4862,
      "End": 4866
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4914,
      "End": 4918
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5435,
      "End": 5439
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5449,
      "End": 5453
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@path",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5615,
      "End": 5619
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5499,
      "End": 5502
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@ret",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5744,
      "End": 5747
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 4615,
      "End": 4621
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser@_local_0@/$methods/split@scheme",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 5515,
      "End": 5521
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 322,
      "End": 336
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1915,
      "End": 1929
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6300,
      "End": 6304
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1050,
      "End": 1055
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1427,
      "End": 1432
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1441,
      "End": 1446
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1452,
      "End": 1457
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1569,
      "End": 1574
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1580,
      "End": 1585
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALNUM",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 625,
      "End": 630
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALPHA",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1555,
      "End": 1560
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALPHA",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 564,
      "End": 569
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ALPHA",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 636,
      "End": 641
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/DOMLABEL",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1409,
      "End": 1417
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/DOMLABEL",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1677,
      "End": 1685
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/ESCAPED",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 852,
      "End": 859
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/HEX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 788,
      "End": 791
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/HEX",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 867,
      "End": 870
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/HOSTNAME",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1660,
      "End": 1668
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/RESERVED",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1299,
      "End": 1307
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/TOPLABEL",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1537,
      "End": 1545
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/TOPLABEL",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1693,
      "End": 1701
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN/UNRESERVED",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1023,
      "End": 1033
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 11392,
      "End": 11399
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13666,
      "End": 13673
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 13690,
      "End": 13697
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 350,
      "End": 357
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9554,
      "End": 9561
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9638,
      "End": 9645
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9718,
      "End": 9725
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9785,
      "End": 9792
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP/PATTERN",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 9852,
      "End": 9859
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 296,
      "End": 310
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 1942,
      "End": 1956
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC2396_REGEXP",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 277,
      "End": 291
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 339,
      "End": 353
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4138,
      "End": 4152
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4756,
      "End": 4770
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_PARSER",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 5625,
      "End": 5639
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/convert_to_uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4335,
      "End": 4349
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/convert_to_uri",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5678,
      "End": 5692
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/inspect",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4444,
      "End": 4451
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/join",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 5640,
      "End": 5644
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/join",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4297,
      "End": 4301
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/parse",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4771,
      "End": 4776
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/parse",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3732,
      "End": 3737
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/parse",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5793,
      "End": 5798
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/regexp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 595,
      "End": 601
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/regexp",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4498,
      "End": 4504
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/split",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4153,
      "End": 4158
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/split",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2390,
      "End": 2395
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/$methods/split",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3844,
      "End": 3849
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4397,
      "End": 4403
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/@@to_s",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 4458,
      "End": 4464
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/RFC3986_URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 139,
      "End": 150
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/RFC3986_URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2553,
      "End": 2564
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/RFC3986_relative_ref",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 1252,
      "End": 1272
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser/RFC3986_relative_ref",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3290,
      "End": 3310
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/convert_to_uri@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5755,
      "End": 5758
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/convert_to_uri@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 5799,
      "End": 5802
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2584,
      "End": 2587
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2601,
      "End": 2604
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2669,
      "End": 2672
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2701,
      "End": 2704
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2729,
      "End": 2732
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2757,
      "End": 2760
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2789,
      "End": 2792
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2817,
      "End": 2820
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2853,
      "End": 2856
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2906,
      "End": 2909
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2935,
      "End": 2938
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2988,
      "End": 2991
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3019,
      "End": 3022
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3046,
      "End": 3049
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3073,
      "End": 3076
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3105,
      "End": 3108
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3183,
      "End": 3186
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3213,
      "End": 3216
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3241,
      "End": 3244
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3330,
      "End": 3333
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3350,
      "End": 3353
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3379,
      "End": 3382
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3404,
      "End": 3407
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3429,
      "End": 3432
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3459,
      "End": 3462
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3557,
      "End": 3560
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3585,
      "End": 3588
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3611,
      "End": 3614
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2549,
      "End": 2550
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2608,
      "End": 2609
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2631,
      "End": 2632
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2824,
      "End": 2825
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2871,
      "End": 2872
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2885,
      "End": 2886
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2942,
      "End": 2943
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2995,
      "End": 2996
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3026,
      "End": 3027
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3053,
      "End": 3054
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3113,
      "End": 3114
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3134,
      "End": 3135
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3156,
      "End": 3157
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3220,
      "End": 3221
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3248,
      "End": 3249
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3286,
      "End": 3287
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3357,
      "End": 3358
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3386,
      "End": 3387
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3411,
      "End": 3412
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3467,
      "End": 3468
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3488,
      "End": 3489
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3510,
      "End": 3511
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3532,
      "End": 3533
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3592,
      "End": 3593
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@m",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3618,
      "End": 3619
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2416,
      "End": 2419
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2422,
      "End": 2425
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2446,
      "End": 2449
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 2519,
      "End": 2522
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser@_local_0@/$methods/split@uri",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3699,
      "End": 3702
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 356,
      "End": 370
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 19,
      "End": 33
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/RFC3986_Parser",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3839,
      "End": 3843
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLDECWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7493,
      "End": 7507
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLDECWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7756,
      "End": 7770
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLDECWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7784,
      "End": 7798
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLENCWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7343,
      "End": 7357
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLENCWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7441,
      "End": 7455
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/TBLENCWWWCOMP_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7469,
      "End": 7483
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util/$methods/make_components_hash",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 689,
      "End": 709
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util@_local_0@/$methods/make_components_hash@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 1449,
      "End": 1452
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util@_local_0@/$methods/make_components_hash@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 1516,
      "End": 1519
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util@_local_0@/$methods/make_components_hash@tmp",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 735,
      "End": 738
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 666,
      "End": 670
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 3230,
      "End": 3234
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 1734,
      "End": 1738
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 1971,
      "End": 1975
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/Util",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 3196,
      "End": 3200
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/VERSION_CODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri.rb",
      "Start": 2815,
      "End": 2827
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/VERSION_CODE",
      "Def": false,
      "Repo": "",
      "File": "lib/uri.rb",
      "Start": 2858,
      "End": 2870
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/VERSION",
      "Def": false,
      "Repo": "",
      "File": "lib/uri.rb",
      "Start": 2848,
      "End": 2855
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI/WEB_ENCODINGS_",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 12844,
      "End": 12858
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@decode_www_form@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11761,
      "End": 11764
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@decode_www_form@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11781,
      "End": 11784
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@decode_www_form@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 12378,
      "End": 12381
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@decode_www_form@ary",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 12495,
      "End": 12498
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@decode_www_form@enc",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11803,
      "End": 11806
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8444,
      "End": 8447
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8450,
      "End": 8453
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8470,
      "End": 8473
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8559,
      "End": 8562
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8632,
      "End": 8635
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8696,
      "End": 8699
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8749,
      "End": 8752
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI@_local_9@encode_www_form_component@str",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8800,
      "End": 8803
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri.rb",
      "Start": 2795,
      "End": 2798
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 10374,
      "End": 10378
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11540,
      "End": 11544
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 11682,
      "End": 11686
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19199,
      "End": 19203
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 19492,
      "End": 19495
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 281,
      "End": 284
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 3268,
      "End": 3272
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4118,
      "End": 4122
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 4736,
      "End": 4740
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 5605,
      "End": 5609
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 6250,
      "End": 6254
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 7195,
      "End": 7199
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8395,
      "End": 8399
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/common.rb",
      "Start": 8994,
      "End": 8998
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ftp.rb",
      "Start": 234,
      "End": 237
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 237,
      "End": 240
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2476,
      "End": 2481
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2576,
      "End": 2581
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 2783,
      "End": 2788
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 28343,
      "End": 28346
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 365,
      "End": 368
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/generic.rb",
      "Start": 36591,
      "End": 36594
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/http.rb",
      "Start": 235,
      "End": 238
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/https.rb",
      "Start": 233,
      "End": 236
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldap.rb",
      "Start": 363,
      "End": 366
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/ldaps.rb",
      "Start": 168,
      "End": 171
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/mailto.rb",
      "Start": 237,
      "End": 240
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 222,
      "End": 225
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6336,
      "End": 6339
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 6384,
      "End": 6387
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3875,
      "End": 3878
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": false,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 3923,
      "End": 3926
    },
    {
      "SymbolRepo": "",
      "SymbolUnitType": "",
      "SymbolUnit": "",
      "SymbolPath": "URI",
      "Def": true,
      "Repo": "",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 7,
      "End": 10
    }
  ],
  "Docs": [
    {
      "Path": "Kernel",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003emodule URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003euri\u003c/code\u003e converted to a URI object.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003euri\u003c/code\u003e converted to a URI object.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Kernel/$classmethods/URI",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003euri\u003c/code\u003e converted to a URI object.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Kernel/$methods/URI",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003euri\u003c/code\u003e converted to a URI object.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003e\u003cstrong\u003eSocket\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eClass \u003ccode\u003eSocket\u003c/code\u003e provides access to the underlying operating\nsystem socket implementations.  It can be used to provide more operating\nsystem specific functionality than the protocol-specific socket classes.\u003c/p\u003e\n\n\u003cp\u003eThe constants defined under Socket::Constants are also defined under\nSocket.  For example, Socket::AF_INET is usable as well as\nSocket::Constants::AF_INET.  See Socket::Constants for the list of\nconstants.\u003c/p\u003e\n\n\u003ch3 id=\"label-What%27s+a+socket%3F\"\u003eWhat\u0026#39;s a socket?\u003c/h3\u003e\n\n\u003cp\u003eSockets are endpoints of a bidirectional communication channel. Sockets can\ncommunicate within a process, between processes on the same machine or\nbetween different machines.  There are many types of socket: TCPSocket,\nUDPSocket or UNIXSocket for example.\u003c/p\u003e\n\n\u003cp\u003eSockets have their own vocabulary:\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003edomain:\u003c/strong\u003e The family of protocols:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket::PF_INET\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eSocket::PF_INET6\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eSocket::PF_UNIX\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eetc.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003etype:\u003c/strong\u003e The type of communications between the two\nendpoints, typically\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket::SOCK_STREAM\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eSocket::SOCK_DGRAM.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cstrong\u003eprotocol:\u003c/strong\u003e Typically \u003cem\u003ezero\u003c/em\u003e. This may be used to\nidentify a variant of a protocol.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003ehostname:\u003c/strong\u003e The identifier of a network interface:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003ea string (hostname, IPv4 or IPv6 address or \u003ccode\u003ebroadcast\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003ewhich specifies a broadcast address)\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003ea zero-length string which specifies INADDR_ANY\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003ean integer (interpreted as binary address in host byte order).\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Quick+start\"\u003eQuick start\u003c/h3\u003e\n\n\u003cp\u003eMany of the classes, such as TCPSocket, UDPSocket or UNIXSocket, ease the\nuse of sockets comparatively to the equivalent C programming interface.\u003c/p\u003e\n\n\u003cp\u003eLet\u0026#39;s create an internet socket using the IPv4 protocol in a C-like\nmanner:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eAF_INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eSOCK_STREAM\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_connect'\u003econnect\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pack_sockaddr_in'\u003epack_sockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eexample.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou could also use the TCPSocket class:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTCPSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eexample.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e80\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA simple server might look like this:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003esocket\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_server'\u003eserver\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTCPServer\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e \u003cspan class='int'\u003e2000\u003c/span\u003e \u003cspan class='comment'\u003e# Server bound to port 2000\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_loop'\u003eloop\u003c/span\u003e \u003cspan class='kw'\u003edo\u003c/span\u003e\n  \u003cspan class='id identifier rubyid_client'\u003eclient\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_server'\u003eserver\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_accept'\u003eaccept\u003c/span\u003e    \u003cspan class='comment'\u003e# Wait for a client to connect\n\u003c/span\u003e  \u003cspan class='id identifier rubyid_client'\u003eclient\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_puts'\u003eputs\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHello !\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n  \u003cspan class='id identifier rubyid_client'\u003eclient\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_puts'\u003eputs\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eTime is \u003c/span\u003e\u003cspan class='embexpr_beg'\u003e#{\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\u003cspan class='embexpr_end'\u003e}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n  \u003cspan class='id identifier rubyid_client'\u003eclient\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e\n\u003cspan class='kw'\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA simple client may look like this:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003esocket\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTCPSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003elocalhost\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2000\u003c/span\u003e\n\n\u003cspan class='kw'\u003ewhile\u003c/span\u003e \u003cspan class='id identifier rubyid_line'\u003eline\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gets'\u003egets\u003c/span\u003e \u003cspan class='comment'\u003e# Read lines from socket\n\u003c/span\u003e  \u003cspan class='id identifier rubyid_puts'\u003eputs\u003c/span\u003e \u003cspan class='id identifier rubyid_line'\u003eline\u003c/span\u003e         \u003cspan class='comment'\u003e# and print them\n\u003c/span\u003e\u003cspan class='kw'\u003eend\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e             \u003cspan class='comment'\u003e# close socket when done\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"label-Exception+Handling\"\u003eException Handling\u003c/h3\u003e\n\n\u003cp\u003eRuby\u0026#39;s Socket implementation raises exceptions based on the error\ngenerated by the system dependent implementation.  This is why the methods\nare documented in a way that isolate Unix-based system exceptions from\nWindows based exceptions. If more information on a particular exception is\nneeded, please refer to the Unix manual pages or the Windows WinSock\nreference.\u003c/p\u003e\n\n\u003ch3 id=\"label-Convenience+methods\"\u003eConvenience methods\u003c/h3\u003e\n\n\u003cp\u003eAlthough the general way to create socket is Socket.new, there are several\nmethods of socket creation for most cases.\u003c/p\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003eTCP client socket\n\u003cdd\u003e\n\u003cp\u003eSocket.tcp, TCPSocket.open\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eTCP server socket\n\u003cdd\u003e\n\u003cp\u003eSocket.tcp_server_loop, TCPServer.open\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eUNIX client socket\n\u003cdd\u003e\n\u003cp\u003eSocket.unix, UNIXSocket.open\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eUNIX server socket\n\u003cdd\u003e\n\u003cp\u003eSocket.unix_server_loop, UNIXServer.open\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch3 id=\"label-Documentation+by\"\u003eDocumentation by\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eZach Dennis\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eSam Roberts\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003cem\u003eProgramming Ruby\u003c/em\u003e from The Pragmatic Bookshelf.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003eMuch material in this documentation is taken with permission from\n\u003cem\u003eProgramming Ruby\u003c/em\u003e from The Pragmatic Bookshelf.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new socket object.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e is optional and should be a protocol defined in the\ndomain. If protocol is not given, 0 is used internally.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# TCP socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e# UDP socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# UNIX stream socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e# UNIX datagram socket\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains address information for \u003cem\u003enodename\u003c/em\u003e:\u003cem\u003eservname\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003efamily\u003c/em\u003e should be an address family such as: :INET, :INET6, :UNIX,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the family, and defaults\nto 0 for the family.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eflags\u003c/em\u003e should be bitwise OR of Socket::AI_* constants.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getaddrinfo'\u003egetaddrinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.ruby-lang.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 80, \u0026quot;carbon.ruby-lang.org\u0026quot;, \u0026quot;221.186.184.68\u0026quot;, 2, 1, 6]] # PF_INET/SOCK_STREAM/IPPROTO_TCP\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getaddrinfo'\u003egetaddrinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elocalhost\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 1, 6],  # PF_INET/SOCK_STREAM/IPPROTO_TCP\n\u003c/span\u003e\u003cspan class='comment'\u003e#    [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 2, 17], # PF_INET/SOCK_DGRAM/IPPROTO_UDP\n\u003c/span\u003e\u003cspan class='comment'\u003e#    [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 3, 0]]  # PF_INET/SOCK_RAW/IPPROTO_IP\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003ereverse_lookup\u003c/em\u003e directs the form of the third element, and has to\nbe one of below.  If \u003cem\u003ereverse_lookup\u003c/em\u003e is omitted, the default value\nis \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e+true+, +:hostname+:  hostname is obtained from numeric address using reverse lookup, which may take a time.\n+false+, +:numeric+:  hostname is same as numeric address.\n+nil+:              obey to the current +do_not_reverse_lookup+ flag.\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf Addrinfo object is preferred, use Addrinfo.getaddrinfo.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the host information for \u003cem\u003eaddress\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gethostbyaddr'\u003egethostbyaddr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e221\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e186\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e184\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e68\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pack'\u003epack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eCCCC\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;carbon.ruby-lang.org\u0026quot;, [], 2, \u0026quot;\\xDD\\xBA\\xB8D\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the host information for \u003cem\u003ehostname\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gethostbyname'\u003egethostbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehal\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, [\u0026quot;hal\u0026quot;], 2, \u0026quot;\\x7F\\x00\\x00\\x01\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains name information for \u003cem\u003esockaddr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be one of follows.\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003epacked sockaddr string such as Socket.sockaddr_in(80, “127.0.0.1”)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e3-elements array such as [“AF_INET”, 80, “127.0.0.1”]\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e4-elements array such as [“AF_INET”, 80, ignored, “127.0.0.1”]\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eflags\u003c/em\u003e should be bitwise OR of Socket::NI_* constants.\u003c/p\u003e\n\n\u003cp\u003eNote: The last form is compatible with IPSocket#addr and IPSocket#peeraddr.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAF_INET\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAF_INET\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elocalhost\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf Addrinfo object is preferred, use Addrinfo#getnameinfo.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the port number for \u003cem\u003eservice_name\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003eprotocol_name\u003c/em\u003e is not given, “tcp” is assumed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esmtp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 25\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eshell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 514\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esyslog\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eudp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 514\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the port number for \u003cem\u003eport\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003eprotocol_name\u003c/em\u003e is not given, “tcp” is assumed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;www\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e514\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003etcp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;shell\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e514\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eudp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;syslog\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns local IP addresses as an array.\u003c/p\u003e\n\n\u003cp\u003eThe array contains Addrinfo objects.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003epp Socket.ip_address_list\n#=\u0026gt; [#\u0026lt;Addrinfo: 127.0.0.1\u0026gt;,\n     #\u0026lt;Addrinfo: 192.168.0.128\u0026gt;,\n     #\u0026lt;Addrinfo: ::1\u0026gt;,\n     ...]\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003eport\u003c/em\u003e and \u003cem\u003ehost\u003c/em\u003e as an AF_INET/AF_INET6 sockaddr\nstring.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e::1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003epath\u003c/em\u003e as an AF_UNIX sockaddr string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x01\\x00/tmp/sock\\x00\\x00...\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a pair of sockets connected each other.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the domain, defaults to 0\nfor the domain.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ab\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;b\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003esocketpair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003eport\u003c/em\u003e and \u003cem\u003ehost\u003c/em\u003e as an AF_INET/AF_INET6 sockaddr\nstring.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e::1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003epath\u003c/em\u003e as an AF_UNIX sockaddr string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x01\\x00/tmp/sock\\x00\\x00...\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a pair of sockets connected each other.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the domain, defaults to 0\nfor the domain.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ab\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;b\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003esocketpair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUnpacks \u003cem\u003esockaddr\u003c/em\u003e into port and ip_address.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be a string or an addrinfo for AF_INET/AF_INET6.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack_sockaddr_in'\u003eunpack_sockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [80, \u0026quot;127.0.0.1\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUnpacks \u003cem\u003esockaddr\u003c/em\u003e into path.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be a string or an addrinfo for AF_UNIX.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack_sockaddr_un'\u003eunpack_sockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;/tmp/sock\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts a next connection. Returns a new Socket object and Addrinfo object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_listen'\u003elisten\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_connect'\u003econnect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_connect_address'\u003econnect_address\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_accept'\u003eaccept\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [#\u0026lt;Socket:fd 6\u0026gt;, #\u0026lt;Addrinfo: 127.0.0.1:48555 TCP\u0026gt;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. It returns an array containing the accepted\nsocket for the incoming connection, \u003cem\u003eclient_socket\u003c/em\u003e, and an\nAddrinfo, \u003cem\u003eclient_addrinfo\u003c/em\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one script, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.bind(sockaddr)\n\u0009socket.listen(5) \u0009begin # emulate blocking accept \u0009  client_socket,\nclient_addrinfo = socket.accept_nonblock \u0009rescue IO::WaitReadable,\nErrno::EINTR \u0009  \u003ca href=\"socket\"\u003eIO.select(\u003c/a\u003e) \u0009  retry \u0009end \u0009puts “The\nclient said, \u0026#39;#Socket.client_socketclient_socket.readlineclient_socket.readline.chomp\u0026#39;” \u0009client_socket.puts\n“Hello from script one!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another script, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.connect(sockaddr)\n\u0009socket.puts “Hello from script 2.” \u0009puts “The server said,\n\u0026#39;#Socket.socketsocket.readlinesocket.readline.chomp\u0026#39;” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#accept for the exceptions that may be thrown if the call to\n\u003cem\u003eaccept_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#accept_nonblock may raise any error corresponding to accept(2)\nfailure, including Errno::EWOULDBLOCK.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EWOULDBLOCK, Errno::AGAIN, Errno::ECONNABORTED\nor Errno::EPROTO, it is extended by IO::WaitReadable. So IO::WaitReadable\ncan be used to rescue the exceptions for retrying accept_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#accept\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBinds to the given local address.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003elocal_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained in\na string or an Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39;\u003c/p\u003e\n\n\u003cp\u003e# use Addrinfo \u0009socket = Socket.new(:INET, :STREAM, 0)\n\u0009socket.bind(Addrinfo.tcp(“127.0.0.1”, 2222)) \u0009p socket.local_address\n#=\u0026gt; #\u0026lt;Addrinfo: 127.0.0.1:2222 TCP\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e# use struct sockaddr \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009sockaddr = Socket.pack_sockaddr_in( 2200,\n\u0026#39;localhost\u0026#39; ) \u0009socket.bind( sockaddr )\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the specified \u003cem\u003esockaddr\u003c/em\u003e is protected and the\ncurrent user does not have permission to bind to it\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the specified \u003cem\u003esockaddr\u003c/em\u003e is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified \u003cem\u003esockaddr\u003c/em\u003e is not available\nfrom the local machine\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - the specified \u003cem\u003esockaddr\u003c/em\u003e is not a valid\naddress for the family of the calling \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003cem\u003esockaddr\u003c/em\u003e specified is not a valid file\ndescriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the \u003cem\u003esockaddr\u003c/em\u003e argument cannot be accessed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is already bound to an address, and\nthe protocol does not support binding to the new \u003cem\u003esockaddr\u003c/em\u003e or the\n\u003ccode\u003esocket\u003c/code\u003e has been shut down.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the address length is not a valid length for the address\nfamily\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLONG - the pathname resolved had a length which exceeded\nPATH_MAX\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the socket type of the \u003ccode\u003esocket\u003c/code\u003e does not\nsupport binding to an address\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003eOn unix-based based systems if the address family of the calling\n\u003ccode\u003esocket\u003c/code\u003e is Socket::AF_UNIX the follow exceptions may be raised\nif the call to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - search permission is denied for a component of the prefix\npath or write access to the \u003ccode\u003esocket\u003c/code\u003e is denied\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EDESTADDRREQ - the \u003cem\u003esockaddr\u003c/em\u003e argument is a null pointer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISDIR - same as Errno::EDESTADDRREQ\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ELOOP - too many symbolic links were encountered in translating the\npathname in \u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\ncharacters, or an entire pathname exceeded PATH_MAX characters\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOENT - a component of the pathname does not name an existing file\nor the pathname is an empty string\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTDIR - a component of the path prefix of the pathname in\n\u003cem\u003esockaddr\u003c/em\u003e is not a directory\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EROFS - the name would reside on a read only filesystem\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN– the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the attempt to connect the datagram socket to the broadcast\naddress failed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified address is not a valid address for\nthis computer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal address or address length\nparameter is too small or is not a valid part of the user space addressed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is already bound to an address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003ebind manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003ebind function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRequests a connection to be made on the given \u003ccode\u003eremote_sockaddr\u003c/code\u003e.\nReturns 0 if successful, otherwise an exception is raised.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eremote_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained\nin a string or Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example%3A\"\u003eExample:\u003c/h3\u003e\n\n\u003cp\u003e# Pull down Google\u0026#39;s web page \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 80, \u0026#39;\u003ca\nhref=\"www.google.com\"\u003ewww.google.com\u003c/a\u003e\u0026#39; ) \u0009socket.connect( sockaddr )\n\u0009socket.write( “GET / HTTP/1.0rnrn” ) \u0009results = socket.read\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based systems the following system exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - search permission is denied for a component of the prefix\npath or write access to the \u003ccode\u003esocket\u003c/code\u003e is denied\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the \u003cem\u003esockaddr\u003c/em\u003e is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified \u003cem\u003esockaddr\u003c/em\u003e is not available\nfrom the local machine\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - the specified \u003cem\u003esockaddr\u003c/em\u003e is not a valid\naddress for the address family of the specified \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EALREADY - a connection is already in progress for the specified\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003ccode\u003esocket\u003c/code\u003e is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNREFUSED - the target \u003cem\u003esockaddr\u003c/em\u003e was not listening for\nconnections refused the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - the remote host reset the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the \u003cem\u003esockaddr\u003c/em\u003e cannot be accessed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EHOSTUNREACH - the destination host cannot be reached (probably\nbecause the host is down or a remote router cannot reach it)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - the O_NONBLOCK is set for the \u003ccode\u003esocket\u003c/code\u003e and\nthe connection cannot be immediately established; the connection will be\nestablished asynchronously\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the attempt to establish the connection was interrupted by\ndelivery of a signal that was caught; the connection will be established\nasynchronously\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the specified \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the address length used for the \u003cem\u003esockaddr\u003c/em\u003e is not a\nvalid length for the address family or there is an invalid family in\n\u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLONG - the pathname resolved had a length which exceeded\nPATH_MAX\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the local interface used to reach the destination is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETUNREACH - no route to the network is present\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the calling \u003ccode\u003esocket\u003c/code\u003e is listening and cannot\nbe connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EPROTOTYPE - the \u003cem\u003esockaddr\u003c/em\u003e has a different type than the\nsocket bound to the specified peer address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the attempt to connect time out before a connection was\nmade.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003eOn unix-based systems if the address family of the calling\n\u003ccode\u003esocket\u003c/code\u003e is AF_UNIX the follow exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred while reading from or writing to the\nfile system\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ELOOP - too many symbolic links were encountered in translating the\npathname in \u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\ncharacters, or an entire pathname exceeded PATH_MAX characters\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOENT - a component of the pathname does not name an existing file\nor the pathname is an empty string\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTDIR - a component of the path prefix of the pathname in\n\u003cem\u003esockaddr\u003c/em\u003e is not a directory\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the socket was cancelled\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a blocking socket is in progress or the service\nprovider is still processing a callback function. Or a nonblocking connect\ncall is in progress on the \u003ccode\u003esocket\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EALREADY - see Errno::EINVAL\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the remote address is not a valid address, such as\nADDR_ANY TODO check ADDRANY TO INADDR_ANY\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - addresses in the specified family cannot be used with\nwith this \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNREFUSED - the target \u003cem\u003esockaddr\u003c/em\u003e was not listening for\nconnections refused the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal address or address length\nparameter is too small or is not a valid part of the user space address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is a listening socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETUNREACH - the network cannot be reached from this host at this\ntime\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EHOSTUNREACH - no route to the network is present\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the attempt to connect time out before a connection was\nmade.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - the socket is marked as nonblocking and the connection\ncannot be completed immediately\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the attempt to connect the datagram socket to the broadcast\naddress failed\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003econnect manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003econnect function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRequests a connection to be made on the given \u003ccode\u003eremote_sockaddr\u003c/code\u003e\nafter O_NONBLOCK is set for the underlying file descriptor. Returns 0 if\nsuccessful, otherwise an exception is raised.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eremote_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained\nin a string or Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example%3A\"\u003eExample:\u003c/h3\u003e\n\n\u003cp\u003e# Pull down Google\u0026#39;s web page \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(80, \u0026#39;\u003ca\nhref=\"www.google.com\"\u003ewww.google.com\u003c/a\u003e\u0026#39;) \u0009begin # emulate blocking\nconnect \u0009  socket.connect_nonblock(sockaddr) \u0009rescue IO::WaitWritable \u0009 \nIO.select(nil, [socket]) # wait 3-way handshake completion \u0009  begin \u0009   \nsocket.connect_nonblock(sockaddr) # check connection failure \u0009  rescue\nErrno::EISCONN \u0009  end \u0009end \u0009socket.write(“GET / HTTP/1.0rnrn”) \u0009results =\nsocket.read\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#connect for the exceptions that may be thrown if the call\nto \u003cem\u003econnect_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#connect_nonblock may raise any error corresponding to connect(2)\nfailure, including Errno::EINPROGRESS.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EINPROGRESS, it is extended by IO::WaitWritable.\nSo IO::WaitWritable can be used to rescue the exceptions for retrying\nconnect_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#connect\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eListens for connections, using the specified \u003ccode\u003eint\u003c/code\u003e as the\nbacklog. A call to \u003cem\u003elisten\u003c/em\u003e only applies if the \u003ccode\u003esocket\u003c/code\u003e\nis of type SOCK_STREAM or SOCK_SEQPACKET.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ebacklog\u003c/code\u003e - the maximum length of the queue for pending\nconnections.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example+1\"\u003eExample 1\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39; \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009sockaddr = Socket.pack_sockaddr_in( 2200,\n\u0026#39;localhost\u0026#39; ) \u0009socket.bind( sockaddr ) \u0009socket.listen( 5 )\u003c/p\u003e\n\n\u003ch3 id=\"label-Example+2+%28listening+on+an+arbitrary+port%2C+unix-based+systems+only%29%3A\"\u003eExample 2 (listening on an arbitrary port, unix-based systems only):\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39; \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009socket.listen( 1 )\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix based systems the above will work because a new\n\u003ccode\u003esockaddr\u003c/code\u003e struct is created on the address ADDR_ANY, for an\narbitrary port number as handed off by the kernel. It will not work on\nWindows, because Windows requires that the \u003ccode\u003esocket\u003c/code\u003e is bound by\ncalling \u003cem\u003ebind\u003c/em\u003e before it can \u003cem\u003elisten\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003cem\u003ebacklog\u003c/em\u003e amount exceeds the implementation-dependent maximum\nqueue length, the implementation\u0026#39;s maximum queue length will be used.\u003c/p\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003elisten\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003cem\u003esocket\u003c/em\u003e argument is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EDESTADDRREQ - the \u003cem\u003esocket\u003c/em\u003e is not bound to a local address,\nand the protocol does not support listening on an unbound socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003cem\u003esocket\u003c/em\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003cem\u003esocket\u003c/em\u003e argument does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the \u003cem\u003esocket\u003c/em\u003e protocol does not support listen\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the calling process does not have appropriate privileges\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003cem\u003esocket\u003c/em\u003e has been shut down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - insufficient resources are available in the system to\ncomplete the call\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003elisten\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use. This\nusually occurs during the execution of \u003cem\u003ebind\u003c/em\u003e but could be delayed\nif the call to \u003cem\u003ebind\u003c/em\u003e was to a partially wildcard address (involving\nADDR_ANY) and if a specific address needs to be committed at the time of\nthe call to \u003cem\u003elisten\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a Windows Sockets 1.1 call is in progress or the\nservice provider is still processing a callback function\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e has not been bound with a call to\n\u003cem\u003ebind\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EMFILE - no more socket descriptors are available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOC - \u003ccode\u003esocket\u003c/code\u003e is not a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the referenced \u003ccode\u003esocket\u003c/code\u003e is not a type that\nsupports the \u003cem\u003elisten\u003c/em\u003e method\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003elisten manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003elisten function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReceives up to \u003cem\u003emaxlen\u003c/em\u003e bytes from \u003ccode\u003esocket\u003c/code\u003e.\n\u003cem\u003eflags\u003c/em\u003e is zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options. The first\nelement of the results, \u003cem\u003emesg\u003c/em\u003e, is the data received. The second\nelement, \u003cem\u003esender_addrinfo\u003c/em\u003e, contains protocol-specific address\ninformation of the sender.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameters\"\u003eParameters\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emaxlen\u003c/code\u003e - the maximum number of bytes to receive from the\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eflags\u003c/code\u003e - zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one file, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.bind(\nsockaddr ) \u0009socket.listen( 5 ) \u0009client, client_addrinfo = socket.accept\n\u0009data = client.recvfrom( 20 )[0].chomp \u0009puts “I only received 20 bytes\n\u0026#39;#data\u0026#39;” \u0009sleep 1 \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another file, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.connect(\nsockaddr ) \u0009socket.puts “Watch this get cut short!” \u0009socket.close\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003erecvfrom\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAGAIN - the \u003ccode\u003esocket\u003c/code\u003e file descriptor is marked as\nO_NONBLOCK and no data is waiting to be received; or MSG_OOB is set and no\nout-of-band data is available and either the \u003ccode\u003esocket\u003c/code\u003e file\ndescriptor is marked as O_NONBLOCK or the \u003ccode\u003esocket\u003c/code\u003e does not\nsupport blocking to wait for out-of-band-data\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - see Errno::EAGAIN\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003ccode\u003esocket\u003c/code\u003e is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - a connection was forcibly closed by a peer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal buffer, address or address length\ncannot be accessed or written\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - a signal interrupted \u003cem\u003erecvfrom\u003c/em\u003e before any data was\navailable\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the MSG_OOB flag is set and no out-of-band data is\navailable\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred while reading from or writing to the\nfilesystem\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - insufficient resources were available in the system to\nperform the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOMEM - insufficient memory was available to fulfill the request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTCONN - a receive is attempted on a connection-mode socket that\nis not connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the specified flags are not supported for this socket\ntype\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the connection timed out during connection establishment\nor due to a transmission timeout on an active connection\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003erecvfrom\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the internal buffer and from parameters on\n\u003ccode\u003esocket\u003c/code\u003e are not part of the user address space, or the internal\nfromlen parameter is too small to accommodate the peer address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the (blocking) call was cancelled by an internal call to the\nWinSock function WSACancelBlockingCall\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a blocking Windows Sockets 1.1 call is in progress or\nthe service provider is still processing a callback function\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - \u003ccode\u003esocket\u003c/code\u003e has not been bound with a call to\n\u003cem\u003ebind\u003c/em\u003e, or an unknown flag was specified, or MSG_OOB was specified\nfor a socket with SO_OOBINLINE enabled, or (for byte stream-style sockets\nonly) the internal len parameter on \u003ccode\u003esocket\u003c/code\u003e was zero or\nnegative\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - \u003ccode\u003esocket\u003c/code\u003e is already connected. The call to\n\u003cem\u003erecvfrom\u003c/em\u003e is not permitted with a connected socket on a socket that\nis connection oriented or connectionless.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETRESET - the connection has been broken due to the keep-alive\nactivity detecting a failure while the operation was in progress.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - MSG_OOB was specified, but \u003ccode\u003esocket\u003c/code\u003e is not\nstream-style such as type SOCK_STREAM. OOB data is not supported in the\ncommunication domain associated with \u003ccode\u003esocket\u003c/code\u003e, or\n\u003ccode\u003esocket\u003c/code\u003e is unidirectional and supports only send operations\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ESHUTDOWN - \u003ccode\u003esocket\u003c/code\u003e has been shutdown. It is not\npossible to call \u003cem\u003erecvfrom\u003c/em\u003e on a socket after \u003cem\u003eshutdown\u003c/em\u003e has\nbeen invoked.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - \u003ccode\u003esocket\u003c/code\u003e is marked as nonblocking and a \ncall to \u003cem\u003erecvfrom\u003c/em\u003e would block.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EMSGSIZE - the message was too large to fit into the specified\nbuffer and was truncated.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the connection has been dropped, because of a network\nfailure or because the system on the other end went down without notice\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - the virtual circuit was reset by the remote side\nexecuting a hard or abortive close. The application should close the\nsocket; it is no longer usable. On a UDP-datagram socket this error\nindicates a previous send operation resulted in an ICMP Port Unreachable\nmessage.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom\u003c/strong\u003e(maxlen) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom\u003c/strong\u003e(maxlen, flags) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReceives up to \u003cem\u003emaxlen\u003c/em\u003e bytes from \u003ccode\u003esocket\u003c/code\u003e using\nrecvfrom(2) after O_NONBLOCK is set for the underlying file descriptor.\n\u003cem\u003eflags\u003c/em\u003e is zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options. The first\nelement of the results, \u003cem\u003emesg\u003c/em\u003e, is the data received. The second\nelement, \u003cem\u003esender_addrinfo\u003c/em\u003e, contains protocol-specific address\ninformation of the sender.\u003c/p\u003e\n\n\u003cp\u003eWhen recvfrom(2) returns 0, Socket#recvfrom_nonblock returns an empty\nstring as data. The meaning depends on the socket: EOF on TCP, empty packet\non UDP, etc.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameters\"\u003eParameters\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emaxlen\u003c/code\u003e - the maximum number of bytes to receive from the\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eflags\u003c/code\u003e - zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one file, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.bind(sockaddr)\n\u0009socket.listen(5) \u0009client, client_addrinfo = socket.accept \u0009begin # emulate\nblocking recvfrom \u0009  pair = client.recvfrom_nonblock(20) \u0009rescue\nIO::WaitReadable \u0009  \u003ca href=\"client\"\u003eIO.select(\u003c/a\u003e) \u0009  retry \u0009end \u0009data =\n\u003ca href=\"0\"\u003epair\u003c/a\u003e.chomp \u0009puts “I only received 20 bytes\n\u0026#39;#data\u0026#39;” \u0009sleep 1 \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another file, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.connect(sockaddr)\n\u0009socket.puts “Watch this get cut short!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#recvfrom for the exceptions that may be thrown if the call\nto \u003cem\u003erecvfrom_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#recvfrom_nonblock may raise any error corresponding to recvfrom(2)\nfailure, including Errno::EWOULDBLOCK.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EWOULDBLOCK or Errno::AGAIN, it is extended by\nIO::WaitReadable. So IO::WaitReadable can be used to rescue the exceptions\nfor retrying recvfrom_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#recvfrom\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom_nonblock\u003c/strong\u003e(maxlen) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom_nonblock\u003c/strong\u003e(maxlen, flags) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts an incoming connection returning an array containing the (integer)\nfile descriptor for the incoming connection, \u003cem\u003eclient_socket_fd\u003c/em\u003e, and\nan Addrinfo, \u003cem\u003eclient_addrinfo\u003c/em\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one script, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.bind(\nsockaddr ) \u0009socket.listen( 5 ) \u0009client_fd, client_addrinfo =\nsocket.sysaccept \u0009client_socket = Socket.for_fd( client_fd ) \u0009puts “The\nclient said, \u0026#39;#Socket.client_socketclient_socket.readlineclient_socket.readline.chomp\u0026#39;” \u0009client_socket.puts\n“Hello from script one!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another script, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.connect(\nsockaddr ) \u0009socket.puts “Hello from script 2.” \u0009puts “The server said,\n\u0026#39;#Socket.socketsocket.readlinesocket.readline.chomp\u0026#39;” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#accept for the exceptions that may be thrown if the call to\n\u003cem\u003esysaccept\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#accept\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/getaddrinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains address information for \u003cem\u003enodename\u003c/em\u003e:\u003cem\u003eservname\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003efamily\u003c/em\u003e should be an address family such as: :INET, :INET6, :UNIX,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the family, and defaults\nto 0 for the family.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eflags\u003c/em\u003e should be bitwise OR of Socket::AI_* constants.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getaddrinfo'\u003egetaddrinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.ruby-lang.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 80, \u0026quot;carbon.ruby-lang.org\u0026quot;, \u0026quot;221.186.184.68\u0026quot;, 2, 1, 6]] # PF_INET/SOCK_STREAM/IPPROTO_TCP\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getaddrinfo'\u003egetaddrinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elocalhost\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 1, 6],  # PF_INET/SOCK_STREAM/IPPROTO_TCP\n\u003c/span\u003e\u003cspan class='comment'\u003e#    [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 2, 17], # PF_INET/SOCK_DGRAM/IPPROTO_UDP\n\u003c/span\u003e\u003cspan class='comment'\u003e#    [\u0026quot;AF_INET\u0026quot;, 0, \u0026quot;localhost\u0026quot;, \u0026quot;127.0.0.1\u0026quot;, 2, 3, 0]]  # PF_INET/SOCK_RAW/IPPROTO_IP\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003ereverse_lookup\u003c/em\u003e directs the form of the third element, and has to\nbe one of below.  If \u003cem\u003ereverse_lookup\u003c/em\u003e is omitted, the default value\nis \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e+true+, +:hostname+:  hostname is obtained from numeric address using reverse lookup, which may take a time.\n+false+, +:numeric+:  hostname is same as numeric address.\n+nil+:              obey to the current +do_not_reverse_lookup+ flag.\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf Addrinfo object is preferred, use Addrinfo.getaddrinfo.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/gethostbyaddr",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the host information for \u003cem\u003eaddress\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gethostbyaddr'\u003egethostbyaddr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e221\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e186\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e184\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e68\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pack'\u003epack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eCCCC\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;carbon.ruby-lang.org\u0026quot;, [], 2, \u0026quot;\\xDD\\xBA\\xB8D\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/gethostbyname",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the host information for \u003cem\u003ehostname\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gethostbyname'\u003egethostbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehal\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, [\u0026quot;hal\u0026quot;], 2, \u0026quot;\\x7F\\x00\\x00\\x01\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/getnameinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains name information for \u003cem\u003esockaddr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be one of follows.\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003epacked sockaddr string such as Socket.sockaddr_in(80, “127.0.0.1”)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e3-elements array such as [“AF_INET”, 80, “127.0.0.1”]\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e4-elements array such as [“AF_INET”, 80, ignored, “127.0.0.1”]\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003e\u003cem\u003eflags\u003c/em\u003e should be bitwise OR of Socket::NI_* constants.\u003c/p\u003e\n\n\u003cp\u003eNote: The last form is compatible with IPSocket#addr and IPSocket#peeraddr.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAF_INET\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getnameinfo'\u003egetnameinfo\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAF_INET\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elocalhost\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;localhost\u0026quot;, \u0026quot;www\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf Addrinfo object is preferred, use Addrinfo#getnameinfo.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/getservbyname",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the port number for \u003cem\u003eservice_name\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003eprotocol_name\u003c/em\u003e is not given, “tcp” is assumed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esmtp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 25\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eshell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 514\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyname'\u003egetservbyname\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esyslog\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eudp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 514\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/getservbyport",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eObtains the port number for \u003cem\u003eport\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003eprotocol_name\u003c/em\u003e is not given, “tcp” is assumed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;www\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e514\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003etcp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;shell\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getservbyport'\u003egetservbyport\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e514\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eudp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;syslog\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/ip_address_list",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns local IP addresses as an array.\u003c/p\u003e\n\n\u003cp\u003eThe array contains Addrinfo objects.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003epp Socket.ip_address_list\n#=\u0026gt; [#\u0026lt;Addrinfo: 127.0.0.1\u0026gt;,\n     #\u0026lt;Addrinfo: 192.168.0.128\u0026gt;,\n     #\u0026lt;Addrinfo: ::1\u0026gt;,\n     ...]\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/pack_sockaddr_in",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003eport\u003c/em\u003e and \u003cem\u003ehost\u003c/em\u003e as an AF_INET/AF_INET6 sockaddr\nstring.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e::1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/pack_sockaddr_un",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003epath\u003c/em\u003e as an AF_UNIX sockaddr string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x01\\x00/tmp/sock\\x00\\x00...\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/pair",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a pair of sockets connected each other.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the domain, defaults to 0\nfor the domain.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ab\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;b\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003esocketpair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/sockaddr_in",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003eport\u003c/em\u003e and \u003cem\u003ehost\u003c/em\u003e as an AF_INET/AF_INET6 sockaddr\nstring.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e::1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/sockaddr_un",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePacks \u003cem\u003epath\u003c/em\u003e as an AF_UNIX sockaddr string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x01\\x00/tmp/sock\\x00\\x00...\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/socketpair",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a pair of sockets connected each other.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e should be a protocol defined in the domain, defaults to 0\nfor the domain.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_close'\u003eclose\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ab\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_pair'\u003epair\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s1'\u003es1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_send'\u003esend\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s2'\u003es2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_recv'\u003erecv\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;b\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003esocketpair\u003c/strong\u003e(domain, type, protocol) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/unpack_sockaddr_in",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUnpacks \u003cem\u003esockaddr\u003c/em\u003e into port and ip_address.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be a string or an addrinfo for AF_INET/AF_INET6.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_in'\u003esockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e80\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e127.0.0.1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack_sockaddr_in'\u003eunpack_sockaddr_in\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [80, \u0026quot;127.0.0.1\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$classmethods/unpack_sockaddr_un",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUnpacks \u003cem\u003esockaddr\u003c/em\u003e into path.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esockaddr\u003c/em\u003e should be a string or an addrinfo for AF_UNIX.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr_un'\u003esockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/tmp/sock\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack_sockaddr_un'\u003eunpack_sockaddr_un\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_sockaddr'\u003esockaddr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;/tmp/sock\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/accept",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts a next connection. Returns a new Socket object and Addrinfo object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_listen'\u003elisten\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_connect'\u003econnect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_connect_address'\u003econnect_address\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_serv'\u003eserv\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_accept'\u003eaccept\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [#\u0026lt;Socket:fd 6\u0026gt;, #\u0026lt;Addrinfo: 127.0.0.1:48555 TCP\u0026gt;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/accept_nonblock",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts an incoming connection using accept(2) after O_NONBLOCK is set for\nthe underlying file descriptor. It returns an array containing the accepted\nsocket for the incoming connection, \u003cem\u003eclient_socket\u003c/em\u003e, and an\nAddrinfo, \u003cem\u003eclient_addrinfo\u003c/em\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one script, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.bind(sockaddr)\n\u0009socket.listen(5) \u0009begin # emulate blocking accept \u0009  client_socket,\nclient_addrinfo = socket.accept_nonblock \u0009rescue IO::WaitReadable,\nErrno::EINTR \u0009  \u003ca href=\"socket\"\u003eIO.select(\u003c/a\u003e) \u0009  retry \u0009end \u0009puts “The\nclient said, \u0026#39;#Socket.client_socketclient_socket.readlineclient_socket.readline.chomp\u0026#39;” \u0009client_socket.puts\n“Hello from script one!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another script, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.connect(sockaddr)\n\u0009socket.puts “Hello from script 2.” \u0009puts “The server said,\n\u0026#39;#Socket.socketsocket.readlinesocket.readline.chomp\u0026#39;” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#accept for the exceptions that may be thrown if the call to\n\u003cem\u003eaccept_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#accept_nonblock may raise any error corresponding to accept(2)\nfailure, including Errno::EWOULDBLOCK.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EWOULDBLOCK, Errno::AGAIN, Errno::ECONNABORTED\nor Errno::EPROTO, it is extended by IO::WaitReadable. So IO::WaitReadable\ncan be used to rescue the exceptions for retrying accept_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#accept\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/bind",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBinds to the given local address.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003elocal_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained in\na string or an Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39;\u003c/p\u003e\n\n\u003cp\u003e# use Addrinfo \u0009socket = Socket.new(:INET, :STREAM, 0)\n\u0009socket.bind(Addrinfo.tcp(“127.0.0.1”, 2222)) \u0009p socket.local_address\n#=\u0026gt; #\u0026lt;Addrinfo: 127.0.0.1:2222 TCP\u0026gt;\u003c/p\u003e\n\n\u003cp\u003e# use struct sockaddr \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009sockaddr = Socket.pack_sockaddr_in( 2200,\n\u0026#39;localhost\u0026#39; ) \u0009socket.bind( sockaddr )\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the specified \u003cem\u003esockaddr\u003c/em\u003e is protected and the\ncurrent user does not have permission to bind to it\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the specified \u003cem\u003esockaddr\u003c/em\u003e is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified \u003cem\u003esockaddr\u003c/em\u003e is not available\nfrom the local machine\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - the specified \u003cem\u003esockaddr\u003c/em\u003e is not a valid\naddress for the family of the calling \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003cem\u003esockaddr\u003c/em\u003e specified is not a valid file\ndescriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the \u003cem\u003esockaddr\u003c/em\u003e argument cannot be accessed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is already bound to an address, and\nthe protocol does not support binding to the new \u003cem\u003esockaddr\u003c/em\u003e or the\n\u003ccode\u003esocket\u003c/code\u003e has been shut down.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the address length is not a valid length for the address\nfamily\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLONG - the pathname resolved had a length which exceeded\nPATH_MAX\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the socket type of the \u003ccode\u003esocket\u003c/code\u003e does not\nsupport binding to an address\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003eOn unix-based based systems if the address family of the calling\n\u003ccode\u003esocket\u003c/code\u003e is Socket::AF_UNIX the follow exceptions may be raised\nif the call to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - search permission is denied for a component of the prefix\npath or write access to the \u003ccode\u003esocket\u003c/code\u003e is denied\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EDESTADDRREQ - the \u003cem\u003esockaddr\u003c/em\u003e argument is a null pointer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISDIR - same as Errno::EDESTADDRREQ\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ELOOP - too many symbolic links were encountered in translating the\npathname in \u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\ncharacters, or an entire pathname exceeded PATH_MAX characters\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOENT - a component of the pathname does not name an existing file\nor the pathname is an empty string\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTDIR - a component of the path prefix of the pathname in\n\u003cem\u003esockaddr\u003c/em\u003e is not a directory\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EROFS - the name would reside on a read only filesystem\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003ebind\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN– the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the attempt to connect the datagram socket to the broadcast\naddress failed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified address is not a valid address for\nthis computer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal address or address length\nparameter is too small or is not a valid part of the user space addressed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is already bound to an address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003ebind manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003ebind function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/connect",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRequests a connection to be made on the given \u003ccode\u003eremote_sockaddr\u003c/code\u003e.\nReturns 0 if successful, otherwise an exception is raised.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eremote_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained\nin a string or Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example%3A\"\u003eExample:\u003c/h3\u003e\n\n\u003cp\u003e# Pull down Google\u0026#39;s web page \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 80, \u0026#39;\u003ca\nhref=\"www.google.com\"\u003ewww.google.com\u003c/a\u003e\u0026#39; ) \u0009socket.connect( sockaddr )\n\u0009socket.write( “GET / HTTP/1.0rnrn” ) \u0009results = socket.read\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based systems the following system exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - search permission is denied for a component of the prefix\npath or write access to the \u003ccode\u003esocket\u003c/code\u003e is denied\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the \u003cem\u003esockaddr\u003c/em\u003e is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the specified \u003cem\u003esockaddr\u003c/em\u003e is not available\nfrom the local machine\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - the specified \u003cem\u003esockaddr\u003c/em\u003e is not a valid\naddress for the address family of the specified \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EALREADY - a connection is already in progress for the specified\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003ccode\u003esocket\u003c/code\u003e is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNREFUSED - the target \u003cem\u003esockaddr\u003c/em\u003e was not listening for\nconnections refused the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - the remote host reset the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the \u003cem\u003esockaddr\u003c/em\u003e cannot be accessed\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EHOSTUNREACH - the destination host cannot be reached (probably\nbecause the host is down or a remote router cannot reach it)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - the O_NONBLOCK is set for the \u003ccode\u003esocket\u003c/code\u003e and\nthe connection cannot be immediately established; the connection will be\nestablished asynchronously\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the attempt to establish the connection was interrupted by\ndelivery of a signal that was caught; the connection will be established\nasynchronously\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the specified \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the address length used for the \u003cem\u003esockaddr\u003c/em\u003e is not a\nvalid length for the address family or there is an invalid family in\n\u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLONG - the pathname resolved had a length which exceeded\nPATH_MAX\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the local interface used to reach the destination is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETUNREACH - no route to the network is present\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the calling \u003ccode\u003esocket\u003c/code\u003e is listening and cannot\nbe connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EPROTOTYPE - the \u003cem\u003esockaddr\u003c/em\u003e has a different type than the\nsocket bound to the specified peer address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the attempt to connect time out before a connection was\nmade.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003cp\u003eOn unix-based systems if the address family of the calling\n\u003ccode\u003esocket\u003c/code\u003e is AF_UNIX the follow exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred while reading from or writing to the\nfile system\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ELOOP - too many symbolic links were encountered in translating the\npathname in \u003cem\u003esockaddr\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\ncharacters, or an entire pathname exceeded PATH_MAX characters\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOENT - a component of the pathname does not name an existing file\nor the pathname is an empty string\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTDIR - a component of the path prefix of the pathname in\n\u003cem\u003esockaddr\u003c/em\u003e is not a directory\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003econnect\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the socket was cancelled\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a blocking socket is in progress or the service\nprovider is still processing a callback function. Or a nonblocking connect\ncall is in progress on the \u003ccode\u003esocket\u003c/code\u003e.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EALREADY - see Errno::EINVAL\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRNOTAVAIL - the remote address is not a valid address, such as\nADDR_ANY TODO check ADDRANY TO INADDR_ANY\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAFNOSUPPORT - addresses in the specified family cannot be used with\nwith this \u003ccode\u003esocket\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNREFUSED - the target \u003cem\u003esockaddr\u003c/em\u003e was not listening for\nconnections refused the connection request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal address or address length\nparameter is too small or is not a valid part of the user space address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e is a listening socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETUNREACH - the network cannot be reached from this host at this\ntime\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EHOSTUNREACH - no route to the network is present\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e argument does not refer to a\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the attempt to connect time out before a connection was\nmade.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - the socket is marked as nonblocking and the connection\ncannot be completed immediately\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the attempt to connect the datagram socket to the broadcast\naddress failed\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003econnect manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003econnect function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/connect_nonblock",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRequests a connection to be made on the given \u003ccode\u003eremote_sockaddr\u003c/code\u003e\nafter O_NONBLOCK is set for the underlying file descriptor. Returns 0 if\nsuccessful, otherwise an exception is raised.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eremote_sockaddr\u003c/code\u003e - the \u003ccode\u003estruct\u003c/code\u003e sockaddr contained\nin a string or Addrinfo object\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example%3A\"\u003eExample:\u003c/h3\u003e\n\n\u003cp\u003e# Pull down Google\u0026#39;s web page \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(80, \u0026#39;\u003ca\nhref=\"www.google.com\"\u003ewww.google.com\u003c/a\u003e\u0026#39;) \u0009begin # emulate blocking\nconnect \u0009  socket.connect_nonblock(sockaddr) \u0009rescue IO::WaitWritable \u0009 \nIO.select(nil, [socket]) # wait 3-way handshake completion \u0009  begin \u0009   \nsocket.connect_nonblock(sockaddr) # check connection failure \u0009  rescue\nErrno::EISCONN \u0009  end \u0009end \u0009socket.write(“GET / HTTP/1.0rnrn”) \u0009results =\nsocket.read\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#connect for the exceptions that may be thrown if the call\nto \u003cem\u003econnect_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#connect_nonblock may raise any error corresponding to connect(2)\nfailure, including Errno::EINPROGRESS.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EINPROGRESS, it is extended by IO::WaitWritable.\nSo IO::WaitWritable can be used to rescue the exceptions for retrying\nconnect_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#connect\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new socket object.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003edomain\u003c/em\u003e should be a communications domain such as: :INET, :INET6,\n:UNIX, etc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003esocktype\u003c/em\u003e should be a socket type such as: :STREAM, :DGRAM, :RAW,\netc.\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eprotocol\u003c/em\u003e is optional and should be a protocol defined in the\ndomain. If protocol is not given, 0 is used internally.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# TCP socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:INET\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e# UDP socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:STREAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# UNIX stream socket\n\u003c/span\u003e\u003cspan class='const'\u003eSocket\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:UNIX\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:DGRAM\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e# UNIX datagram socket\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/listen",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eListens for connections, using the specified \u003ccode\u003eint\u003c/code\u003e as the\nbacklog. A call to \u003cem\u003elisten\u003c/em\u003e only applies if the \u003ccode\u003esocket\u003c/code\u003e\nis of type SOCK_STREAM or SOCK_SEQPACKET.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameter\"\u003eParameter\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ebacklog\u003c/code\u003e - the maximum length of the queue for pending\nconnections.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example+1\"\u003eExample 1\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39; \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009sockaddr = Socket.pack_sockaddr_in( 2200,\n\u0026#39;localhost\u0026#39; ) \u0009socket.bind( sockaddr ) \u0009socket.listen( 5 )\u003c/p\u003e\n\n\u003ch3 id=\"label-Example+2+%28listening+on+an+arbitrary+port%2C+unix-based+systems+only%29%3A\"\u003eExample 2 (listening on an arbitrary port, unix-based systems only):\u003c/h3\u003e\n\n\u003cp\u003erequire \u0026#39;socket\u0026#39; \u0009include Socket::Constants \u0009socket = Socket.new(\nAF_INET, SOCK_STREAM, 0 ) \u0009socket.listen( 1 )\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix based systems the above will work because a new\n\u003ccode\u003esockaddr\u003c/code\u003e struct is created on the address ADDR_ANY, for an\narbitrary port number as handed off by the kernel. It will not work on\nWindows, because Windows requires that the \u003ccode\u003esocket\u003c/code\u003e is bound by\ncalling \u003cem\u003ebind\u003c/em\u003e before it can \u003cem\u003elisten\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003cem\u003ebacklog\u003c/em\u003e amount exceeds the implementation-dependent maximum\nqueue length, the implementation\u0026#39;s maximum queue length will be used.\u003c/p\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003elisten\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003cem\u003esocket\u003c/em\u003e argument is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EDESTADDRREQ - the \u003cem\u003esocket\u003c/em\u003e is not bound to a local address,\nand the protocol does not support listening on an unbound socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003cem\u003esocket\u003c/em\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003cem\u003esocket\u003c/em\u003e argument does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the \u003cem\u003esocket\u003c/em\u003e protocol does not support listen\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EACCES - the calling process does not have appropriate privileges\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003cem\u003esocket\u003c/em\u003e has been shut down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - insufficient resources are available in the system to\ncomplete the call\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003elisten\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EADDRINUSE - the socket\u0026#39;s local address is already in use. This\nusually occurs during the execution of \u003cem\u003ebind\u003c/em\u003e but could be delayed\nif the call to \u003cem\u003ebind\u003c/em\u003e was to a partially wildcard address (involving\nADDR_ANY) and if a specific address needs to be committed at the time of\nthe call to \u003cem\u003elisten\u003c/em\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a Windows Sockets 1.1 call is in progress or the\nservice provider is still processing a callback function\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the \u003ccode\u003esocket\u003c/code\u003e has not been bound with a call to\n\u003cem\u003ebind\u003c/em\u003e.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - the \u003ccode\u003esocket\u003c/code\u003e is already connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EMFILE - no more socket descriptors are available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - no buffer space is available\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOC - \u003ccode\u003esocket\u003c/code\u003e is not a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the referenced \u003ccode\u003esocket\u003c/code\u003e is not a type that\nsupports the \u003cem\u003elisten\u003c/em\u003e method\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003elisten manual pages on unix-based systems\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003elisten function in Microsoft\u0026#39;s Winsock functions reference\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/recvfrom",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReceives up to \u003cem\u003emaxlen\u003c/em\u003e bytes from \u003ccode\u003esocket\u003c/code\u003e.\n\u003cem\u003eflags\u003c/em\u003e is zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options. The first\nelement of the results, \u003cem\u003emesg\u003c/em\u003e, is the data received. The second\nelement, \u003cem\u003esender_addrinfo\u003c/em\u003e, contains protocol-specific address\ninformation of the sender.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameters\"\u003eParameters\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emaxlen\u003c/code\u003e - the maximum number of bytes to receive from the\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eflags\u003c/code\u003e - zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one file, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.bind(\nsockaddr ) \u0009socket.listen( 5 ) \u0009client, client_addrinfo = socket.accept\n\u0009data = client.recvfrom( 20 )[0].chomp \u0009puts “I only received 20 bytes\n\u0026#39;#data\u0026#39;” \u0009sleep 1 \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another file, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.connect(\nsockaddr ) \u0009socket.puts “Watch this get cut short!” \u0009socket.close\u003c/p\u003e\n\n\u003ch3 id=\"label-Unix-based+Exceptions\"\u003eUnix-based Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn unix-based based systems the following system exceptions may be raised\nif the call to \u003cem\u003erecvfrom\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::EAGAIN - the \u003ccode\u003esocket\u003c/code\u003e file descriptor is marked as\nO_NONBLOCK and no data is waiting to be received; or MSG_OOB is set and no\nout-of-band data is available and either the \u003ccode\u003esocket\u003c/code\u003e file\ndescriptor is marked as O_NONBLOCK or the \u003ccode\u003esocket\u003c/code\u003e does not\nsupport blocking to wait for out-of-band-data\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - see Errno::EAGAIN\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EBADF - the \u003ccode\u003esocket\u003c/code\u003e is not a valid file descriptor\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - a connection was forcibly closed by a peer\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the socket\u0026#39;s internal buffer, address or address length\ncannot be accessed or written\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - a signal interrupted \u003cem\u003erecvfrom\u003c/em\u003e before any data was\navailable\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - the MSG_OOB flag is set and no out-of-band data is\navailable\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EIO - an i/o error occurred while reading from or writing to the\nfilesystem\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOBUFS - insufficient resources were available in the system to\nperform the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOMEM - insufficient memory was available to fulfill the request\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOSR - there were insufficient STREAMS resources available to\ncomplete the operation\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTCONN - a receive is attempted on a connection-mode socket that\nis not connected\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENOTSOCK - the \u003ccode\u003esocket\u003c/code\u003e does not refer to a socket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - the specified flags are not supported for this socket\ntype\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the connection timed out during connection establishment\nor due to a transmission timeout on an active connection\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Windows+Exceptions\"\u003eWindows Exceptions\u003c/h3\u003e\n\n\u003cp\u003eOn Windows systems the following system exceptions may be raised if the\ncall to \u003cem\u003erecvfrom\u003c/em\u003e fails:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETDOWN - the network is down\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EFAULT - the internal buffer and from parameters on\n\u003ccode\u003esocket\u003c/code\u003e are not part of the user address space, or the internal\nfromlen parameter is too small to accommodate the peer address\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINTR - the (blocking) call was cancelled by an internal call to the\nWinSock function WSACancelBlockingCall\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINPROGRESS - a blocking Windows Sockets 1.1 call is in progress or\nthe service provider is still processing a callback function\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EINVAL - \u003ccode\u003esocket\u003c/code\u003e has not been bound with a call to\n\u003cem\u003ebind\u003c/em\u003e, or an unknown flag was specified, or MSG_OOB was specified\nfor a socket with SO_OOBINLINE enabled, or (for byte stream-style sockets\nonly) the internal len parameter on \u003ccode\u003esocket\u003c/code\u003e was zero or\nnegative\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EISCONN - \u003ccode\u003esocket\u003c/code\u003e is already connected. The call to\n\u003cem\u003erecvfrom\u003c/em\u003e is not permitted with a connected socket on a socket that\nis connection oriented or connectionless.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ENETRESET - the connection has been broken due to the keep-alive\nactivity detecting a failure while the operation was in progress.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EOPNOTSUPP - MSG_OOB was specified, but \u003ccode\u003esocket\u003c/code\u003e is not\nstream-style such as type SOCK_STREAM. OOB data is not supported in the\ncommunication domain associated with \u003ccode\u003esocket\u003c/code\u003e, or\n\u003ccode\u003esocket\u003c/code\u003e is unidirectional and supports only send operations\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ESHUTDOWN - \u003ccode\u003esocket\u003c/code\u003e has been shutdown. It is not\npossible to call \u003cem\u003erecvfrom\u003c/em\u003e on a socket after \u003cem\u003eshutdown\u003c/em\u003e has\nbeen invoked.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EWOULDBLOCK - \u003ccode\u003esocket\u003c/code\u003e is marked as nonblocking and a \ncall to \u003cem\u003erecvfrom\u003c/em\u003e would block.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::EMSGSIZE - the message was too large to fit into the specified\nbuffer and was truncated.\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ETIMEDOUT - the connection has been dropped, because of a network\nfailure or because the system on the other end went down without notice\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eErrno::ECONNRESET - the virtual circuit was reset by the remote side\nexecuting a hard or abortive close. The application should close the\nsocket; it is no longer usable. On a UDP-datagram socket this error\nindicates a previous send operation resulted in an ICMP Port Unreachable\nmessage.\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom\u003c/strong\u003e(maxlen) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom\u003c/strong\u003e(maxlen, flags) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/recvfrom_nonblock",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReceives up to \u003cem\u003emaxlen\u003c/em\u003e bytes from \u003ccode\u003esocket\u003c/code\u003e using\nrecvfrom(2) after O_NONBLOCK is set for the underlying file descriptor.\n\u003cem\u003eflags\u003c/em\u003e is zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options. The first\nelement of the results, \u003cem\u003emesg\u003c/em\u003e, is the data received. The second\nelement, \u003cem\u003esender_addrinfo\u003c/em\u003e, contains protocol-specific address\ninformation of the sender.\u003c/p\u003e\n\n\u003cp\u003eWhen recvfrom(2) returns 0, Socket#recvfrom_nonblock returns an empty\nstring as data. The meaning depends on the socket: EOF on TCP, empty packet\non UDP, etc.\u003c/p\u003e\n\n\u003ch3 id=\"label-Parameters\"\u003eParameters\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003emaxlen\u003c/code\u003e - the maximum number of bytes to receive from the\nsocket\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eflags\u003c/code\u003e - zero or more of the \u003ccode\u003eMSG_\u003c/code\u003e options\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one file, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.bind(sockaddr)\n\u0009socket.listen(5) \u0009client, client_addrinfo = socket.accept \u0009begin # emulate\nblocking recvfrom \u0009  pair = client.recvfrom_nonblock(20) \u0009rescue\nIO::WaitReadable \u0009  \u003ca href=\"client\"\u003eIO.select(\u003c/a\u003e) \u0009  retry \u0009end \u0009data =\n\u003ca href=\"0\"\u003epair\u003c/a\u003e.chomp \u0009puts “I only received 20 bytes\n\u0026#39;#data\u0026#39;” \u0009sleep 1 \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another file, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new(AF_INET, SOCK_STREAM, 0) \u0009sockaddr =\nSocket.sockaddr_in(2200, \u0026#39;localhost\u0026#39;) \u0009socket.connect(sockaddr)\n\u0009socket.puts “Watch this get cut short!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#recvfrom for the exceptions that may be thrown if the call\nto \u003cem\u003erecvfrom_nonblock\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003cp\u003eSocket#recvfrom_nonblock may raise any error corresponding to recvfrom(2)\nfailure, including Errno::EWOULDBLOCK.\u003c/p\u003e\n\n\u003cp\u003eIf the exception is Errno::EWOULDBLOCK or Errno::AGAIN, it is extended by\nIO::WaitReadable. So IO::WaitReadable can be used to rescue the exceptions\nfor retrying recvfrom_nonblock.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#recvfrom\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom_nonblock\u003c/strong\u003e(maxlen) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erecvfrom_nonblock\u003c/strong\u003e(maxlen, flags) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Socket/$methods/sysaccept",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAccepts an incoming connection returning an array containing the (integer)\nfile descriptor for the incoming connection, \u003cem\u003eclient_socket_fd\u003c/em\u003e, and\nan Addrinfo, \u003cem\u003eclient_addrinfo\u003c/em\u003e.\u003c/p\u003e\n\n\u003ch3 id=\"label-Example\"\u003eExample\u003c/h3\u003e\n\n\u003cp\u003e# In one script, start this first \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.bind(\nsockaddr ) \u0009socket.listen( 5 ) \u0009client_fd, client_addrinfo =\nsocket.sysaccept \u0009client_socket = Socket.for_fd( client_fd ) \u0009puts “The\nclient said, \u0026#39;#Socket.client_socketclient_socket.readlineclient_socket.readline.chomp\u0026#39;” \u0009client_socket.puts\n“Hello from script one!” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003e# In another script, start this second \u0009require \u0026#39;socket\u0026#39; \u0009include\nSocket::Constants \u0009socket = Socket.new( AF_INET, SOCK_STREAM, 0 ) \u0009sockaddr\n= Socket.pack_sockaddr_in( 2200, \u0026#39;localhost\u0026#39; ) \u0009socket.connect(\nsockaddr ) \u0009socket.puts “Hello from script 2.” \u0009puts “The server said,\n\u0026#39;#Socket.socketsocket.readlinesocket.readline.chomp\u0026#39;” \u0009socket.close\u003c/p\u003e\n\n\u003cp\u003eRefer to Socket#accept for the exceptions that may be thrown if the call to\n\u003cem\u003esysaccept\u003c/em\u003e fails.\u003c/p\u003e\n\n\u003ch3 id=\"label-See\"\u003eSee\u003c/h3\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eSocket#accept\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "ext/socket/socket.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003e\u003cstrong\u003eString\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eA \u003ccode\u003eString\u003c/code\u003e object holds and manipulates an arbitrary sequence of\nbytes, typically representing characters. String objects may be created\nusing \u003ccode\u003eString::new\u003c/code\u003e or as literals.\u003c/p\u003e\n\n\u003cp\u003eBecause of aliasing issues, users of strings should be aware of the methods\nthat modify the contents of a \u003ccode\u003eString\u003c/code\u003e object.  Typically,\nmethods with names ending in “!\u0026#39;\u0026#39; modify their receiver, while\nthose without a “!\u0026#39;\u0026#39; return a new \u003ccode\u003eString\u003c/code\u003e.  However,\nthere are exceptions, such as \u003ccode\u003eString#[]=\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new string object containing a copy of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTry to convert \u003cem\u003eobj\u003c/em\u003e into a String, using to_str method. Returns\nconverted string or nil if \u003cem\u003eobj\u003c/em\u003e cannot be converted for any reason.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eString\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_try_convert'\u003etry_convert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estr\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;str\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eString\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_try_convert'\u003etry_convert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003ere\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eFormat—Uses \u003cem\u003estr\u003c/em\u003e as a format specification, and returns the result\nof applying it to \u003cem\u003earg\u003c/em\u003e. If the format specification contains more\nthan one substitution, then \u003cem\u003earg\u003c/em\u003e must be an \u003ccode\u003eArray\u003c/code\u003e or\n\u003ccode\u003eHash\u003c/code\u003e containing the values to be substituted. See\n\u003ccode\u003eKernel::sprintf\u003c/code\u003e for details of the format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%05d\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='int'\u003e123\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;00123\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%-5s: %08x\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eID\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003eself\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_object_id'\u003eobject_id\u003c/span\u003e \u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ID   : 200e14d6\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003efoo = %{foo}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e \u003cspan class='symbol'\u003e:foo\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo = bar\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCopy — Returns a new String containing \u003ccode\u003einteger\u003c/code\u003e copies of the\nreceiver. \u003ccode\u003einteger\u003c/code\u003e must be greater than or equal to 0.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHo! \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Ho! Ho! Ho! \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHo! \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConcatenation—Returns a new \u003ccode\u003eString\u003c/code\u003e containing\n\u003cem\u003eother_str\u003c/em\u003e concatenated to \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHello from \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='kw'\u003eself\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello from main\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAppend—Concatenates the given object to \u003cem\u003estr\u003c/em\u003e. If the object is a\n\u003ccode\u003eInteger\u003c/code\u003e, it is considered as a codepoint, and is converted to\na character before concatenation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_concat'\u003econcat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e33\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world!\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComparison—Returns -1, 0, +1 or nil depending on whether\n\u003ccode\u003estring\u003c/code\u003e is less than, equal to, or greater than\n\u003ccode\u003eother_string\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enil\u003c/code\u003e is returned if the two values are incomparable.\u003c/p\u003e\n\n\u003cp\u003eIf the strings are of different lengths, and the strings are equal when\ncompared up to the shortest length, then the longer string is considered\ngreater than the shorter one.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;=\u0026gt;\u003c/code\u003e is the basis for the methods \u003ccode\u003e\u0026lt;\u003c/code\u003e,\n\u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, and\n\u003ccode\u003ebetween?\u003c/code\u003e, included from module Comparable. The method\nString#== does not use Comparable#==.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdefg\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eABCDEF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch3 id=\"label-Equality\"\u003eEquality\u003c/h3\u003e\n\n\u003cp\u003eReturns whether \u003ccode\u003estr\u003c/code\u003e == \u003ccode\u003eobj\u003c/code\u003e, similar to Object#==.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eobj\u003c/code\u003e is not an instance of String but responds to\n\u003ccode\u003eto_str\u003c/code\u003e, then the two strings are compared using case equality\nObject#===.\u003c/p\u003e\n\n\u003cp\u003eOtherwise, returns similarly to String#eql?, comparing length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e==\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e===\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch3 id=\"label-Equality\"\u003eEquality\u003c/h3\u003e\n\n\u003cp\u003eReturns whether \u003ccode\u003estr\u003c/code\u003e == \u003ccode\u003eobj\u003c/code\u003e, similar to Object#==.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eobj\u003c/code\u003e is not an instance of String but responds to\n\u003ccode\u003eto_str\u003c/code\u003e, then the two strings are compared using case equality\nObject#===.\u003c/p\u003e\n\n\u003cp\u003eOtherwise, returns similarly to String#eql?, comparing length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e==\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e===\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMatch—If \u003cem\u003eobj\u003c/em\u003e is a \u003ccode\u003eRegexp\u003c/code\u003e, use it as a pattern to\nmatch against \u003cem\u003estr\u003c/em\u003e,and returns the position the match starts, or\n\u003ccode\u003enil\u003c/code\u003e if there is no match. Otherwise, invokes \u003cem\u003eobj.=~\u003c/em\u003e,\npassing \u003cem\u003estr\u003c/em\u003e as an argument. The default \u003ccode\u003e=~\u003c/code\u003e in\n\u003ccode\u003eObject\u003c/code\u003e returns \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNote: \u003ccode\u003estr =~ regexp\u003c/code\u003e is not the same as \u003ccode\u003eregexp =~\nstr\u003c/code\u003e. Strings captured from named capture groups are assigned to\nlocal variables only in the second case.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecat o\u0026#39; 9 tails\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=~\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\d\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 7\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecat o\u0026#39; 9 tails\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=~\u003c/span\u003e \u003cspan class='int'\u003e9\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Reference — If passed a single \u003ccode\u003eindex\u003c/code\u003e, returns a\nsubstring of one character at that index. If passed a \u003ccode\u003estart\u003c/code\u003e\nindex and a \u003ccode\u003elength\u003c/code\u003e, returns a substring containing\n\u003ccode\u003elength\u003c/code\u003e characters starting at the \u003ccode\u003eindex\u003c/code\u003e. If\npassed a \u003ccode\u003erange\u003c/code\u003e, its beginning and end are interpreted as\noffsets delimiting the substring to be returned.\u003c/p\u003e\n\n\u003cp\u003eIn these three cases, if an index is negative, it is counted from the end\nof the string.  For the \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003erange\u003c/code\u003e cases the\nstarting index is just before a character and an index matching the\nstring\u0026#39;s size. Additionally, an empty string is returned when the\nstarting index for a character range is at the end of the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the initial index falls outside the string or\nthe length is negative.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003eRegexp\u003c/code\u003e is supplied, the matching portion of the string is\nreturned.  If a \u003ccode\u003ecapture\u003c/code\u003e follows the regular expression, which\nmay be a capture group index or name, follows the regular expression that\ncomponent of the MatchData is returned instead.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003ematch_str\u003c/code\u003e is given, that string is returned if it occurs\nin the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the regular expression does not match or the\nmatch string cannot be found.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;er\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003enon_vowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003evowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;lo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebye\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Assignment—Replaces some or all of the content of \u003cem\u003estr\u003c/em\u003e. The\nportion of the string affected is determined using the same criteria as\n\u003ccode\u003eString#[]\u003c/code\u003e. If the replacement string is not the same length as\nthe text it is replacing, the string will be adjusted accordingly. If the\nregular expression or string is used as the index doesn\u0026#39;t match a\nposition in the string, \u003ccode\u003eIndexError\u003c/code\u003e is raised. If the regular\nexpression form is used, the optional second \u003ccode\u003eFixnum\u003c/code\u003e allows you\nto specify which portion of the match to replace (effectively using the\n\u003ccode\u003eMatchData\u003c/code\u003e indexing rules. The forms that take a\n\u003ccode\u003eFixnum\u003c/code\u003e will raise an \u003ccode\u003eIndexError\u003c/code\u003e if the value is\nout of range; the \u003ccode\u003eRange\u003c/code\u003e form will raise a\n\u003ccode\u003eRangeError\u003c/code\u003e, and the \u003ccode\u003eRegexp\u003c/code\u003e and\n\u003ccode\u003eString\u003c/code\u003e will raise an \u003ccode\u003eIndexError\u003c/code\u003e on negative\nmatch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true for a string which has only ASCII characters.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ascii_only?'\u003eascii_only?\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u{6666}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ascii_only?'\u003eascii_only?\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copied string whose encoding is ASCII-8BIT.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of bytes in \u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_byte.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_byte\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the length of \u003ccode\u003estr\u003c/code\u003e in bytes.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\\u3042\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_bytesize'\u003ebytesize\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_bytesize'\u003ebytesize\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eByte Reference—If passed a single \u003ccode\u003eFixnum\u003c/code\u003e, returns a substring\nof one byte at that position. If passed two \u003ccode\u003eFixnum\u003c/code\u003e objects,\nreturns a substring starting at the offset given by the first, and a length\ngiven by the second. If given a \u003ccode\u003eRange\u003c/code\u003e, a substring containing\nbytes at offsets given by the range is returned. In all three cases, if an\noffset is negative, it is counted from the end of \u003cem\u003estr\u003c/em\u003e. Returns\n\u003ccode\u003enil\u003c/code\u003e if the initial offset falls outside the string, the length\nis negative, or the beginning of the range is greater than the end. The\nencoding of the resulted string keeps original encoding.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;o\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;el\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\\u3042\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\u3042\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x03\\u3042\\xff\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\u3042\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(fixnum, fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with the first character converted to\nuppercase and the remainder to lowercase. Note: case conversion is\neffective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHELLO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123ABC\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;123abc\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eModifies \u003cem\u003estr\u003c/em\u003e by converting the first character to uppercase and\nthe remainder to lowercase. Returns \u003ccode\u003enil\u003c/code\u003e if no changes are\nmade. Note: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize!'\u003ecapitalize!\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize!'\u003ecapitalize!\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCase-insensitive version of \u003ccode\u003eString#\u0026lt;=\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaBcDeF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdefg\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eABCDEF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCenters \u003ccode\u003estr\u003c/code\u003e in \u003ccode\u003ewidth\u003c/code\u003e.  If \u003ccode\u003ewidth\u003c/code\u003e is\ngreater than the length of \u003ccode\u003estr\u003c/code\u003e, returns a new String of length\n\u003ccode\u003ewidth\u003c/code\u003e with \u003ccode\u003estr\u003c/code\u003e centered and padded with\n\u003ccode\u003epadstr\u003c/code\u003e; otherwise, returns \u003ccode\u003estr\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;       hello        \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1231231hello12312312\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of characters in \u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_char.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_char\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new \u003ccode\u003eString\u003c/code\u003e with the given record separator removed\nfrom the end of \u003cem\u003estr\u003c/em\u003e (if present). If \u003ccode\u003e$/\u003c/code\u003e has not been\nchanged from the default Ruby record separator, then \u003ccode\u003echomp\u003c/code\u003e\nalso removes carriage return characters (that is it will remove\n\u003ccode\u003e\\n\u003c/code\u003e, \u003ccode\u003e\\r\u003c/code\u003e, and \u003ccode\u003e\\r\\n\u003c/code\u003e).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\n\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \\n there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello \\n there\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;he\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eModifies \u003cem\u003estr\u003c/em\u003e in place as described for \u003ccode\u003eString#chomp\u003c/code\u003e,\nreturning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no modifications were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new \u003ccode\u003eString\u003c/code\u003e with the last character removed.  If the\nstring ends with \u003ccode\u003e\\r\\n\u003c/code\u003e, both characters are removed. Applying\n\u003ccode\u003echop\u003c/code\u003e to an empty string returns an empty string.\n\u003ccode\u003eString#chomp\u003c/code\u003e is often a safer alternative, as it leaves the\nstring unchanged if it doesn\u0026#39;t end in a record separator.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\n\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\\n\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;strin\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProcesses \u003cem\u003estr\u003c/em\u003e as for \u003ccode\u003eString#chop\u003c/code\u003e, returning\n\u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e is the empty string.  See\nalso \u003ccode\u003eString#chomp!\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a one-character string at the beginning of the string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chr'\u003echr\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMakes string empty.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_clear'\u003eclear\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of the \u003ccode\u003eInteger\u003c/code\u003e ordinals of the characters in\n\u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_codepoint.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_codepoint\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAppend—Concatenates the given object to \u003cem\u003estr\u003c/em\u003e. If the object is a\n\u003ccode\u003eInteger\u003c/code\u003e, it is considered as a codepoint, and is converted to\na character before concatenation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_concat'\u003econcat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e33\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world!\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEach \u003ccode\u003eother_str\u003c/code\u003e parameter defines a set of characters to count.\nThe intersection of these sets defines the characters to count in\n\u003ccode\u003estr\u003c/code\u003e.  Any \u003ccode\u003eother_str\u003c/code\u003e that starts with a caret\n\u003ccode\u003e^\u003c/code\u003e is negated.  The sequence \u003ccode\u003ec1-c2\u003c/code\u003e means all\ncharacters between c1 and c2.  The backslash character \u003ccode\u003e\u0026lt;/code\u0026gt;\ncan be used to escape \u0026lt;code\u0026gt;^\u003c/code\u003e or \u003ccode\u003e-\u003c/code\u003e and is\notherwise ignored unless it appears at the end of a sequence or the end of\na \u003ccode\u003eother_str\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 5\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^l\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eej-m\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                 \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello^world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello-world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\\\\-eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello world\\\\r\\\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\A\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX-\\\\w\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eApplies a one-way cryptographic hash to \u003cem\u003estr\u003c/em\u003e by invoking the\nstandard library function \u003ccode\u003ecrypt(3)\u003c/code\u003e with the given salt string.\nWhile the format and the result are system and implementation dependent,\nusing a salt matching the regular expression\n\u003ccode\u003e\\A[a-zA-Z0-9./]{2}\u003c/code\u003e should be valid and safe on any platform,\nin which only the first two characters are significant.\u003c/p\u003e\n\n\u003cp\u003eThis method is for use in system specific scripts, so if you want a\ncross-platform hash function consider using Digest or OpenSSL instead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all characters in the intersection of\nits arguments deleted. Uses the same rules for building the set of\ncharacters as \u003ccode\u003eString#count\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;heo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;he\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^e\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hell\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eej-m\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ho\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms a \u003ccode\u003edelete\u003c/code\u003e operation in place, returning \u003cem\u003estr\u003c/em\u003e,\nor \u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e was not modified.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all uppercase letters replaced with\ntheir lowercase counterparts. The operation is locale insensitive—only\ncharacters “A\u0026#39;\u0026#39; to “Z\u0026#39;\u0026#39; are affected. Note: case\nreplacement is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehEllO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_downcase'\u003edowncase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDowncases the contents of \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made. Note: case replacement is effective only in ASCII\nregion.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProduces a version of \u003ccode\u003estr\u003c/code\u003e with all non-printing characters\nreplaced by \u003ccode\u003e\\nnn\u003c/code\u003e notation and all special characters escaped.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \\n \u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dump'\u003edump\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\\u0026quot;hello \\\\n \u0026#39;\u0026#39;\\\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses each byte in \u003cem\u003estr\u003c/em\u003e to the given block, or returns an\nenumerator if no block is given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_byte'\u003eeach_byte\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e104 101 108 108 111\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_byte\u003c/strong\u003e {|fixnum| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003efixnum\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses each character in \u003cem\u003estr\u003c/em\u003e to the given block, or returns an\nenumerator if no block is given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_char'\u003eeach_char\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_h'\u003eh\u003c/span\u003e \u003cspan class='id identifier rubyid_e'\u003ee\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='id identifier rubyid_o'\u003eo\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_char\u003c/strong\u003e {|cstr| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ecstr\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses the \u003ccode\u003eInteger\u003c/code\u003e ordinal of each character in \u003cem\u003estr\u003c/em\u003e,\nalso known as a \u003cem\u003ecodepoint\u003c/em\u003e when applied to Unicode strings to the\ngiven block.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\u0639\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_codepoint'\u003eeach_codepoint\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e104 101 108 108 111 1593\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_codepoint\u003c/strong\u003e {|integer| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003einteger\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSplits \u003cem\u003estr\u003c/em\u003e using the supplied parameter as the record separator\n(\u003ccode\u003e$/\u003c/code\u003e by default), passing each substring in turn to the\nsupplied block.  If a zero-length record separator is supplied, the string\nis split into paragraphs delimited by multiple successive newlines.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample one\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample two\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample three\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\n\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_one'\u003eone\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_two'\u003etwo\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\\nworl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ed\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_three'\u003ethree\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\n\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_line\u003c/strong\u003e(separator = $/) {|substr| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003esubstr\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e has a length of zero.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true if \u003ccode\u003estr\u003c/code\u003e ends with one of the \u003ccode\u003esuffixes\u003c/code\u003e\ngiven.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTwo strings are equal if they have the same length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChanges the encoding to \u003ccode\u003eencoding\u003c/code\u003e and returns self.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the \u003cem\u003eindex\u003c/em\u003eth byte as an integer.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with the \u003cem\u003eall\u003c/em\u003e occurrences of\n\u003cem\u003epattern\u003c/em\u003e substituted for the second argument. The \u003cem\u003epattern\u003c/em\u003e\nis typically a \u003ccode\u003eRegexp\u003c/code\u003e; if given as a \u003ccode\u003eString\u003c/code\u003e, any\nregular expression metacharacters it contains will be interpreted\nliterally, e.g. \u003ccode\u003e\u0026#39;\\\\d\u0026#39;\u003c/code\u003e will match a backlash followed\nby \u0026#39;d\u0026#39;, instead of a digit.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003ereplacement\u003c/em\u003e is a \u003ccode\u003eString\u003c/code\u003e it will be substituted for\nthe matched text. It may contain back-references to the pattern\u0026#39;s\ncapture groups of the form \u003ccode\u003e\\\\d\u003c/code\u003e, where \u003cem\u003ed\u003c/em\u003e is a group\nnumber, or \u003ccode\u003e\\\\k\u0026lt;n\u0026gt;\u003c/code\u003e, where \u003cem\u003en\u003c/em\u003e is a group name. If\nit is a double-quoted string, both back-references must be preceded by an\nadditional backslash. However, within \u003cem\u003ereplacement\u003c/em\u003e the special\nmatch variables, such as \u003ccode\u003e$\u0026amp;\u003c/code\u003e, will not refer to the current\nmatch.\u003c/p\u003e\n\n\u003cp\u003eIf the second argument is a \u003ccode\u003eHash\u003c/code\u003e, and the matched text is one\nof its keys, the corresponding value is the replacement string.\u003c/p\u003e\n\n\u003cp\u003eIn the block form, the current match string is passed in as a parameter,\nand variables such as \u003ccode\u003e$1\u003c/code\u003e, \u003ccode\u003e$2\u003c/code\u003e, \u003ccode\u003e$`\u003c/code\u003e,\n\u003ccode\u003e$\u0026amp;\u003c/code\u003e, and \u003ccode\u003e$\u0026#39;\u003c/code\u003e will be set appropriately. The\nvalue returned by the block will be substituted for the match on each call.\u003c/p\u003e\n\n\u003cp\u003eThe result inherits any tainting in the original string or any supplied\nreplacement string.\u003c/p\u003e\n\n\u003cp\u003eWhen neither a block nor a second argument is supplied, an\n\u003ccode\u003eEnumerator\u003c/code\u003e is returned.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e([aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\\1\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h\u0026lt;e\u0026gt;ll\u0026lt;o\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;104 101 108 108 111 \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;foo\u0026gt;[aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e{\\k\u0026lt;foo\u0026gt;}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h{e}ll{o}\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[eo]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h3ll*\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern, hash) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms the substitutions of \u003ccode\u003eString#gsub\u003c/code\u003e in place, returning\n\u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no substitutions were performed. If no\nblock and no \u003cem\u003ereplacement\u003c/em\u003e is given, an enumerator is returned\ninstead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003egsub!\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003egsub!\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn a hash based on the string\u0026#39;s length, content and encoding.\u003c/p\u003e\n\n\u003cp\u003eSee also Object#hash.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTreats leading characters from \u003cem\u003estr\u003c/em\u003e as a string of hexadecimal\ndigits (with an optional sign and an optional \u003ccode\u003e0x\u003c/code\u003e) and returns\nthe corresponding number. Zero is returned on error.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0x0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 10\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; -4660\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewombat\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e contains the given string or\ncharacter.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eol\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='CHAR'\u003e?h\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the index of the first occurrence of the given \u003cem\u003esubstring\u003c/em\u003e\nor pattern (\u003cem\u003eregexp\u003c/em\u003e) in \u003cem\u003estr\u003c/em\u003e. Returns \u003ccode\u003enil\u003c/code\u003e if\nnot found. If the second parameter is present, it specifies the position in\nthe string to begin the search.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='CHAR'\u003e?e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eindex\u003c/strong\u003e(substring[, offset]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eindex\u003c/strong\u003e(regexp[, offset]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReplaces the contents and taintedness of \u003cem\u003estr\u003c/em\u003e with the\ncorresponding values in \u003cem\u003eother_str\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_replace'\u003ereplace\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eInserts \u003cem\u003eother_str\u003c/em\u003e before the character at the given\n\u003cem\u003eindex\u003c/em\u003e, modifying \u003cem\u003estr\u003c/em\u003e. Negative indices count from the end\nof the string, and insert \u003cem\u003eafter\u003c/em\u003e the given character. The intent is\ninsert \u003cem\u003eaString\u003c/em\u003e so that it starts at the given \u003cem\u003eindex\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Xabcd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcXd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcdX\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abXcd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcdX\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a printable version of \u003cem\u003estr\u003c/em\u003e, surrounded by quote marks,\nwith special characters escaped.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\b\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_inspect'\u003einspect\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\\u0026quot;hel\\\\bo\\\u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the character length of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of lines in \u003cem\u003estr\u003c/em\u003e split using the supplied record\nseparator (\u003ccode\u003e$/\u003c/code\u003e by default).  This is a shorthand for\n\u003ccode\u003estr.each_line(separator).to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_line\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf \u003cem\u003einteger\u003c/em\u003e is greater than the length of \u003cem\u003estr\u003c/em\u003e, returns a\nnew \u003ccode\u003eString\u003c/code\u003e of length \u003cem\u003einteger\u003c/em\u003e with \u003cem\u003estr\u003c/em\u003e left\njustified and padded with \u003cem\u003epadstr\u003c/em\u003e; otherwise, returns \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello               \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello123412341234123\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with leading whitespace removed. See also\n\u003ccode\u003eString#rstrip\u003c/code\u003e and \u003ccode\u003eString#strip\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello  \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves leading whitespace from \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if\nno change was made. See also \u003ccode\u003eString#rstrip!\u003c/code\u003e and\n\u003ccode\u003eString#strip!\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello  \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip!'\u003elstrip!\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003epattern\u003c/em\u003e to a \u003ccode\u003eRegexp\u003c/code\u003e (if it isn\u0026#39;t already\none), then invokes its \u003ccode\u003ematch\u003c/code\u003e method on \u003cem\u003estr\u003c/em\u003e.  If the\nsecond parameter is present, it specifies the position in the string to\nbegin the search.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;MatchData \u0026quot;ll\u0026quot; 1:\u0026quot;l\u0026quot;\u0026gt;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003exx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a block is given, invoke the block with MatchData if match succeed, so\nthat you can write\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003estr.match(pat) {|m| ...}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003einstead of\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003eif m = str.match(pat)\n  ...\nend\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe return value is a value from block execution in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eMatchData\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(pattern) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eMatchData\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(pattern, pos) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the successor to \u003cem\u003estr\u003c/em\u003e. The successor is calculated by\nincrementing characters starting from the rightmost alphanumeric (or the\nrightmost character if there are no alphanumerics) in the string.\nIncrementing a digit always results in another digit, and incrementing a\nletter results in another letter of the same case. Incrementing\nnonalphanumerics uses the underlying character set\u0026#39;s collating\nsequence.\u003c/p\u003e\n\n\u003cp\u003eIf the increment generates a “carry,\u0026#39;\u0026#39; the character to the left of\nit is incremented. This process repeats until there is no carry, adding an\nadditional character if necessary.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abce\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eTHX1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;THX1139\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;koala\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026lt;\u0026lt;koalb\u0026gt;\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1999zzz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000aaa\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eZZZ9999\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;AAAA0000\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e***\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;**+\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#succ\u003c/code\u003e, but modifies the receiver in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTreats leading characters of \u003cem\u003estr\u003c/em\u003e as a string of octal digits (with\nan optional sign) and returns the corresponding number.  Returns 0 if the\nconversion fails.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 83\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-377\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; -255\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebad\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0377bad\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 255\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn the \u003ccode\u003eInteger\u003c/code\u003e ordinal of a one-character string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 97\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSearches \u003cem\u003esep\u003c/em\u003e or pattern (\u003cem\u003eregexp\u003c/em\u003e) in the string and\nreturns the part before it, the match, and the part after it. If it is not\nfound, returns two empty strings and \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;he\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;lo\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;hello\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.l\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;el\u0026quot;, \u0026quot;lo\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epartition\u003c/strong\u003e(sep) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epartition\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrepend—Prepend the given string to \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_prepend'\u003eprepend\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReplaces the contents and taintedness of \u003cem\u003estr\u003c/em\u003e with the\ncorresponding values in \u003cem\u003eother_str\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_replace'\u003ereplace\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new string with the characters from \u003cem\u003estr\u003c/em\u003e in reverse\norder.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estressed\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_reverse'\u003ereverse\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;desserts\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReverses \u003cem\u003estr\u003c/em\u003e in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the index of the last occurrence of the given \u003cem\u003esubstring\u003c/em\u003e or\npattern (\u003cem\u003eregexp\u003c/em\u003e) in \u003cem\u003estr\u003c/em\u003e. Returns \u003ccode\u003enil\u003c/code\u003e if not\nfound. If the second parameter is present, it specifies the position in the\nstring to end the search—characters beyond this point will not be\nconsidered.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='CHAR'\u003e?e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003erindex\u003c/strong\u003e(substring[, fixnum]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003erindex\u003c/strong\u003e(regexp[, fixnum]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf \u003cem\u003einteger\u003c/em\u003e is greater than the length of \u003cem\u003estr\u003c/em\u003e, returns a\nnew \u003ccode\u003eString\u003c/code\u003e of length \u003cem\u003einteger\u003c/em\u003e with \u003cem\u003estr\u003c/em\u003e right\njustified and padded with \u003cem\u003epadstr\u003c/em\u003e; otherwise, returns \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;               hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;123412341234123hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSearches \u003cem\u003esep\u003c/em\u003e or pattern (\u003cem\u003eregexp\u003c/em\u003e) in the string from the\nend of the string, and returns the part before it, the match, and the part\nafter it. If it is not found, returns two empty strings and \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;hel\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;hello\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.l\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;he\u0026quot;, \u0026quot;ll\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erpartition\u003c/strong\u003e(sep) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erpartition\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with trailing whitespace removed. See also\n\u003ccode\u003eString#lstrip\u003c/code\u003e and \u003ccode\u003eString#strip\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;  hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves trailing whitespace from \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e\nif no change was made. See also \u003ccode\u003eString#lstrip!\u003c/code\u003e and\n\u003ccode\u003eString#strip!\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;  hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip!'\u003erstrip!\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBoth forms iterate through \u003cem\u003estr\u003c/em\u003e, matching the pattern (which may be\na \u003ccode\u003eRegexp\u003c/code\u003e or a \u003ccode\u003eString\u003c/code\u003e). For each match, a result\nis generated and either added to the result array or passed to the block.\nIf the pattern contains no groups, each individual result consists of the\nmatched string, \u003ccode\u003e$\u0026amp;\u003c/code\u003e.  If the pattern contains groups, each\nindividual result is itself an array containing one entry per group.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecruel world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\w+\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;cruel\u0026quot;, \u0026quot;world\u0026quot;]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e...\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;cru\u0026quot;, \u0026quot;el \u0026quot;, \u0026quot;wor\u0026quot;]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(...)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;cru\u0026quot;], [\u0026quot;el \u0026quot;], [\u0026quot;wor\u0026quot;]]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(..)(..)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;cr\u0026quot;, \u0026quot;ue\u0026quot;], [\u0026quot;l \u0026quot;, \u0026quot;wo\u0026quot;]]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd the block form:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\w+\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_w'\u003ew\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class='embexpr_beg'\u003e#{\u003c/span\u003e\u003cspan class='id identifier rubyid_w'\u003ew\u003c/span\u003e\u003cspan class='embexpr_end'\u003e}\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)(.)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_x'\u003ex\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_x'\u003ex\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u0026lt;\u0026lt;cruel\u0026gt;\u0026gt; \u0026lt;\u0026lt;world\u0026gt;\u0026gt;\nrceu lowlr\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003escan\u003c/strong\u003e(pattern) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escan\u003c/strong\u003e(pattern) {|match, ...| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e, \u003ctt\u003e...\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf the string is invalid byte sequence then replace invalid bytes with\ngiven replacement character, else returns self. If block is given, replace\ninvalid bytes with returned value of the block.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\\uFFFD\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\xE3\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack'\u003eunpack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eH*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\u0026lt;e380\u0026gt;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e(repl) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e {|bytes| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ebytes\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf the string is invalid byte sequence then replace invalid bytes with\ngiven replacement character, else returns self. If block is given, replace\ninvalid bytes with returned value of the block.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\\uFFFD\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\xE3\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack'\u003eunpack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eH*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\u0026lt;e380\u0026gt;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e(repl) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e {|bytes| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ebytes\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003emodifies the \u003cem\u003eindex\u003c/em\u003eth byte as \u003cem\u003einteger\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the character length of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Reference — If passed a single \u003ccode\u003eindex\u003c/code\u003e, returns a\nsubstring of one character at that index. If passed a \u003ccode\u003estart\u003c/code\u003e\nindex and a \u003ccode\u003elength\u003c/code\u003e, returns a substring containing\n\u003ccode\u003elength\u003c/code\u003e characters starting at the \u003ccode\u003eindex\u003c/code\u003e. If\npassed a \u003ccode\u003erange\u003c/code\u003e, its beginning and end are interpreted as\noffsets delimiting the substring to be returned.\u003c/p\u003e\n\n\u003cp\u003eIn these three cases, if an index is negative, it is counted from the end\nof the string.  For the \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003erange\u003c/code\u003e cases the\nstarting index is just before a character and an index matching the\nstring\u0026#39;s size. Additionally, an empty string is returned when the\nstarting index for a character range is at the end of the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the initial index falls outside the string or\nthe length is negative.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003eRegexp\u003c/code\u003e is supplied, the matching portion of the string is\nreturned.  If a \u003ccode\u003ecapture\u003c/code\u003e follows the regular expression, which\nmay be a capture group index or name, follows the regular expression that\ncomponent of the MatchData is returned instead.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003ematch_str\u003c/code\u003e is given, that string is returned if it occurs\nin the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the regular expression does not match or the\nmatch string cannot be found.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;er\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003enon_vowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003evowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;lo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebye\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDeletes the specified portion from \u003cem\u003estr\u003c/em\u003e, and returns the portion\ndeleted.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ethis is a string\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;i\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot; is \u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003es.*t\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;sa st\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003er\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;r\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;thing\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(fixnum, fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(other_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDivides \u003cem\u003estr\u003c/em\u003e into substrings based on a delimiter, returning an\narray of these substrings.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is a \u003ccode\u003eString\u003c/code\u003e, then its contents are used as\nthe delimiter when splitting \u003cem\u003estr\u003c/em\u003e. If \u003cem\u003epattern\u003c/em\u003e is a single\nspace, \u003cem\u003estr\u003c/em\u003e is split on whitespace, with leading whitespace and\nruns of contiguous whitespace characters ignored.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is a \u003ccode\u003eRegexp\u003c/code\u003e, \u003cem\u003estr\u003c/em\u003e is divided where\nthe pattern matches. Whenever the pattern matches a zero-length string,\n\u003cem\u003estr\u003c/em\u003e is split into individual characters. If \u003cem\u003epattern\u003c/em\u003e\ncontains groups, the respective matches will be returned in the array as\nwell.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is omitted, the value of \u003ccode\u003e$;\u003c/code\u003e is used.  If\n\u003ccode\u003e$;\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e (which is the default), \u003cem\u003estr\u003c/em\u003e is\nsplit on whitespace as if ` \u0026#39; were specified.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003cem\u003elimit\u003c/em\u003e parameter is omitted, trailing null fields are\nsuppressed. If \u003cem\u003elimit\u003c/em\u003e is a positive number, at most that number of\nfields will be returned (if \u003cem\u003elimit\u003c/em\u003e is \u003ccode\u003e1\u003c/code\u003e, the entire\nstring is returned as the only entry in an array). If negative, there is no\nlimit to the number of fields returned, and trailing null fields are not\nsuppressed.\u003c/p\u003e\n\n\u003cp\u003eWhen the input \u003ccode\u003estr\u003c/code\u003e is empty an empty Array is returned as the\nstring is considered to have no fields to split.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;\u0026quot;, \u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1, 2.34,56, 7\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e%r{\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\\s*\u003c/span\u003e\u003cspan class='regexp_end'\u003e}\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2.34\u0026quot;, \u0026quot;56\u0026quot;, \u0026quot;7\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;llo\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehi mom\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e%r{\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\s*\u003c/span\u003e\u003cspan class='regexp_end'\u003e}\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;i\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;o\u0026quot;, \u0026quot;m\u0026quot;]\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emellow yellow\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;m\u0026quot;, \u0026quot;w y\u0026quot;, \u0026quot;w\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3\u0026quot;, \u0026quot;4\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3,4,,\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3\u0026quot;, \u0026quot;4\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;\u0026quot;]\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; []\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBuilds a set of characters from the \u003cem\u003eother_str\u003c/em\u003e parameter(s) using\nthe procedure described for \u003ccode\u003eString#count\u003c/code\u003e. Returns a new string\nwhere runs of the same character that occur in this set are replaced by a\nsingle character. If no arguments are given, all runs of identical\ncharacters are replaced by a single character.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eyellow moon\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;yelow mon\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  now   is  the\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot; now is the\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eputters shoot balls\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003em-z\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;puters shot balls\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSqueezes \u003cem\u003estr\u003c/em\u003e in place, returning either \u003cem\u003estr\u003c/em\u003e, or\n\u003ccode\u003enil\u003c/code\u003e if no changes were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true if \u003ccode\u003estr\u003c/code\u003e starts with one of the\n\u003ccode\u003eprefixes\u003c/code\u003e given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# returns true if one of the prefixes matches.\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eheaven\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eheaven\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eparadise\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with leading and trailing whitespace\nremoved.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e    hello    \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strip'\u003estrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\tgoodbye\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strip'\u003estrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;goodbye\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves leading and trailing whitespace from \u003cem\u003estr\u003c/em\u003e. Returns\n\u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e was not altered.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003ccode\u003estr\u003c/code\u003e with the \u003cem\u003efirst\u003c/em\u003e occurrence of\n\u003ccode\u003epattern\u003c/code\u003e replaced by the second argument. The\n\u003ccode\u003epattern\u003c/code\u003e is typically a Regexp; if given as a String, any\nregular expression metacharacters it contains will be interpreted\nliterally, e.g. \u003ccode\u003e\u0026#39;\\\\d\u0026#39;\u003c/code\u003e will match a backlash followed\nby \u0026#39;d\u0026#39;, instead of a digit.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003ereplacement\u003c/code\u003e is a String it will be substituted for the\nmatched text. It may contain back-references to the pattern\u0026#39;s capture\ngroups of the form \u003ccode\u003e\u0026quot;\\d\u0026quot;\u003c/code\u003e, where \u003cem\u003ed\u003c/em\u003e is a group\nnumber, or \u003ccode\u003e\u0026quot;\\k\u0026lt;n\u0026gt;\u0026quot;\u003c/code\u003e, where \u003cem\u003en\u003c/em\u003e is a\ngroup name. If it is a double-quoted string, both back-references must be\npreceded by an additional backslash. However, within\n\u003ccode\u003ereplacement\u003c/code\u003e the special match variables, such as\n\u003ccode\u003e\u0026amp;$\u003c/code\u003e, will not refer to the current match.\u003c/p\u003e\n\n\u003cp\u003eIf the second argument is a Hash, and the matched text is one of its keys,\nthe corresponding value is the replacement string.\u003c/p\u003e\n\n\u003cp\u003eIn the block form, the current match string is passed in as a parameter,\nand variables such as \u003ccode\u003e$1\u003c/code\u003e, \u003ccode\u003e$2\u003c/code\u003e, \u003ccode\u003e$`\u003c/code\u003e,\n\u003ccode\u003e$\u0026amp;\u003c/code\u003e, and \u003ccode\u003e$\u0026#39;\u003c/code\u003e will be set appropriately. The\nvalue returned by the block will be substituted for the match on each call.\u003c/p\u003e\n\n\u003cp\u003eThe result inherits any tainting in the original string or any supplied\nreplacement string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e([aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\\1\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h\u0026lt;e\u0026gt;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;104 ello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;foo\u0026gt;[aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\\k\u0026lt;foo\u0026gt;*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*e*llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eIs SHELL your preferred shell?\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[[:upper:]]{2,}\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='const'\u003eENV\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Is /bin/bash your preferred shell?\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern, hash) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms the same substitution as String#sub in-place.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003estr\u003c/code\u003e if a substitution was performed or\n\u003ccode\u003enil\u003c/code\u003e if no substitution was performed.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003esub!\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003esub!\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the successor to \u003cem\u003estr\u003c/em\u003e. The successor is calculated by\nincrementing characters starting from the rightmost alphanumeric (or the\nrightmost character if there are no alphanumerics) in the string.\nIncrementing a digit always results in another digit, and incrementing a\nletter results in another letter of the same case. Incrementing\nnonalphanumerics uses the underlying character set\u0026#39;s collating\nsequence.\u003c/p\u003e\n\n\u003cp\u003eIf the increment generates a “carry,\u0026#39;\u0026#39; the character to the left of\nit is incremented. This process repeats until there is no carry, adding an\nadditional character if necessary.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abce\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eTHX1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;THX1139\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;koala\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026lt;\u0026lt;koalb\u0026gt;\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1999zzz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000aaa\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eZZZ9999\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;AAAA0000\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e***\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;**+\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#succ\u003c/code\u003e, but modifies the receiver in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a basic \u003cem\u003en\u003c/em\u003e-bit checksum of the characters in \u003cem\u003estr\u003c/em\u003e,\nwhere \u003cem\u003en\u003c/em\u003e is the optional \u003ccode\u003eFixnum\u003c/code\u003e parameter, defaulting\nto 16. The result is simply the sum of the binary value of each character\nin \u003cem\u003estr\u003c/em\u003e modulo \u003ccode\u003e2**n - 1\u003c/code\u003e. This is not a particularly\ngood checksum.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with uppercase alphabetic characters\nconverted to lowercase and lowercase characters converted to uppercase.\nNote: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_swapcase'\u003eswapcase\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hELLO\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecYbEr_PuNk11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_swapcase'\u003eswapcase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CyBeR_pUnK11\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#swapcase\u003c/code\u003e, but modifies the receiver in\nplace, returning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no changes were made.\nNote: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the result of interpreting leading characters in \u003cem\u003estr\u003c/em\u003e as a\nfloating point number. Extraneous characters past the end of a valid number\nare ignored. If there is not a valid number at the start of \u003cem\u003estr\u003c/em\u003e,\n\u003ccode\u003e0.0\u003c/code\u003e is returned. This method never raises an exception.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123.45e1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 1234.5\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e45.67 degrees\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 45.67\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ethx1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 0.0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the result of interpreting leading characters in \u003cem\u003estr\u003c/em\u003e as an\ninteger base \u003cem\u003ebase\u003c/em\u003e (between 2 and 36). Extraneous characters past\nthe end of a valid number are ignored. If there is not a valid number at\nthe start of \u003cem\u003estr\u003c/em\u003e, \u003ccode\u003e0\u003c/code\u003e is returned. This method never\nraises an exception when \u003cem\u003ebase\u003c/em\u003e is valid.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e12345\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 12345\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e99 red balloons\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 99\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 10\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 101\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 294977\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 1100101\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 17826049\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the receiver.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_str\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the receiver.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_str\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003ccode\u003estr\u003c/code\u003e with the characters in\n\u003ccode\u003efrom_str\u003c/code\u003e replaced by the corresponding characters in\n\u003ccode\u003eto_str\u003c/code\u003e.  If \u003ccode\u003eto_str\u003c/code\u003e is shorter than\n\u003ccode\u003efrom_str\u003c/code\u003e, it is padded with its last character in order to\nmaintain the correspondence.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eip\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hippo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAA*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hAll*\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBoth strings may use the \u003ccode\u003ec1-c2\u003c/code\u003e notation to denote ranges of\ncharacters, and \u003ccode\u003efrom_str\u003c/code\u003e may start with a \u003ccode\u003e^\u003c/code\u003e,\nwhich denotes all characters except those listed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea-y\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb-z\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ifmmp\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;*e**o\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe backslash character \u003ccode\u003e\u0026lt;/code\u0026gt; can be used to escape\n\u0026lt;code\u0026gt;^\u003c/code\u003e or \u003ccode\u003e-\u003c/code\u003e and is otherwise ignored unless it\nappears at the end of a range or the end of the \u003ccode\u003efrom_str\u003c/code\u003e or\n\u003ccode\u003eto_str\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello^world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll**w*rld\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello-world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\\\\-eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll**w*rld\u0026quot;\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\nworld\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\r\\nwold\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\nworld\u0026quot;\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX[\u0026#39;\\\\b\u0026#39;]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\\\\\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;[\u0026#39;b\u0026#39;]\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX[\u0026#39;\\\\b\u0026#39;]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX-\\\\]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026#39;b\u0026#39;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTranslates \u003cem\u003estr\u003c/em\u003e in place, using the same rules as\n\u003ccode\u003eString#tr\u003c/code\u003e. Returns \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProcesses a copy of \u003cem\u003estr\u003c/em\u003e as described under \u003ccode\u003eString#tr\u003c/code\u003e,\nthen removes duplicate characters in regions that were affected by the\ntranslation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003er\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hero\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*o\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hhxo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms \u003ccode\u003eString#tr_s\u003c/code\u003e processing on \u003cem\u003estr\u003c/em\u003e in place,\nreturning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no changes were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all lowercase letters replaced with\ntheir uppercase counterparts. The operation is locale insensitive—only\ncharacters “a\u0026#39;\u0026#39; to “z\u0026#39;\u0026#39; are affected. Note: case\nreplacement is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehEllO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upcase'\u003eupcase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;HELLO\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUpcases the contents of \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made. Note: case replacement is effective only in ASCII\nregion.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIterates through successive values, starting at \u003cem\u003estr\u003c/em\u003e and ending at\n\u003cem\u003eother_str\u003c/em\u003e inclusive, passing each value in turn to the block. The\n\u003ccode\u003eString#succ\u003c/code\u003e method is used to generate each value.  If\noptional second argument exclusive is omitted or is false, the last value\nwill be included; otherwise it will be excluded.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb6\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='kw'\u003efor\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='kw'\u003ein\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb6\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n  \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='kw'\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a8'\u003ea8\u003c/span\u003e \u003cspan class='id identifier rubyid_a9'\u003ea9\u003c/span\u003e \u003cspan class='id identifier rubyid_b0'\u003eb0\u003c/span\u003e \u003cspan class='id identifier rubyid_b1'\u003eb1\u003c/span\u003e \u003cspan class='id identifier rubyid_b2'\u003eb2\u003c/span\u003e \u003cspan class='id identifier rubyid_b3'\u003eb3\u003c/span\u003e \u003cspan class='id identifier rubyid_b4'\u003eb4\u003c/span\u003e \u003cspan class='id identifier rubyid_b5'\u003eb5\u003c/span\u003e \u003cspan class='id identifier rubyid_b6'\u003eb6\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a8'\u003ea8\u003c/span\u003e \u003cspan class='id identifier rubyid_a9'\u003ea9\u003c/span\u003e \u003cspan class='id identifier rubyid_b0'\u003eb0\u003c/span\u003e \u003cspan class='id identifier rubyid_b1'\u003eb1\u003c/span\u003e \u003cspan class='id identifier rubyid_b2'\u003eb2\u003c/span\u003e \u003cspan class='id identifier rubyid_b3'\u003eb3\u003c/span\u003e \u003cspan class='id identifier rubyid_b4'\u003eb4\u003c/span\u003e \u003cspan class='id identifier rubyid_b5'\u003eb5\u003c/span\u003e \u003cspan class='id identifier rubyid_b6'\u003eb6\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf \u003cem\u003estr\u003c/em\u003e and \u003cem\u003eother_str\u003c/em\u003e contains only ascii numeric\ncharacters, both are recognized as decimal numbers. In addition, the width\nof string (e.g. leading zeros) is handled appropriately.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e9\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;9\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;11\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e25\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e5\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; []\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e07\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;07\u0026quot;, \u0026quot;08\u0026quot;, \u0026quot;09\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;11\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eupto\u003c/strong\u003e(other_str, exclusive = false) {|s| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003es\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true for a string which encoded correctly.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\xc2\\xa1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\xc2\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$classmethods/try_convert",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTry to convert \u003cem\u003eobj\u003c/em\u003e into a String, using to_str method. Returns\nconverted string or nil if \u003cem\u003eobj\u003c/em\u003e cannot be converted for any reason.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eString\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_try_convert'\u003etry_convert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estr\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;str\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eString\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_try_convert'\u003etry_convert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003ere\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/%",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eFormat—Uses \u003cem\u003estr\u003c/em\u003e as a format specification, and returns the result\nof applying it to \u003cem\u003earg\u003c/em\u003e. If the format specification contains more\nthan one substitution, then \u003cem\u003earg\u003c/em\u003e must be an \u003ccode\u003eArray\u003c/code\u003e or\n\u003ccode\u003eHash\u003c/code\u003e containing the values to be substituted. See\n\u003ccode\u003eKernel::sprintf\u003c/code\u003e for details of the format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%05d\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='int'\u003e123\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;00123\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%-5s: %08x\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eID\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003eself\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_object_id'\u003eobject_id\u003c/span\u003e \u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ID   : 200e14d6\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003efoo = %{foo}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e \u003cspan class='symbol'\u003e:foo\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo = bar\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/*",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCopy — Returns a new String containing \u003ccode\u003einteger\u003c/code\u003e copies of the\nreceiver. \u003ccode\u003einteger\u003c/code\u003e must be greater than or equal to 0.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHo! \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Ho! Ho! Ho! \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHo! \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/+",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConcatenation—Returns a new \u003ccode\u003eString\u003c/code\u003e containing\n\u003cem\u003eother_str\u003c/em\u003e concatenated to \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHello from \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='kw'\u003eself\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello from main\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/==",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch3 id=\"label-Equality\"\u003eEquality\u003c/h3\u003e\n\n\u003cp\u003eReturns whether \u003ccode\u003estr\u003c/code\u003e == \u003ccode\u003eobj\u003c/code\u003e, similar to Object#==.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eobj\u003c/code\u003e is not an instance of String but responds to\n\u003ccode\u003eto_str\u003c/code\u003e, then the two strings are compared using case equality\nObject#===.\u003c/p\u003e\n\n\u003cp\u003eOtherwise, returns similarly to String#eql?, comparing length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e==\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e===\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/===",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch3 id=\"label-Equality\"\u003eEquality\u003c/h3\u003e\n\n\u003cp\u003eReturns whether \u003ccode\u003estr\u003c/code\u003e == \u003ccode\u003eobj\u003c/code\u003e, similar to Object#==.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eobj\u003c/code\u003e is not an instance of String but responds to\n\u003ccode\u003eto_str\u003c/code\u003e, then the two strings are compared using case equality\nObject#===.\u003c/p\u003e\n\n\u003cp\u003eOtherwise, returns similarly to String#eql?, comparing length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e==\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003e===\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/=~",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMatch—If \u003cem\u003eobj\u003c/em\u003e is a \u003ccode\u003eRegexp\u003c/code\u003e, use it as a pattern to\nmatch against \u003cem\u003estr\u003c/em\u003e,and returns the position the match starts, or\n\u003ccode\u003enil\u003c/code\u003e if there is no match. Otherwise, invokes \u003cem\u003eobj.=~\u003c/em\u003e,\npassing \u003cem\u003estr\u003c/em\u003e as an argument. The default \u003ccode\u003e=~\u003c/code\u003e in\n\u003ccode\u003eObject\u003c/code\u003e returns \u003ccode\u003enil\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eNote: \u003ccode\u003estr =~ regexp\u003c/code\u003e is not the same as \u003ccode\u003eregexp =~\nstr\u003c/code\u003e. Strings captured from named capture groups are assigned to\nlocal variables only in the second case.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecat o\u0026#39; 9 tails\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=~\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\d\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 7\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecat o\u0026#39; 9 tails\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=~\u003c/span\u003e \u003cspan class='int'\u003e9\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/[]",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Reference — If passed a single \u003ccode\u003eindex\u003c/code\u003e, returns a\nsubstring of one character at that index. If passed a \u003ccode\u003estart\u003c/code\u003e\nindex and a \u003ccode\u003elength\u003c/code\u003e, returns a substring containing\n\u003ccode\u003elength\u003c/code\u003e characters starting at the \u003ccode\u003eindex\u003c/code\u003e. If\npassed a \u003ccode\u003erange\u003c/code\u003e, its beginning and end are interpreted as\noffsets delimiting the substring to be returned.\u003c/p\u003e\n\n\u003cp\u003eIn these three cases, if an index is negative, it is counted from the end\nof the string.  For the \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003erange\u003c/code\u003e cases the\nstarting index is just before a character and an index matching the\nstring\u0026#39;s size. Additionally, an empty string is returned when the\nstarting index for a character range is at the end of the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the initial index falls outside the string or\nthe length is negative.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003eRegexp\u003c/code\u003e is supplied, the matching portion of the string is\nreturned.  If a \u003ccode\u003ecapture\u003c/code\u003e follows the regular expression, which\nmay be a capture group index or name, follows the regular expression that\ncomponent of the MatchData is returned instead.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003ematch_str\u003c/code\u003e is given, that string is returned if it occurs\nin the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the regular expression does not match or the\nmatch string cannot be found.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;er\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003enon_vowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003evowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;lo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebye\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/[]=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Assignment—Replaces some or all of the content of \u003cem\u003estr\u003c/em\u003e. The\nportion of the string affected is determined using the same criteria as\n\u003ccode\u003eString#[]\u003c/code\u003e. If the replacement string is not the same length as\nthe text it is replacing, the string will be adjusted accordingly. If the\nregular expression or string is used as the index doesn\u0026#39;t match a\nposition in the string, \u003ccode\u003eIndexError\u003c/code\u003e is raised. If the regular\nexpression form is used, the optional second \u003ccode\u003eFixnum\u003c/code\u003e allows you\nto specify which portion of the match to replace (effectively using the\n\u003ccode\u003eMatchData\u003c/code\u003e indexing rules. The forms that take a\n\u003ccode\u003eFixnum\u003c/code\u003e will raise an \u003ccode\u003eIndexError\u003c/code\u003e if the value is\nout of range; the \u003ccode\u003eRange\u003c/code\u003e form will raise a\n\u003ccode\u003eRangeError\u003c/code\u003e, and the \u003ccode\u003eRegexp\u003c/code\u003e and\n\u003ccode\u003eString\u003c/code\u003e will raise an \u003ccode\u003eIndexError\u003c/code\u003e on negative\nmatch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/\u003c=@",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComparison—Returns -1, 0, +1 or nil depending on whether\n\u003ccode\u003estring\u003c/code\u003e is less than, equal to, or greater than\n\u003ccode\u003eother_string\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enil\u003c/code\u003e is returned if the two values are incomparable.\u003c/p\u003e\n\n\u003cp\u003eIf the strings are of different lengths, and the strings are equal when\ncompared up to the shortest length, then the longer string is considered\ngreater than the shorter one.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003e\u0026lt;=\u0026gt;\u003c/code\u003e is the basis for the methods \u003ccode\u003e\u0026lt;\u003c/code\u003e,\n\u003ccode\u003e\u0026lt;=\u003c/code\u003e, \u003ccode\u003e\u0026gt;\u003c/code\u003e, \u003ccode\u003e\u0026gt;=\u003c/code\u003e, and\n\u003ccode\u003ebetween?\u003c/code\u003e, included from module Comparable. The method\nString#== does not use Comparable#==.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdefg\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eABCDEF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/\u003c\u003c",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAppend—Concatenates the given object to \u003cem\u003estr\u003c/em\u003e. If the object is a\n\u003ccode\u003eInteger\u003c/code\u003e, it is considered as a codepoint, and is converted to\na character before concatenation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_concat'\u003econcat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e33\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world!\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/ascii_only?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true for a string which has only ASCII characters.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ascii_only?'\u003eascii_only?\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u{6666}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ascii_only?'\u003eascii_only?\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/b",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copied string whose encoding is ASCII-8BIT.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/bytes",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of bytes in \u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_byte.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_byte\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/bytesize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the length of \u003ccode\u003estr\u003c/code\u003e in bytes.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\\u3042\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_bytesize'\u003ebytesize\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_bytesize'\u003ebytesize\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/byteslice",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eByte Reference—If passed a single \u003ccode\u003eFixnum\u003c/code\u003e, returns a substring\nof one byte at that position. If passed two \u003ccode\u003eFixnum\u003c/code\u003e objects,\nreturns a substring starting at the offset given by the first, and a length\ngiven by the second. If given a \u003ccode\u003eRange\u003c/code\u003e, a substring containing\nbytes at offsets given by the range is returned. In all three cases, if an\noffset is negative, it is counted from the end of \u003cem\u003estr\u003c/em\u003e. Returns\n\u003ccode\u003enil\u003c/code\u003e if the initial offset falls outside the string, the length\nis negative, or the beginning of the range is greater than the end. The\nencoding of the resulted string keeps original encoding.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;o\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;el\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\\u3042\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\u3042\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x03\\u3042\\xff\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_byteslice'\u003ebyteslice\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\u3042\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(fixnum, fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ebyteslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/capitalize!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eModifies \u003cem\u003estr\u003c/em\u003e by converting the first character to uppercase and\nthe remainder to lowercase. Returns \u003ccode\u003enil\u003c/code\u003e if no changes are\nmade. Note: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize!'\u003ecapitalize!\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize!'\u003ecapitalize!\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/capitalize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with the first character converted to\nuppercase and the remainder to lowercase. Note: case conversion is\neffective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHELLO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123ABC\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_capitalize'\u003ecapitalize\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;123abc\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/casecmp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCase-insensitive version of \u003ccode\u003eString#\u0026lt;=\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaBcDeF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdefg\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcdef\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_casecmp'\u003ecasecmp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eABCDEF\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/center",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCenters \u003ccode\u003estr\u003c/code\u003e in \u003ccode\u003ewidth\u003c/code\u003e.  If \u003ccode\u003ewidth\u003c/code\u003e is\ngreater than the length of \u003ccode\u003estr\u003c/code\u003e, returns a new String of length\n\u003ccode\u003ewidth\u003c/code\u003e with \u003ccode\u003estr\u003c/code\u003e centered and padded with\n\u003ccode\u003epadstr\u003c/code\u003e; otherwise, returns \u003ccode\u003estr\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;       hello        \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_center'\u003ecenter\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1231231hello12312312\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chars",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of characters in \u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_char.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_char\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chomp!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eModifies \u003cem\u003estr\u003c/em\u003e in place as described for \u003ccode\u003eString#chomp\u003c/code\u003e,\nreturning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no modifications were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chomp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new \u003ccode\u003eString\u003c/code\u003e with the given record separator removed\nfrom the end of \u003cem\u003estr\u003c/em\u003e (if present). If \u003ccode\u003e$/\u003c/code\u003e has not been\nchanged from the default Ruby record separator, then \u003ccode\u003echomp\u003c/code\u003e\nalso removes carriage return characters (that is it will remove\n\u003ccode\u003e\\n\u003c/code\u003e, \u003ccode\u003e\\r\u003c/code\u003e, and \u003ccode\u003e\\r\\n\u003c/code\u003e).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\n\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \\n there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello \\n there\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chomp'\u003echomp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;he\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chop!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProcesses \u003cem\u003estr\u003c/em\u003e as for \u003ccode\u003eString#chop\u003c/code\u003e, returning\n\u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e is the empty string.  See\nalso \u003ccode\u003eString#chomp!\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chop",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new \u003ccode\u003eString\u003c/code\u003e with the last character removed.  If the\nstring ends with \u003ccode\u003e\\r\\n\u003c/code\u003e, both characters are removed. Applying\n\u003ccode\u003echop\u003c/code\u003e to an empty string returns an empty string.\n\u003ccode\u003eString#chomp\u003c/code\u003e is often a safer alternative, as it leaves the\nstring unchanged if it doesn\u0026#39;t end in a record separator.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\n\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\\n\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;string\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estring\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;strin\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chop'\u003echop\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/chr",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a one-character string at the beginning of the string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_chr'\u003echr\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;a\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/clear",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMakes string empty.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcde\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_clear'\u003eclear\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/codepoints",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of the \u003ccode\u003eInteger\u003c/code\u003e ordinals of the characters in\n\u003cem\u003estr\u003c/em\u003e.  This is a shorthand for\n\u003ccode\u003estr.each_codepoint.to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_codepoint\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/concat",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAppend—Concatenates the given object to \u003cem\u003estr\u003c/em\u003e. If the object is a\n\u003ccode\u003eInteger\u003c/code\u003e, it is considered as a codepoint, and is converted to\na character before concatenation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;\u0026lt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_concat'\u003econcat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e33\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world!\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(integer) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e\u0026lt;\u0026lt;\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003econcat\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/count",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEach \u003ccode\u003eother_str\u003c/code\u003e parameter defines a set of characters to count.\nThe intersection of these sets defines the characters to count in\n\u003ccode\u003estr\u003c/code\u003e.  Any \u003ccode\u003eother_str\u003c/code\u003e that starts with a caret\n\u003ccode\u003e^\u003c/code\u003e is negated.  The sequence \u003ccode\u003ec1-c2\u003c/code\u003e means all\ncharacters between c1 and c2.  The backslash character \u003ccode\u003e\u0026lt;/code\u0026gt;\ncan be used to escape \u0026lt;code\u0026gt;^\u003c/code\u003e or \u003ccode\u003e-\u003c/code\u003e and is\notherwise ignored unless it appears at the end of a sequence or the end of\na \u003ccode\u003eother_str\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 5\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^l\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eej-m\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                 \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello^world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello-world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\\\\-eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello world\\\\r\\\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\A\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_count'\u003ecount\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX-\\\\w\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/crypt",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eApplies a one-way cryptographic hash to \u003cem\u003estr\u003c/em\u003e by invoking the\nstandard library function \u003ccode\u003ecrypt(3)\u003c/code\u003e with the given salt string.\nWhile the format and the result are system and implementation dependent,\nusing a salt matching the regular expression\n\u003ccode\u003e\\A[a-zA-Z0-9./]{2}\u003c/code\u003e should be valid and safe on any platform,\nin which only the first two characters are significant.\u003c/p\u003e\n\n\u003cp\u003eThis method is for use in system specific scripts, so if you want a\ncross-platform hash function consider using Digest or OpenSSL instead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/delete!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms a \u003ccode\u003edelete\u003c/code\u003e operation in place, returning \u003cem\u003estr\u003c/em\u003e,\nor \u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e was not modified.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/delete",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all characters in the intersection of\nits arguments deleted. Uses the same rules for building the set of\ncharacters as \u003ccode\u003eString#count\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;heo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;he\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^e\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hell\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_delete'\u003edelete\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eej-m\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ho\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/downcase!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDowncases the contents of \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made. Note: case replacement is effective only in ASCII\nregion.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/downcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all uppercase letters replaced with\ntheir lowercase counterparts. The operation is locale insensitive—only\ncharacters “A\u0026#39;\u0026#39; to “Z\u0026#39;\u0026#39; are affected. Note: case\nreplacement is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehEllO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_downcase'\u003edowncase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/dump",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProduces a version of \u003ccode\u003estr\u003c/code\u003e with all non-printing characters\nreplaced by \u003ccode\u003e\\nnn\u003c/code\u003e notation and all special characters escaped.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \\n \u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dump'\u003edump\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\\u0026quot;hello \\\\n \u0026#39;\u0026#39;\\\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/each_byte",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses each byte in \u003cem\u003estr\u003c/em\u003e to the given block, or returns an\nenumerator if no block is given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_byte'\u003eeach_byte\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e104 101 108 108 111\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_byte\u003c/strong\u003e {|fixnum| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003efixnum\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/each_char",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses each character in \u003cem\u003estr\u003c/em\u003e to the given block, or returns an\nenumerator if no block is given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_char'\u003eeach_char\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_h'\u003eh\u003c/span\u003e \u003cspan class='id identifier rubyid_e'\u003ee\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='id identifier rubyid_o'\u003eo\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_char\u003c/strong\u003e {|cstr| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ecstr\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/each_codepoint",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePasses the \u003ccode\u003eInteger\u003c/code\u003e ordinal of each character in \u003cem\u003estr\u003c/em\u003e,\nalso known as a \u003cem\u003ecodepoint\u003c/em\u003e when applied to Unicode strings to the\ngiven block.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\u0639\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_codepoint'\u003eeach_codepoint\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_c'\u003ec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e104 101 108 108 111 1593\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_codepoint\u003c/strong\u003e {|integer| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003einteger\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/each_line",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSplits \u003cem\u003estr\u003c/em\u003e using the supplied parameter as the record separator\n(\u003ccode\u003e$/\u003c/code\u003e by default), passing each substring in turn to the\nsupplied block.  If a zero-length record separator is supplied, the string\nis split into paragraphs delimited by multiple successive newlines.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample one\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample two\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eExample three\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\n\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_each_line'\u003eeach_line\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_one'\u003eone\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_two'\u003etwo\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\\nworl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ed\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='const'\u003eExample\u003c/span\u003e \u003cspan class='id identifier rubyid_three'\u003ethree\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\n\\n\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eeach_line\u003c/strong\u003e(separator = $/) {|substr| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003esubstr\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/empty?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e has a length of zero.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_empty?'\u003eempty?\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/end_with?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true if \u003ccode\u003estr\u003c/code\u003e ends with one of the \u003ccode\u003esuffixes\u003c/code\u003e\ngiven.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/eql?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTwo strings are equal if they have the same length and content.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/force_encoding",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChanges the encoding to \u003ccode\u003eencoding\u003c/code\u003e and returns self.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/getbyte",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the \u003cem\u003eindex\u003c/em\u003eth byte as an integer.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/gsub!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms the substitutions of \u003ccode\u003eString#gsub\u003c/code\u003e in place, returning\n\u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no substitutions were performed. If no\nblock and no \u003cem\u003ereplacement\u003c/em\u003e is given, an enumerator is returned\ninstead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003egsub!\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003egsub!\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/gsub",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with the \u003cem\u003eall\u003c/em\u003e occurrences of\n\u003cem\u003epattern\u003c/em\u003e substituted for the second argument. The \u003cem\u003epattern\u003c/em\u003e\nis typically a \u003ccode\u003eRegexp\u003c/code\u003e; if given as a \u003ccode\u003eString\u003c/code\u003e, any\nregular expression metacharacters it contains will be interpreted\nliterally, e.g. \u003ccode\u003e\u0026#39;\\\\d\u0026#39;\u003c/code\u003e will match a backlash followed\nby \u0026#39;d\u0026#39;, instead of a digit.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003ereplacement\u003c/em\u003e is a \u003ccode\u003eString\u003c/code\u003e it will be substituted for\nthe matched text. It may contain back-references to the pattern\u0026#39;s\ncapture groups of the form \u003ccode\u003e\\\\d\u003c/code\u003e, where \u003cem\u003ed\u003c/em\u003e is a group\nnumber, or \u003ccode\u003e\\\\k\u0026lt;n\u0026gt;\u003c/code\u003e, where \u003cem\u003en\u003c/em\u003e is a group name. If\nit is a double-quoted string, both back-references must be preceded by an\nadditional backslash. However, within \u003cem\u003ereplacement\u003c/em\u003e the special\nmatch variables, such as \u003ccode\u003e$\u0026amp;\u003c/code\u003e, will not refer to the current\nmatch.\u003c/p\u003e\n\n\u003cp\u003eIf the second argument is a \u003ccode\u003eHash\u003c/code\u003e, and the matched text is one\nof its keys, the corresponding value is the replacement string.\u003c/p\u003e\n\n\u003cp\u003eIn the block form, the current match string is passed in as a parameter,\nand variables such as \u003ccode\u003e$1\u003c/code\u003e, \u003ccode\u003e$2\u003c/code\u003e, \u003ccode\u003e$`\u003c/code\u003e,\n\u003ccode\u003e$\u0026amp;\u003c/code\u003e, and \u003ccode\u003e$\u0026#39;\u003c/code\u003e will be set appropriately. The\nvalue returned by the block will be substituted for the match on each call.\u003c/p\u003e\n\n\u003cp\u003eThe result inherits any tainting in the original string or any supplied\nreplacement string.\u003c/p\u003e\n\n\u003cp\u003eWhen neither a block nor a second argument is supplied, an\n\u003ccode\u003eEnumerator\u003c/code\u003e is returned.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e([aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\\1\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h\u0026lt;e\u0026gt;ll\u0026lt;o\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;104 101 108 108 111 \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;foo\u0026gt;[aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e{\\k\u0026lt;foo\u0026gt;}\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h{e}ll{o}\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gsub'\u003egsub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[eo]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h3ll*\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern, hash) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003egsub\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/hash",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn a hash based on the string\u0026#39;s length, content and encoding.\u003c/p\u003e\n\n\u003cp\u003eSee also Object#hash.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/hex",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTreats leading characters from \u003cem\u003estr\u003c/em\u003e as a string of hexadecimal\ndigits (with an optional sign and an optional \u003ccode\u003e0x\u003c/code\u003e) and returns\nthe corresponding number. Zero is returned on error.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0x0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 10\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; -4660\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewombat\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hex'\u003ehex\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/include?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e contains the given string or\ncharacter.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eol\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_include?'\u003einclude?\u003c/span\u003e \u003cspan class='CHAR'\u003e?h\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/index",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the index of the first occurrence of the given \u003cem\u003esubstring\u003c/em\u003e\nor pattern (\u003cem\u003eregexp\u003c/em\u003e) in \u003cem\u003estr\u003c/em\u003e. Returns \u003ccode\u003enil\u003c/code\u003e if\nnot found. If the second parameter is present, it specifies the position in\nthe string to begin the search.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='CHAR'\u003e?e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_index'\u003eindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eindex\u003c/strong\u003e(substring[, offset]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eindex\u003c/strong\u003e(regexp[, offset]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new string object containing a copy of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/initialize_copy",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReplaces the contents and taintedness of \u003cem\u003estr\u003c/em\u003e with the\ncorresponding values in \u003cem\u003eother_str\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_replace'\u003ereplace\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/insert",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eInserts \u003cem\u003eother_str\u003c/em\u003e before the character at the given\n\u003cem\u003eindex\u003c/em\u003e, modifying \u003cem\u003estr\u003c/em\u003e. Negative indices count from the end\nof the string, and insert \u003cem\u003eafter\u003c/em\u003e the given character. The intent is\ninsert \u003cem\u003eaString\u003c/em\u003e so that it starts at the given \u003cem\u003eindex\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Xabcd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcXd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcdX\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abXcd\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_insert'\u003einsert\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abcdX\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/inspect",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a printable version of \u003cem\u003estr\u003c/em\u003e, surrounded by quote marks,\nwith special characters escaped.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\b\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_inspect'\u003einspect\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\\\u0026quot;hel\\\\bo\\\u0026quot;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/length",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the character length of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/lines",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an array of lines in \u003cem\u003estr\u003c/em\u003e split using the supplied record\nseparator (\u003ccode\u003e$/\u003c/code\u003e by default).  This is a shorthand for\n\u003ccode\u003estr.each_line(separator).to_a\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a block is given, which is a deprecated form, works the same as\n\u003ccode\u003eeach_line\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/ljust",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf \u003cem\u003einteger\u003c/em\u003e is greater than the length of \u003cem\u003estr\u003c/em\u003e, returns a\nnew \u003ccode\u003eString\u003c/code\u003e of length \u003cem\u003einteger\u003c/em\u003e with \u003cem\u003estr\u003c/em\u003e left\njustified and padded with \u003cem\u003epadstr\u003c/em\u003e; otherwise, returns \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello               \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ljust'\u003eljust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello123412341234123\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/lstrip!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves leading whitespace from \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if\nno change was made. See also \u003ccode\u003eString#rstrip!\u003c/code\u003e and\n\u003ccode\u003eString#strip!\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello  \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip!'\u003elstrip!\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/lstrip",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with leading whitespace removed. See also\n\u003ccode\u003eString#rstrip\u003c/code\u003e and \u003ccode\u003eString#strip\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello  \u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_lstrip'\u003elstrip\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/match",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003epattern\u003c/em\u003e to a \u003ccode\u003eRegexp\u003c/code\u003e (if it isn\u0026#39;t already\none), then invokes its \u003ccode\u003ematch\u003c/code\u003e method on \u003cem\u003estr\u003c/em\u003e.  If the\nsecond parameter is present, it specifies the position in the string to\nbegin the search.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;MatchData \u0026quot;ll\u0026quot; 1:\u0026quot;l\u0026quot;\u0026gt;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_match'\u003ematch\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003exx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a block is given, invoke the block with MatchData if match succeed, so\nthat you can write\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003estr.match(pat) {|m| ...}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003einstead of\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003eif m = str.match(pat)\n  ...\nend\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe return value is a value from block execution in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eMatchData\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(pattern) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eMatchData\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(pattern, pos) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/next!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#succ\u003c/code\u003e, but modifies the receiver in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/next",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the successor to \u003cem\u003estr\u003c/em\u003e. The successor is calculated by\nincrementing characters starting from the rightmost alphanumeric (or the\nrightmost character if there are no alphanumerics) in the string.\nIncrementing a digit always results in another digit, and incrementing a\nletter results in another letter of the same case. Incrementing\nnonalphanumerics uses the underlying character set\u0026#39;s collating\nsequence.\u003c/p\u003e\n\n\u003cp\u003eIf the increment generates a “carry,\u0026#39;\u0026#39; the character to the left of\nit is incremented. This process repeats until there is no carry, adding an\nadditional character if necessary.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abce\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eTHX1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;THX1139\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;koala\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026lt;\u0026lt;koalb\u0026gt;\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1999zzz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000aaa\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eZZZ9999\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;AAAA0000\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e***\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;**+\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/oct",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTreats leading characters of \u003cem\u003estr\u003c/em\u003e as a string of octal digits (with\nan optional sign) and returns the corresponding number.  Returns 0 if the\nconversion fails.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 83\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-377\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; -255\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebad\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0377bad\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_oct'\u003eoct\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 255\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/ord",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn the \u003ccode\u003eInteger\u003c/code\u003e ordinal of a one-character string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 97\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/partition",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSearches \u003cem\u003esep\u003c/em\u003e or pattern (\u003cem\u003eregexp\u003c/em\u003e) in the string and\nreturns the part before it, the match, and the part after it. If it is not\nfound, returns two empty strings and \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;he\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;lo\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;hello\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_partition'\u003epartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.l\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;el\u0026quot;, \u0026quot;lo\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epartition\u003c/strong\u003e(sep) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003epartition\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/prepend",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrepend—Prepend the given string to \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_prepend'\u003eprepend\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/replace",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReplaces the contents and taintedness of \u003cem\u003estr\u003c/em\u003e with the\ncorresponding values in \u003cem\u003eother_str\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_replace'\u003ereplace\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;world\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/reverse!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReverses \u003cem\u003estr\u003c/em\u003e in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/reverse",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new string with the characters from \u003cem\u003estr\u003c/em\u003e in reverse\norder.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003estressed\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_reverse'\u003ereverse\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;desserts\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/rindex",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the index of the last occurrence of the given \u003cem\u003esubstring\u003c/em\u003e or\npattern (\u003cem\u003eregexp\u003c/em\u003e) in \u003cem\u003estr\u003c/em\u003e. Returns \u003ccode\u003enil\u003c/code\u003e if not\nfound. If the second parameter is present, it specifies the position in the\nstring to end the search—characters beyond this point will not be\nconsidered.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ee\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 3\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='CHAR'\u003e?e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rindex'\u003erindex\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003erindex\u003c/strong\u003e(substring[, fixnum]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003erindex\u003c/strong\u003e(regexp[, fixnum]) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/rjust",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf \u003cem\u003einteger\u003c/em\u003e is greater than the length of \u003cem\u003estr\u003c/em\u003e, returns a\nnew \u003ccode\u003eString\u003c/code\u003e of length \u003cem\u003einteger\u003c/em\u003e with \u003cem\u003estr\u003c/em\u003e right\njustified and padded with \u003cem\u003epadstr\u003c/em\u003e; otherwise, returns \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;               hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rjust'\u003erjust\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1234\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;123412341234123hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/rpartition",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSearches \u003cem\u003esep\u003c/em\u003e or pattern (\u003cem\u003eregexp\u003c/em\u003e) in the string from the\nend of the string, and returns the part before it, the match, and the part\nafter it. If it is not found, returns two empty strings and \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;hel\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ex\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;hello\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rpartition'\u003erpartition\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.l\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;he\u0026quot;, \u0026quot;ll\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erpartition\u003c/strong\u003e(sep) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003erpartition\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/rstrip!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves trailing whitespace from \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e\nif no change was made. See also \u003ccode\u003eString#lstrip!\u003c/code\u003e and\n\u003ccode\u003eString#strip!\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;  hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip!'\u003erstrip!\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/rstrip",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with trailing whitespace removed. See also\n\u003ccode\u003eString#lstrip\u003c/code\u003e and \u003ccode\u003eString#strip\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  hello  \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;  hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_rstrip'\u003erstrip\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/scan",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBoth forms iterate through \u003cem\u003estr\u003c/em\u003e, matching the pattern (which may be\na \u003ccode\u003eRegexp\u003c/code\u003e or a \u003ccode\u003eString\u003c/code\u003e). For each match, a result\nis generated and either added to the result array or passed to the block.\nIf the pattern contains no groups, each individual result consists of the\nmatched string, \u003ccode\u003e$\u0026amp;\u003c/code\u003e.  If the pattern contains groups, each\nindividual result is itself an array containing one entry per group.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecruel world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\w+\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;cruel\u0026quot;, \u0026quot;world\u0026quot;]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e...\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;cru\u0026quot;, \u0026quot;el \u0026quot;, \u0026quot;wor\u0026quot;]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(...)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;cru\u0026quot;], [\u0026quot;el \u0026quot;], [\u0026quot;wor\u0026quot;]]\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(..)(..)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [[\u0026quot;cr\u0026quot;, \u0026quot;ue\u0026quot;], [\u0026quot;l \u0026quot;, \u0026quot;wo\u0026quot;]]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd the block form:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\w+\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_w'\u003ew\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class='embexpr_beg'\u003e#{\u003c/span\u003e\u003cspan class='id identifier rubyid_w'\u003ew\u003c/span\u003e\u003cspan class='embexpr_end'\u003e}\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u0026gt; \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scan'\u003escan\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(.)(.)\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_x'\u003ex\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_x'\u003ex\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u0026lt;\u0026lt;cruel\u0026gt;\u0026gt; \u0026lt;\u0026lt;world\u0026gt;\u0026gt;\nrceu lowlr\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eArray\u003c/tt\u003e) \u003cstrong\u003escan\u003c/strong\u003e(pattern) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escan\u003c/strong\u003e(pattern) {|match, ...| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e, \u003ctt\u003e...\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/scrub!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf the string is invalid byte sequence then replace invalid bytes with\ngiven replacement character, else returns self. If block is given, replace\ninvalid bytes with returned value of the block.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\\uFFFD\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\xE3\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub!'\u003escrub!\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack'\u003eunpack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eH*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\u0026lt;e380\u0026gt;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e(repl) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub!\u003c/strong\u003e {|bytes| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ebytes\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/scrub",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIf the string is invalid byte sequence then replace invalid bytes with\ngiven replacement character, else returns self. If block is given, replace\ninvalid bytes with returned value of the block.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\\uFFFD\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\x81\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabc\\u3042\\xE3\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scrub'\u003escrub\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='id identifier rubyid_bytes'\u003ebytes\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unpack'\u003eunpack\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eH*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='op'\u003e+\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abc\\u3042\u0026lt;e380\u0026gt;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e(repl) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003escrub\u003c/strong\u003e {|bytes| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ebytes\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/setbyte",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003emodifies the \u003cem\u003eindex\u003c/em\u003eth byte as \u003cem\u003einteger\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/size",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the character length of \u003cem\u003estr\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/slice!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDeletes the specified portion from \u003cem\u003estr\u003c/em\u003e, and returns the portion\ndeleted.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ethis is a string\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;i\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot; is \u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003es.*t\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;sa st\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_slice!'\u003eslice!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003er\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;r\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_string'\u003estring\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;thing\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(fixnum, fixnum) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice!\u003c/strong\u003e(other_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/slice",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eElement Reference — If passed a single \u003ccode\u003eindex\u003c/code\u003e, returns a\nsubstring of one character at that index. If passed a \u003ccode\u003estart\u003c/code\u003e\nindex and a \u003ccode\u003elength\u003c/code\u003e, returns a substring containing\n\u003ccode\u003elength\u003c/code\u003e characters starting at the \u003ccode\u003eindex\u003c/code\u003e. If\npassed a \u003ccode\u003erange\u003c/code\u003e, its beginning and end are interpreted as\noffsets delimiting the substring to be returned.\u003c/p\u003e\n\n\u003cp\u003eIn these three cases, if an index is negative, it is counted from the end\nof the string.  For the \u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003erange\u003c/code\u003e cases the\nstarting index is just before a character and an index matching the\nstring\u0026#39;s size. Additionally, an empty string is returned when the\nstarting index for a character range is at the end of the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the initial index falls outside the string or\nthe length is negative.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003eRegexp\u003c/code\u003e is supplied, the matching portion of the string is\nreturned.  If a \u003ccode\u003ecapture\u003c/code\u003e follows the regular expression, which\nmay be a capture group index or name, follows the regular expression that\ncomponent of the MatchData is returned instead.\u003c/p\u003e\n\n\u003cp\u003eIf a \u003ccode\u003ematch_str\u003c/code\u003e is given, that string is returned if it occurs\nin the string.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003enil\u003c/code\u003e if the regular expression does not match or the\nmatch string cannot be found.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello there\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ll\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;er\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;her\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ell\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou](.)\\1\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003enon_vowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;l\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;vowel\u0026gt;[aeiou])(?\u0026lt;non_vowel\u0026gt;[^aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003evowel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;e\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;lo\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebye\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(index) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(start, length) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(range) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(regexp, capture) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(match_str) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/split",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDivides \u003cem\u003estr\u003c/em\u003e into substrings based on a delimiter, returning an\narray of these substrings.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is a \u003ccode\u003eString\u003c/code\u003e, then its contents are used as\nthe delimiter when splitting \u003cem\u003estr\u003c/em\u003e. If \u003cem\u003epattern\u003c/em\u003e is a single\nspace, \u003cem\u003estr\u003c/em\u003e is split on whitespace, with leading whitespace and\nruns of contiguous whitespace characters ignored.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is a \u003ccode\u003eRegexp\u003c/code\u003e, \u003cem\u003estr\u003c/em\u003e is divided where\nthe pattern matches. Whenever the pattern matches a zero-length string,\n\u003cem\u003estr\u003c/em\u003e is split into individual characters. If \u003cem\u003epattern\u003c/em\u003e\ncontains groups, the respective matches will be returned in the array as\nwell.\u003c/p\u003e\n\n\u003cp\u003eIf \u003cem\u003epattern\u003c/em\u003e is omitted, the value of \u003ccode\u003e$;\u003c/code\u003e is used.  If\n\u003ccode\u003e$;\u003c/code\u003e is \u003ccode\u003enil\u003c/code\u003e (which is the default), \u003cem\u003estr\u003c/em\u003e is\nsplit on whitespace as if ` \u0026#39; were specified.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003cem\u003elimit\u003c/em\u003e parameter is omitted, trailing null fields are\nsuppressed. If \u003cem\u003elimit\u003c/em\u003e is a positive number, at most that number of\nfields will be returned (if \u003cem\u003elimit\u003c/em\u003e is \u003ccode\u003e1\u003c/code\u003e, the entire\nstring is returned as the only entry in an array). If negative, there is no\nlimit to the number of fields returned, and trailing null fields are not\nsuppressed.\u003c/p\u003e\n\n\u003cp\u003eWhen the input \u003ccode\u003estr\u003c/code\u003e is empty an empty Array is returned as the\nstring is considered to have no fields to split.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e now\u0026#39;s  the time\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;\u0026quot;, \u0026quot;now\u0026#39;s\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;the\u0026quot;, \u0026quot;time\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1, 2.34,56, 7\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e%r{\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\\s*\u003c/span\u003e\u003cspan class='regexp_end'\u003e}\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2.34\u0026quot;, \u0026quot;56\u0026quot;, \u0026quot;7\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;l\u0026quot;, \u0026quot;o\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;llo\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehi mom\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e%r{\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\s*\u003c/span\u003e\u003cspan class='regexp_end'\u003e}\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;h\u0026quot;, \u0026quot;i\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;o\u0026quot;, \u0026quot;m\u0026quot;]\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emellow yellow\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;m\u0026quot;, \u0026quot;w y\u0026quot;, \u0026quot;w\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3\u0026quot;, \u0026quot;4\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3,4,,\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1,2,,3,4,,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;3\u0026quot;, \u0026quot;4\u0026quot;, \u0026quot;\u0026quot;, \u0026quot;\u0026quot;]\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e,\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; []\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/squeeze!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSqueezes \u003cem\u003estr\u003c/em\u003e in place, returning either \u003cem\u003estr\u003c/em\u003e, or\n\u003ccode\u003enil\u003c/code\u003e if no changes were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/squeeze",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBuilds a set of characters from the \u003cem\u003eother_str\u003c/em\u003e parameter(s) using\nthe procedure described for \u003ccode\u003eString#count\u003c/code\u003e. Returns a new string\nwhere runs of the same character that occur in this set are replaced by a\nsingle character. If no arguments are given, all runs of identical\ncharacters are replaced by a single character.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eyellow moon\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;yelow mon\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e  now   is  the\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot; now is the\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eputters shoot balls\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_squeeze'\u003esqueeze\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003em-z\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;puters shot balls\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/start_with?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true if \u003ccode\u003estr\u003c/code\u003e starts with one of the\n\u003ccode\u003eprefixes\u003c/code\u003e given.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e               \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# returns true if one of the prefixes matches.\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eheaven\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehell\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_start_with?'\u003estart_with?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eheaven\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eparadise\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/strip!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRemoves leading and trailing whitespace from \u003cem\u003estr\u003c/em\u003e. Returns\n\u003ccode\u003enil\u003c/code\u003e if \u003cem\u003estr\u003c/em\u003e was not altered.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/strip",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with leading and trailing whitespace\nremoved.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e    hello    \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strip'\u003estrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\tgoodbye\\r\\n\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strip'\u003estrip\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;goodbye\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/sub!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms the same substitution as String#sub in-place.\u003c/p\u003e\n\n\u003cp\u003eReturns \u003ccode\u003estr\u003c/code\u003e if a substitution was performed or\n\u003ccode\u003enil\u003c/code\u003e if no substitution was performed.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003esub!\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003esub!\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/sub",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003ccode\u003estr\u003c/code\u003e with the \u003cem\u003efirst\u003c/em\u003e occurrence of\n\u003ccode\u003epattern\u003c/code\u003e replaced by the second argument. The\n\u003ccode\u003epattern\u003c/code\u003e is typically a Regexp; if given as a String, any\nregular expression metacharacters it contains will be interpreted\nliterally, e.g. \u003ccode\u003e\u0026#39;\\\\d\u0026#39;\u003c/code\u003e will match a backlash followed\nby \u0026#39;d\u0026#39;, instead of a digit.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003ereplacement\u003c/code\u003e is a String it will be substituted for the\nmatched text. It may contain back-references to the pattern\u0026#39;s capture\ngroups of the form \u003ccode\u003e\u0026quot;\\d\u0026quot;\u003c/code\u003e, where \u003cem\u003ed\u003c/em\u003e is a group\nnumber, or \u003ccode\u003e\u0026quot;\\k\u0026lt;n\u0026gt;\u0026quot;\u003c/code\u003e, where \u003cem\u003en\u003c/em\u003e is a\ngroup name. If it is a double-quoted string, both back-references must be\npreceded by an additional backslash. However, within\n\u003ccode\u003ereplacement\u003c/code\u003e the special match variables, such as\n\u003ccode\u003e\u0026amp;$\u003c/code\u003e, will not refer to the current match.\u003c/p\u003e\n\n\u003cp\u003eIf the second argument is a Hash, and the matched text is one of its keys,\nthe corresponding value is the replacement string.\u003c/p\u003e\n\n\u003cp\u003eIn the block form, the current match string is passed in as a parameter,\nand variables such as \u003ccode\u003e$1\u003c/code\u003e, \u003ccode\u003e$2\u003c/code\u003e, \u003ccode\u003e$`\u003c/code\u003e,\n\u003ccode\u003e$\u0026amp;\u003c/code\u003e, and \u003ccode\u003e$\u0026#39;\u003c/code\u003e will be set appropriately. The\nvalue returned by the block will be substituted for the match on each call.\u003c/p\u003e\n\n\u003cp\u003eThe result inherits any tainting in the original string or any supplied\nreplacement string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[aeiou]\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e([aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\\1\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h\u0026lt;e\u0026gt;llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e.\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_ord'\u003eord\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;104 ello\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?\u0026lt;foo\u0026gt;[aeiou])\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\\k\u0026lt;foo\u0026gt;*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*e*llo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eIs SHELL your preferred shell?\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sub'\u003esub\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='regexp_beg'\u003e/\u003c/span\u003e\u003cspan class='tstring_content'\u003e[[:upper:]]{2,}\u003c/span\u003e\u003cspan class='regexp_end'\u003e/\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='const'\u003eENV\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Is /bin/bash your preferred shell?\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern, replacement) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern, hash) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esub\u003c/strong\u003e(pattern) {|match| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003ematch\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/succ!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#succ\u003c/code\u003e, but modifies the receiver in place.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext!\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/succ",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the successor to \u003cem\u003estr\u003c/em\u003e. The successor is calculated by\nincrementing characters starting from the rightmost alphanumeric (or the\nrightmost character if there are no alphanumerics) in the string.\nIncrementing a digit always results in another digit, and incrementing a\nletter results in another letter of the same case. Incrementing\nnonalphanumerics uses the underlying character set\u0026#39;s collating\nsequence.\u003c/p\u003e\n\n\u003cp\u003eIf the increment generates a “carry,\u0026#39;\u0026#39; the character to the left of\nit is incremented. This process repeats until there is no carry, adding an\nadditional character if necessary.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eabcd\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;abce\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eTHX1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;THX1139\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\u0026lt;\u0026lt;koala\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026lt;\u0026lt;koalb\u0026gt;\u0026gt;\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1999zzz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000aaa\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eZZZ9999\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;AAAA0000\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e***\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_succ'\u003esucc\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;**+\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003esucc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003enext\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/sum",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a basic \u003cem\u003en\u003c/em\u003e-bit checksum of the characters in \u003cem\u003estr\u003c/em\u003e,\nwhere \u003cem\u003en\u003c/em\u003e is the optional \u003ccode\u003eFixnum\u003c/code\u003e parameter, defaulting\nto 16. The result is simply the sum of the binary value of each character\nin \u003cem\u003estr\u003c/em\u003e modulo \u003ccode\u003e2**n - 1\u003c/code\u003e. This is not a particularly\ngood checksum.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/swapcase!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquivalent to \u003ccode\u003eString#swapcase\u003c/code\u003e, but modifies the receiver in\nplace, returning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no changes were made.\nNote: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/swapcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with uppercase alphabetic characters\nconverted to lowercase and lowercase characters converted to uppercase.\nNote: case conversion is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eHello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_swapcase'\u003eswapcase\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hELLO\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ecYbEr_PuNk11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_swapcase'\u003eswapcase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CyBeR_pUnK11\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/to_f",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the result of interpreting leading characters in \u003cem\u003estr\u003c/em\u003e as a\nfloating point number. Extraneous characters past the end of a valid number\nare ignored. If there is not a valid number at the start of \u003cem\u003estr\u003c/em\u003e,\n\u003ccode\u003e0.0\u003c/code\u003e is returned. This method never raises an exception.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e123.45e1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 1234.5\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e45.67 degrees\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 45.67\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ethx1138\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 0.0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/to_i",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the result of interpreting leading characters in \u003cem\u003estr\u003c/em\u003e as an\ninteger base \u003cem\u003ebase\u003c/em\u003e (between 2 and 36). Extraneous characters past\nthe end of a valid number are ignored. If there is not a valid number at\nthe start of \u003cem\u003estr\u003c/em\u003e, \u003ccode\u003e0\u003c/code\u003e is returned. This method never\nraises an exception when \u003cem\u003ebase\u003c/em\u003e is valid.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e12345\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 12345\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e99 red balloons\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 99\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e                \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e0a\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 10\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 101\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 294977\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 1100101\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e1100101\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 17826049\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the receiver.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_str\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/to_str",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the receiver.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_str\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/tr!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTranslates \u003cem\u003estr\u003c/em\u003e in place, using the same rules as\n\u003ccode\u003eString#tr\u003c/code\u003e. Returns \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/tr",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003ccode\u003estr\u003c/code\u003e with the characters in\n\u003ccode\u003efrom_str\u003c/code\u003e replaced by the corresponding characters in\n\u003ccode\u003eto_str\u003c/code\u003e.  If \u003ccode\u003eto_str\u003c/code\u003e is shorter than\n\u003ccode\u003efrom_str\u003c/code\u003e, it is padded with its last character in order to\nmaintain the correspondence.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eip\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hippo\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll*\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eaeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eAA*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hAll*\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBoth strings may use the \u003ccode\u003ec1-c2\u003c/code\u003e notation to denote ranges of\ncharacters, and \u003ccode\u003efrom_str\u003c/code\u003e may start with a \u003ccode\u003e^\u003c/code\u003e,\nwhich denotes all characters except those listed.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea-y\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb-z\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ifmmp\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;*e**o\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe backslash character \u003ccode\u003e\u0026lt;/code\u0026gt; can be used to escape\n\u0026lt;code\u0026gt;^\u003c/code\u003e or \u003ccode\u003e-\u003c/code\u003e and is otherwise ignored unless it\nappears at the end of a range or the end of the \u003ccode\u003efrom_str\u003c/code\u003e or\n\u003ccode\u003eto_str\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello^world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\^aeiou\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll**w*rld\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello-world\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea\\\\-eo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*ll**w*rld\u0026quot;\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\nworld\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\r\\nwold\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\\r\\nworld\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\\\\\r\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hello\\nworld\u0026quot;\n\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX[\u0026#39;\\\\b\u0026#39;]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX\\\\\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;[\u0026#39;b\u0026#39;]\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX[\u0026#39;\\\\b\u0026#39;]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr'\u003etr\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eX-\\\\]\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;\u0026#39;b\u0026#39;\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/tr_s!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePerforms \u003ccode\u003eString#tr_s\u003c/code\u003e processing on \u003cem\u003estr\u003c/em\u003e in place,\nreturning \u003cem\u003estr\u003c/em\u003e, or \u003ccode\u003enil\u003c/code\u003e if no changes were made.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/tr_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eProcesses a copy of \u003cem\u003estr\u003c/em\u003e as described under \u003ccode\u003eString#tr\u003c/code\u003e,\nthen removes duplicate characters in regions that were affected by the\ntranslation.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003el\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003er\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hero\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e*\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;h*o\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehello\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tr_s'\u003etr_s\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003eel\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;hhxo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/upcase!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eUpcases the contents of \u003cem\u003estr\u003c/em\u003e, returning \u003ccode\u003enil\u003c/code\u003e if no\nchanges were made. Note: case replacement is effective only in ASCII\nregion.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/upcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a copy of \u003cem\u003estr\u003c/em\u003e with all lowercase letters replaced with\ntheir uppercase counterparts. The operation is locale insensitive—only\ncharacters “a\u0026#39;\u0026#39; to “z\u0026#39;\u0026#39; are affected. Note: case\nreplacement is effective only in ASCII region.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehEllO\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upcase'\u003eupcase\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;HELLO\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/upto",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIterates through successive values, starting at \u003cem\u003estr\u003c/em\u003e and ending at\n\u003cem\u003eother_str\u003c/em\u003e inclusive, passing each value in turn to the block. The\n\u003ccode\u003eString#succ\u003c/code\u003e method is used to generate each value.  If\noptional second argument exclusive is omitted or is false, the last value\nwill be included; otherwise it will be excluded.\u003c/p\u003e\n\n\u003cp\u003eIf no block is given, an enumerator is returned instead.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb6\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003cspan class='kw'\u003efor\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='kw'\u003ein\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ea8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eb6\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n  \u003cspan class='id identifier rubyid_print'\u003eprint\u003c/span\u003e \u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e \u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='kw'\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003cem\u003eproduces:\u003c/em\u003e\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a8'\u003ea8\u003c/span\u003e \u003cspan class='id identifier rubyid_a9'\u003ea9\u003c/span\u003e \u003cspan class='id identifier rubyid_b0'\u003eb0\u003c/span\u003e \u003cspan class='id identifier rubyid_b1'\u003eb1\u003c/span\u003e \u003cspan class='id identifier rubyid_b2'\u003eb2\u003c/span\u003e \u003cspan class='id identifier rubyid_b3'\u003eb3\u003c/span\u003e \u003cspan class='id identifier rubyid_b4'\u003eb4\u003c/span\u003e \u003cspan class='id identifier rubyid_b5'\u003eb5\u003c/span\u003e \u003cspan class='id identifier rubyid_b6'\u003eb6\u003c/span\u003e\n\u003cspan class='id identifier rubyid_a8'\u003ea8\u003c/span\u003e \u003cspan class='id identifier rubyid_a9'\u003ea9\u003c/span\u003e \u003cspan class='id identifier rubyid_b0'\u003eb0\u003c/span\u003e \u003cspan class='id identifier rubyid_b1'\u003eb1\u003c/span\u003e \u003cspan class='id identifier rubyid_b2'\u003eb2\u003c/span\u003e \u003cspan class='id identifier rubyid_b3'\u003eb3\u003c/span\u003e \u003cspan class='id identifier rubyid_b4'\u003eb4\u003c/span\u003e \u003cspan class='id identifier rubyid_b5'\u003eb5\u003c/span\u003e \u003cspan class='id identifier rubyid_b6'\u003eb6\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf \u003cem\u003estr\u003c/em\u003e and \u003cem\u003eother_str\u003c/em\u003e contains only ascii numeric\ncharacters, both are recognized as decimal numbers. In addition, the width\nof string (e.g. leading zeros) is handled appropriately.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e9\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;9\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;11\u0026quot;]\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e25\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e5\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; []\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e07\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_upto'\u003eupto\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e11\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;07\u0026quot;, \u0026quot;08\u0026quot;, \u0026quot;09\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;11\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eupto\u003c/strong\u003e(other_str, exclusive = false) {|s| ... }\u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eYields:\u003c/p\u003e\n\u003cul class=\"yield\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003es\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "String/$methods/valid_encoding?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns true for a string which encoded correctly.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\xc2\\xa1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\xc2\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e\\x80\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_force_encoding'\u003eforce_encoding\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eUTF-8\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_valid_encoding?'\u003evalid_encoding?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003e\u003cstrong\u003eSymbol\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e********************************************************************\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u0026lt;code\u0026gt;Symbol\u0026lt;/code\u0026gt; objects represent names and some strings\ninside the Ruby\ninterpreter. They are generated using the \u0026lt;code\u0026gt;:name\u0026lt;/code\u0026gt; and\n\u0026lt;code\u0026gt;:\u0026quot;string\u0026quot;\u0026lt;/code\u0026gt; literals\nsyntax, and by the various \u0026lt;code\u0026gt;to_sym\u0026lt;/code\u0026gt; methods. The same\n\u0026lt;code\u0026gt;Symbol\u0026lt;/code\u0026gt; object will be created for a given name or string\nfor the duration of a program\u0026#39;s execution, regardless of the context\nor meaning of that name. Thus if \u0026lt;code\u0026gt;Fred\u0026lt;/code\u0026gt; is a constant in\none context, a method in another, and a class in a third, the\n\u0026lt;code\u0026gt;Symbol\u0026lt;/code\u0026gt; \u0026lt;code\u0026gt;:Fred\u0026lt;/code\u0026gt; will be the same object in\nall three contexts.\n\n   module One\n     class Fred\n     end\n     $f1 = :Fred\n   end\n   module Two\n     Fred = 1\n     $f2 = :Fred\n   end\n   def Fred()\n   end\n   $f3 = :Fred\n   $f1.object_id   #=\u0026gt; 2514190\n   $f2.object_id   #=\u0026gt; 2514190\n   $f3.object_id   #=\u0026gt; 2514190\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn the related symbol if the symbol already exists. Return nil if not.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCompares \u003ccode\u003esymbol\u003c/code\u003e with \u003ccode\u003eother_symbol\u003c/code\u003e after calling\n#to_s on each of the symbols. Returns -1, 0, +1 or nil depending on whether\n\u003ccode\u003esymbol\u003c/code\u003e is less than, equal to, or greater than\n\u003ccode\u003eother_symbol\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e+nil+ is returned if the two values are incomparable.\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee String#\u0026lt;=\u0026gt; for more information.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquality—If \u003cem\u003esym\u003c/em\u003e and \u003cem\u003eobj\u003c/em\u003e are exactly the same symbol,\nreturns \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquality—If \u003cem\u003esym\u003c/em\u003e and \u003cem\u003eobj\u003c/em\u003e are exactly the same symbol,\nreturns \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s =~ obj\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e=~\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s[]\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.capitalize.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCase-insensitive version of \u003ccode\u003eSymbol#\u0026lt;=\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.downcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns that \u003cem\u003esym\u003c/em\u003e is :“” or not.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the Encoding object that represents the encoding of \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name or string corresponding to \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_id2name'\u003eid2name\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eid2name\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the representation of \u003cem\u003esym\u003c/em\u003e as a symbol literal.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_inspect'\u003einspect\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;:fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIn general, \u003ccode\u003eto_sym\u003c/code\u003e returns the \u003ccode\u003eSymbol\u003c/code\u003e\ncorresponding to an object. As \u003cem\u003esym\u003c/em\u003e is already a symbol,\n\u003ccode\u003eself\u003c/code\u003e is returned in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.length\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s =~ obj\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e=~\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.succ.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.length\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s[]\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.succ.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.swapcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a \u003cem\u003eProc\u003c/em\u003e object which respond to the given method by\n\u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_collect'\u003ecollect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e\u0026amp;\u003c/span\u003e\u003cspan class='symbol'\u003e:to_s\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;3\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name or string corresponding to \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_id2name'\u003eid2name\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eid2name\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIn general, \u003ccode\u003eto_sym\u003c/code\u003e returns the \u003ccode\u003eSymbol\u003c/code\u003e\ncorresponding to an object. As \u003cem\u003esym\u003c/em\u003e is already a symbol,\n\u003ccode\u003eself\u003c/code\u003e is returned in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.upcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$classmethods/find",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturn the related symbol if the symbol already exists. Return nil if not.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/==",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquality—If \u003cem\u003esym\u003c/em\u003e and \u003cem\u003eobj\u003c/em\u003e are exactly the same symbol,\nreturns \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/===",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEquality—If \u003cem\u003esym\u003c/em\u003e and \u003cem\u003eobj\u003c/em\u003e are exactly the same symbol,\nreturns \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/=~",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s =~ obj\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e=~\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/[]",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s[]\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/\u003c=@",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCompares \u003ccode\u003esymbol\u003c/code\u003e with \u003ccode\u003eother_symbol\u003c/code\u003e after calling\n#to_s on each of the symbols. Returns -1, 0, +1 or nil depending on whether\n\u003ccode\u003esymbol\u003c/code\u003e is less than, equal to, or greater than\n\u003ccode\u003eother_symbol\u003c/code\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e+nil+ is returned if the two values are incomparable.\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee String#\u0026lt;=\u0026gt; for more information.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/capitalize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.capitalize.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/casecmp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCase-insensitive version of \u003ccode\u003eSymbol#\u0026lt;=\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/downcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.downcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/empty?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns that \u003cem\u003esym\u003c/em\u003e is :“” or not.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/encoding",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the Encoding object that represents the encoding of \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/id2name",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name or string corresponding to \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_id2name'\u003eid2name\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eid2name\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/inspect",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the representation of \u003cem\u003esym\u003c/em\u003e as a symbol literal.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_inspect'\u003einspect\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;:fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/intern",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIn general, \u003ccode\u003eto_sym\u003c/code\u003e returns the \u003ccode\u003eSymbol\u003c/code\u003e\ncorresponding to an object. As \u003cem\u003esym\u003c/em\u003e is already a symbol,\n\u003ccode\u003eself\u003c/code\u003e is returned in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/length",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.length\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/match",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s =~ obj\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003e=~\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e\u003csup\u003e?\u003c/sup\u003e) \u003cstrong\u003ematch\u003c/strong\u003e(obj) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/next",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.succ.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/size",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.length\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003elength\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003esize\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/slice",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003esym.to_s[]\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003e[]\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(idx) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eslice\u003c/strong\u003e(b, n) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/succ",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.succ.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/swapcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.swapcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/to_proc",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a \u003cem\u003eProc\u003c/em\u003e object which respond to the given method by\n\u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='op'\u003e..\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_collect'\u003ecollect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e\u0026amp;\u003c/span\u003e\u003cspan class='symbol'\u003e:to_s\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; [\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;3\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name or string corresponding to \u003cem\u003esym\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='symbol'\u003e:fred\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_id2name'\u003eid2name\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;fred\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eid2name\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/to_sym",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIn general, \u003ccode\u003eto_sym\u003c/code\u003e returns the \u003ccode\u003eSymbol\u003c/code\u003e\ncorresponding to an object. As \u003cem\u003esym\u003c/em\u003e is already a symbol,\n\u003ccode\u003eself\u003c/code\u003e is returned in this case.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Symbol/$methods/upcase",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as \u003ccode\u003esym.to_s.upcase.intern\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "string.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003e\u003cstrong\u003eTime\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eTime is an abstraction of dates and times. Time is stored internally as the\nnumber of seconds with fraction since the \u003cem\u003eEpoch\u003c/em\u003e, January 1, 1970\n00:00 UTC. Also see the library module Date. The Time class treats GMT\n(Greenwich Mean Time) and UTC (Coordinated Universal Time) as equivalent.\nGMT is the older way of referring to these baseline times but persists in\nthe names of calls on POSIX systems.\u003c/p\u003e\n\n\u003cp\u003eAll times may have fraction. Be aware of this fact when comparing times\nwith each other – times that are apparently equal when displayed may be\ndifferent when compared.\u003c/p\u003e\n\n\u003cp\u003eSince Ruby 1.9.2, Time implementation uses a signed 63 bit integer, Bignum\nor Rational. The integer is a number of nanoseconds since the\n\u003cem\u003eEpoch\u003c/em\u003e which can represent 1823-11-12 to 2116-02-20. When Bignum or\nRational is used (before 1823, after 2116, under nanosecond), Time works\nslower as when integer is used.\u003c/p\u003e\n\n\u003ch1 id=\"label-Examples\"\u003eExamples\u003c/h1\u003e\n\n\u003cp\u003eAll of these examples were done using the EST timezone which is GMT-5.\u003c/p\u003e\n\n\u003ch2 id=\"label-Creating+a+new+Time+instance\"\u003eCreating a new Time instance\u003c/h2\u003e\n\n\u003cp\u003eYou can create a new instance of Time with Time::new. This will use the\ncurrent system time. Time::now is an alias for this. You can also pass\nparts of the time to Time::new such as year, month, minute, etc. When you\nwant to construct a time this way you must pass at least a year. If you\npass the year with nothing else time will default to January 1 of that year\nat 00:00:00 with the current system timezone. Here are some examples:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2002\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2002-01-01 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2002\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 2002-10-01 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2002\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2002-10-31 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2002\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+02:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2002-10-31 02:02:02 +0200\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also use #gm, #local and #utc to infer GMT, local and UTC timezones\ninstead of using the current system setting.\u003c/p\u003e\n\n\u003cp\u003eYou can also create a new time using Time::at which takes the number of\nseconds (or fraction of seconds) since the \u003ca\nhref=\"http://en.wikipedia.org/wiki/Unix_time\"\u003eUnix Epoch\u003c/a\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e628232400\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 1989-11-28 00:00:00 -0500\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Working+with+an+instance+of+Time\"\u003eWorking with an instance of Time\u003c/h2\u003e\n\n\u003cp\u003eOnce you have an instance of Time there is a multitude of things you can do\nwith it. Below are some examples. For all of the following examples, we\nwill work on the assumption that you have done the following:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1993\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e02\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWas that a monday?\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_monday?'\u003emonday?\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat year was that again?\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_year'\u003eyear\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 1993\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWas is daylight savings at the time?\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhat\u0026#39;s the day a year later?\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e60\u003c/span\u003e\u003cspan class='op'\u003e*\u003c/span\u003e\u003cspan class='int'\u003e60\u003c/span\u003e\u003cspan class='op'\u003e*\u003c/span\u003e\u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='op'\u003e*\u003c/span\u003e\u003cspan class='int'\u003e365\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 1994-02-24 12:00:00 +0900\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHow many seconds was that since the Unix Epoch?\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 730522800\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYou can also do standard functions like compare two times.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2010\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2011\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;\u003c/span\u003e  \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e\u0026gt;\u003c/span\u003e  \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\n\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2010\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_between?'\u003ebetween?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a Time object.\u003c/p\u003e\n\n\u003cp\u003eIt is initialized to the current system time if no argument is given.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The new object will use the resolution available on\nyour system clock, and may include fractional seconds.\u003c/p\u003e\n\n\u003cp\u003eIf one or more arguments specified, the time is initialized to the\nspecified time.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec\u003c/code\u003e may have fraction if it is a rational.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eutc_offset\u003c/code\u003e is the offset from UTC. It can be a string such as\n“+09:00” or a number of seconds such as 32400.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 07:50:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 07:50:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195480202.282373\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195480202.283415\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2008\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e30\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2008-06-21 13:30:00 +0900\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# A trip for RubyConf 2007\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e25\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# JST (Narita)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# CDT (Minneapolis)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t3'\u003et3\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e25\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# CDT (Minneapolis)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t4'\u003et4\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e53\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-04:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EDT (Charlotte)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t5'\u003et5\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e9\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Charlotte)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t6'\u003et6\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Detroit)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t7'\u003et7\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e45\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Detroit)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t8'\u003et8\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e17\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# JST (Narita)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 10.666666666666666\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t4'\u003et4\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t3'\u003et3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 2.466666666666667\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t6'\u003et6\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t5'\u003et5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 1.95\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t8'\u003et8\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t7'\u003et7\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 13.416666666666666\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003enew\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003enew\u003c/strong\u003e(year, month = nil, day = nil, hour = nil, min = nil, sec = nil, utc_offset = nil) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new Time object with the value given by \u003ccode\u003etime\u003c/code\u003e, the\ngiven number of \u003ccode\u003eseconds_with_frac\u003c/code\u003e, or \u003ccode\u003eseconds\u003c/code\u003e and\n\u003ccode\u003emicroseconds_with_frac\u003c/code\u003e since the Epoch.\n\u003ccode\u003eseconds_with_frac\u003c/code\u003e and \u003ccode\u003emicroseconds_with_frac\u003c/code\u003e can\nbe an Integer, Float, Rational, or other Numeric. non-portable feature\nallows the offset to be negative on some systems.\u003c/p\u003e\n\n\u003cp\u003eIf a numeric argument is given, the result is in local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                           \u003cspan class='comment'\u003e#=\u0026gt; 1969-12-31 18:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 1969-12-31 18:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e946702800\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 1999-12-31 23:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e284061600\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 1960-12-31 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='float'\u003e946684800.2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 200000\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e946684800\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='float'\u003e123456.789\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 123456789\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(time) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(seconds_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(seconds, microseconds_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other values default to the minimum value for that\nfield (and may be \u003ccode\u003enil\u003c/code\u003e or omitted). Months may be specified by\nnumbers from 1 to 12, or by the three-letter English month names. Hours are\nspecified on a 24-hour clock (0..23). Raises an ArgumentError if any values\nare out of range. Will also accept ten arguments in the order output by\nTime#to_a.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec_with_frac\u003c/code\u003e and \u003ccode\u003eusec_with_frac\u003c/code\u003e can have a\nfractional part.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as Time::gm, but interprets the values in the local time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as Time::gm, but interprets the values in the local time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new Time object for the current time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 2009-06-24 12:39:54 +0900\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other values default to the minimum value for that\nfield (and may be \u003ccode\u003enil\u003c/code\u003e or omitted). Months may be specified by\nnumbers from 1 to 12, or by the three-letter English month names. Hours are\nspecified on a 24-hour clock (0..23). Raises an ArgumentError if any values\nare out of range. Will also accept ten arguments in the order output by\nTime#to_a.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec_with_frac\u003c/code\u003e and \u003ccode\u003eusec_with_frac\u003c/code\u003e can have a\nfractional part.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAddition — Adds some number of seconds (possibly fractional) to\n\u003cem\u003etime\u003c/em\u003e and returns that value as a new Time object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:22:21 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e60\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e60\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-20 08:22:21 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDifference — Returns a new Time object that represents the difference\nbetween \u003cem\u003etime\u003c/em\u003e and \u003ccode\u003eother_time\u003c/code\u003e, or subtracts the given\nnumber of seconds in \u003ccode\u003enumeric\u003c/code\u003e from \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:23:10 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-12-19 08:23:10 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 2592000.0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:23:10 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFloat\u003c/tt\u003e) \u003cstrong\u003e-\u003c/strong\u003e(other_time) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003e-\u003c/strong\u003e(numeric) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComparison—Compares \u003ccode\u003etime\u003c/code\u003e with \u003ccode\u003eother_time\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e-1, 0, +1 or nil depending on whether \u003ccode\u003etime\u003c/code\u003e is less  than,\nequal to, or greater than \u003ccode\u003eother_time\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enil\u003c/code\u003e is returned if the two values are incomparable.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:12:12 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-12-19 08:12:12 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:13:38 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.1\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:13:38 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 98222999\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 198222999\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a canonical string representation of \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_asctime'\u003easctime\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Wed Apr  9 08:56:03 2003\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003easctime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003ectime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a canonical string representation of \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_asctime'\u003easctime\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Wed Apr  9 08:56:03 2003\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003easctime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003ectime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the day of the month (1..n) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mday'\u003emday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e occurs during Daylight Saving\nTime in its time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='comment'\u003e# CST6CDT:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CDT\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# Asia/Tokyo:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eisdst\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003edst?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e and \u003ccode\u003eother_time\u003c/code\u003e are\nboth Time objects with the same seconds and fractional seconds.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Friday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1987\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e18\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1987-12-18 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_friday?'\u003efriday?\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in UTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getgm'\u003egetgm\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 02:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetgm\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in local time (using\nthe local time zone in effect for this process).\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eutc_offset\u003c/code\u003e is given, it is used instead of the local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 05:15:01 +0900\n\u003c/span\u003e\u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetlocal\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetlocal\u003c/strong\u003e(utc_offset) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in UTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getgm'\u003egetgm\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 02:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetgm\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents a time in UTC (GMT).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:15:23 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:16:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eutc?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003egmt?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to UTC (GMT), modifying the receiver.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmtime'\u003egmtime\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:31 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:51 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egmtime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a hash code for this Time object.\u003c/p\u003e\n\n\u003cp\u003eSee also Object#hash.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the hour of the day (0..23) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:26:20 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hour'\u003ehour\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 8\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a string representing \u003cem\u003etime\u003c/em\u003e. Equivalent to calling\n#strftime with the appropriate format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003et = Time.now\nt.to_s                              =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S %z\u0026quot;   =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\n\nt.utc.to_s                          =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S UTC\u0026quot;  =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003einspect\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e occurs during Daylight Saving\nTime in its time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='comment'\u003e# CST6CDT:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CDT\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# Asia/Tokyo:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eisdst\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003edst?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to local time (using the local time zone in effect\nfor this process) modifying the receiver.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eutc_offset\u003c/code\u003e is given, it is used instead of the local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_localtime'\u003elocaltime\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_localtime'\u003elocaltime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 05:15:01 +0900\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocaltime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocaltime\u003c/strong\u003e(utc_offset) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the day of the month (1..n) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mday'\u003emday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the minute of the hour (0..59) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:25:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_min'\u003emin\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 25\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the month of the year (1..12) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:30 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mon'\u003emon\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emon\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emonth\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Monday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2003\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2003-08-04 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_monday?'\u003emonday?\u003c/span\u003e                      \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the month of the year (1..12) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:30 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mon'\u003emon\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emon\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emonth\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of nanoseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-17 15:18:03 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195280283.536151409\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 536151406\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #nsec are different because IEEE 754 double\nis not accurate enough to represent the exact number of nanoseconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #nsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003ensec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_nsec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRounds sub seconds to a given precision in decimal digits (0 digits by\ndefault). It returns a new Time object. \u003ccode\u003endigits\u003c/code\u003e should be zero\nor positive integer.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003etime\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2010\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e30\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e43\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e25.123456789\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_r'\u003eto_r\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.0000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.0000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1200000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1230000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1235000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234600000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234570000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234568000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567900Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e9\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1999\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e23\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.49\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.49\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:01.000Z\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1999\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e23\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.123456789\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.123500Z\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Saturday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2006\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2006-06-10 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_saturday?'\u003esaturday?\u003c/span\u003e                      \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the second of the minute (0..60) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Seconds range from zero to 60 to allow the system to\ninject leap seconds. See \u003ca\nhref=\"http://en.wikipedia.org/wiki/Leap_second\"\u003een.wikipedia.org/wiki/Leap_second\u003c/a\u003e\nfor further details.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:25:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sec'\u003esec\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eFormats \u003cem\u003etime\u003c/em\u003e according to the directives in the given format\nstring.\u003c/p\u003e\n\n\u003cp\u003eThe directives begin with a percent (%) character. Any text not listed as a\ndirective will be passed through to the output string.\u003c/p\u003e\n\n\u003cp\u003eThe directive consists of a percent (%) character, zero or more flags,\noptional minimum field width, optional modifier and a conversion specifier\nas follows:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e%\u0026lt;flags\u0026gt;\u0026lt;width\u0026gt;\u0026lt;modifier\u0026gt;\u0026lt;conversion\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFlags:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e-  don\u0026#39;t pad a numerical output\n_  use spaces for padding\n0  use zeros for padding\n^  upcase the result string\n#  change case\n:  use colons for %z\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe minimum field width specifies the minimum width.\u003c/p\u003e\n\n\u003cp\u003eThe modifiers are “E” and “O”. They are ignored.\u003c/p\u003e\n\n\u003cp\u003eFormat directives:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003eDate (Year, Month, Day):\n  %Y - Year with century (can be negative, 4 digits at least)\n          -0001, 0000, 1995, 2009, 14292, etc.\n  %C - year / 100 (rounded down such as 20 in 2009)\n  %y - year % 100 (00..99)\n\n  %m - Month of the year, zero-padded (01..12)\n          %_m  blank-padded ( 1..12)\n          %-m  no-padded (1..12)\n  %B - The full month name (``January\u0026#39;\u0026#39;)\n          %^B  uppercased (``JANUARY\u0026#39;\u0026#39;)\n  %b - The abbreviated month name (``Jan\u0026#39;\u0026#39;)\n          %^b  uppercased (``JAN\u0026#39;\u0026#39;)\n  %h - Equivalent to %b\n\n  %d - Day of the month, zero-padded (01..31)\n          %-d  no-padded (1..31)\n  %e - Day of the month, blank-padded ( 1..31)\n\n  %j - Day of the year (001..366)\n\nTime (Hour, Minute, Second, Subsecond):\n  %H - Hour of the day, 24-hour clock, zero-padded (00..23)\n  %k - Hour of the day, 24-hour clock, blank-padded ( 0..23)\n  %I - Hour of the day, 12-hour clock, zero-padded (01..12)\n  %l - Hour of the day, 12-hour clock, blank-padded ( 1..12)\n  %P - Meridian indicator, lowercase (``am\u0026#39;\u0026#39; or ``pm\u0026#39;\u0026#39;)\n  %p - Meridian indicator, uppercase (``AM\u0026#39;\u0026#39; or ``PM\u0026#39;\u0026#39;)\n\n  %M - Minute of the hour (00..59)\n\n  %S - Second of the minute (00..60)\n\n  %L - Millisecond of the second (000..999)\n       The digits under millisecond are truncated to not produce 1000.\n  %N - Fractional seconds digits, default is 9 digits (nanosecond)\n          %3N  millisecond (3 digits)\n          %6N  microsecond (6 digits)\n          %9N  nanosecond (9 digits)\n          %12N picosecond (12 digits)\n          %15N femtosecond (15 digits)\n          %18N attosecond (18 digits)\n          %21N zeptosecond (21 digits)\n          %24N yoctosecond (24 digits)\n       The digits under the specified length are truncated to avoid\n       carry up.\n\nTime zone:\n  %z - Time zone as hour and minute offset from UTC (e.g. +0900)\n          %:z - hour and minute offset from UTC with a colon (e.g. +09:00)\n          %::z - hour, minute and second offset from UTC (e.g. +09:00:00)\n  %Z - Abbreviated time zone name or similar information.  (OS dependent)\n\nWeekday:\n  %A - The full weekday name (``Sunday\u0026#39;\u0026#39;)\n          %^A  uppercased (``SUNDAY\u0026#39;\u0026#39;)\n  %a - The abbreviated name (``Sun\u0026#39;\u0026#39;)\n          %^a  uppercased (``SUN\u0026#39;\u0026#39;)\n  %u - Day of the week (Monday is 1, 1..7)\n  %w - Day of the week (Sunday is 0, 0..6)\n\nISO 8601 week-based year and week number:\nThe first week of YYYY starts with a Monday and includes YYYY-01-04.\nThe days in the year before the first week are in the last week of\nthe previous year.\n  %G - The week-based year\n  %g - The last 2 digits of the week-based year (00..99)\n  %V - Week number of the week-based year (01..53)\n\nWeek number:\nThe first week of YYYY that starts with a Sunday or Monday (according to %U\nor %W). The days in the year before the first week are in week 0.\n  %U - Week number of the year. The week starts with Sunday. (00..53)\n  %W - Week number of the year. The week starts with Monday. (00..53)\n\nSeconds since the Epoch:\n  %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n\nLiteral string:\n  %n - Newline character (\\n)\n  %t - Tab character (\\t)\n  %% - Literal ``%\u0026#39;\u0026#39; character\n\nCombination:\n  %c - date and time (%a %b %e %T %Y)\n  %D - Date (%m/%d/%y)\n  %F - The ISO 8601 date format (%Y-%m-%d)\n  %v - VMS date (%e-%^b-%4Y)\n  %x - Same as %D\n  %X - Same as %T\n  %r - 12-hour time (%I:%M:%S %p)\n  %R - 24-hour time (%H:%M)\n  %T - 24-hour time (%H:%M:%S)\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis method is similar to strftime() function defined in ISO C and POSIX.\u003c/p\u003e\n\n\u003cp\u003eWhile all directives are locale independent since Ruby 1.9, %Z is platform\ndependent. So, the result may differ even if the same format string is used\nin other systems such as C.\u003c/p\u003e\n\n\u003cp\u003e%z is recommended over %Z. %Z doesn\u0026#39;t identify the timezone. For\nexample, “CST” is used at America/Chicago (-06:00), America/Havana\n(-05:00), Asia/Harbin (+08:00), Australia/Darwin (+09:30) and\nAustralia/Adelaide (+10:30). Also, %Z is highly dependent on the operating\nsystem. For example, it may generate a non ASCII string on Japanese\nWindows. i.e. the result can be different to “JST”. So the numeric time\nzone offset, %z, is recommended.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e19\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e37\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e48\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-06:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:37:48 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strftime'\u003estrftime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ePrinted on %m/%d/%Y\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Printed on 11/19/2007\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strftime'\u003estrftime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eat %I:%M%p\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;at 08:37AM\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eVarious ISO 8601 formats:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e%Y%m%d           =\u0026gt; 20071119                  Calendar date (basic)\n%F               =\u0026gt; 2007-11-19                Calendar date (extended)\n%Y-%m            =\u0026gt; 2007-11                   Calendar date, reduced accuracy, specific month\n%Y               =\u0026gt; 2007                      Calendar date, reduced accuracy, specific year\n%C               =\u0026gt; 20                        Calendar date, reduced accuracy, specific century\n%Y%j             =\u0026gt; 2007323                   Ordinal date (basic)\n%Y-%j            =\u0026gt; 2007-323                  Ordinal date (extended)\n%GW%V%u          =\u0026gt; 2007W471                  Week date (basic)\n%G-W%V-%u        =\u0026gt; 2007-W47-1                Week date (extended)\n%GW%V            =\u0026gt; 2007W47                   Week date, reduced accuracy, specific week (basic)\n%G-W%V           =\u0026gt; 2007-W47                  Week date, reduced accuracy, specific week (extended)\n%H%M%S           =\u0026gt; 083748                    Local time (basic)\n%T               =\u0026gt; 08:37:48                  Local time (extended)\n%H%M             =\u0026gt; 0837                      Local time, reduced accuracy, specific minute (basic)\n%H:%M            =\u0026gt; 08:37                     Local time, reduced accuracy, specific minute (extended)\n%H               =\u0026gt; 08                        Local time, reduced accuracy, specific hour\n%H%M%S,%L        =\u0026gt; 083748,000                Local time with decimal fraction, comma as decimal sign (basic)\n%T,%L            =\u0026gt; 08:37:48,000              Local time with decimal fraction, comma as decimal sign (extended)\n%H%M%S.%L        =\u0026gt; 083748.000                Local time with decimal fraction, full stop as decimal sign (basic)\n%T.%L            =\u0026gt; 08:37:48.000              Local time with decimal fraction, full stop as decimal sign (extended)\n%H%M%S%z         =\u0026gt; 083748-0600               Local time and the difference from UTC (basic)\n%T%:z            =\u0026gt; 08:37:48-06:00            Local time and the difference from UTC (extended)\n%Y%m%dT%H%M%S%z  =\u0026gt; 20071119T083748-0600      Date and time of day for calendar date (basic)\n%FT%T%:z         =\u0026gt; 2007-11-19T08:37:48-06:00 Date and time of day for calendar date (extended)\n%Y%jT%H%M%S%z    =\u0026gt; 2007323T083748-0600       Date and time of day for ordinal date (basic)\n%Y-%jT%T%:z      =\u0026gt; 2007-323T08:37:48-06:00   Date and time of day for ordinal date (extended)\n%GW%V%uT%H%M%S%z =\u0026gt; 2007W471T083748-0600      Date and time of day for week date (basic)\n%G-W%V-%uT%T%:z  =\u0026gt; 2007-W47-1T08:37:48-06:00 Date and time of day for week date (extended)\n%Y%m%dT%H%M      =\u0026gt; 20071119T0837             Calendar date and local time (basic)\n%FT%R            =\u0026gt; 2007-11-19T08:37          Calendar date and local time (extended)\n%Y%jT%H%MZ       =\u0026gt; 2007323T0837Z             Ordinal date and UTC of day (basic)\n%Y-%jT%RZ        =\u0026gt; 2007-323T08:37Z           Ordinal date and UTC of day (extended)\n%GW%V%uT%H%M%z   =\u0026gt; 2007W471T0837-0600        Week date and local time and difference from UTC (basic)\n%G-W%V-%uT%R%:z  =\u0026gt; 2007-W47-1T08:37-06:00    Week date and local time and difference from UTC (extended)\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the fraction for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe return value can be a rational number.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2009-03-26 22:33:12 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1238074392.940563917\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_subsec'\u003esubsec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; (94056401/100000000)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #subsec are different because IEEE 754\ndouble is not accurate enough to represent the rational number.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #subsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Sunday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1990\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 1990-04-01 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sunday?'\u003esunday?\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Thursday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1995\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1995-12-21 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_thursday?'\u003ethursday?\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a ten-element \u003cem\u003earray\u003c/em\u003e of values for \u003cem\u003etime\u003c/em\u003e:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_sec'\u003esec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_min'\u003emin\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_hour'\u003ehour\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_year'\u003eyear\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_wday'\u003ewday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_yday'\u003eyday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee the individual methods for an explanation of the valid ranges of each\nvalue. The ten elements can be passed directly to Time::utc or Time::local\nto create a new Time object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:36:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; [1, 36, 8, 19, 11, 2007, 1, 323, false, \u0026quot;CST\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as a floating point number of seconds\nsince the Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968744.77658\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968744\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that IEEE 754 double is not accurate enough to represent the number of\nnanoseconds since the Epoch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as an integer number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968656.89607\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968656\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eto_i\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_sec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as a rational number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_r'\u003eto_r\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; (1270968792716287611/1000000000)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis methods is intended to be used to get an accurate value representing\nthe nanoseconds since the Epoch. You can use this method to convert\n\u003cem\u003etime\u003c/em\u003e to another Epoch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a string representing \u003cem\u003etime\u003c/em\u003e. Equivalent to calling\n#strftime with the appropriate format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003et = Time.now\nt.to_s                              =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S %z\u0026quot;   =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\n\nt.utc.to_s                          =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S UTC\u0026quot;  =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003einspect\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Tuesday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1991\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e19\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 1991-02-19 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tuesday?'\u003etuesday?\u003c/span\u003e                     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of nanoseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-17 15:18:03 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195280283.536151409\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 536151406\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #nsec are different because IEEE 754 double\nis not accurate enough to represent the exact number of nanoseconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #nsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003ensec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_nsec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as an integer number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968656.89607\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968656\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eto_i\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_sec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of microseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:03:26 -0600\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195481006.775195\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 775195\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eusec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_usec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of microseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:03:26 -0600\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195481006.775195\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 775195\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eusec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_usec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to UTC (GMT), modifying the receiver.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmtime'\u003egmtime\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:31 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:51 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egmtime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents a time in UTC (GMT).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:15:23 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:16:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eutc?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003egmt?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an integer representing the day of the week, 0..6, with Sunday ==\n0.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-20 02:35:35 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wday'\u003ewday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sunday?'\u003esunday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_monday?'\u003emonday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tuesday?'\u003etuesday?\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wednesday?'\u003ewednesday?\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_thursday?'\u003ethursday?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_friday?'\u003efriday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_saturday?'\u003esaturday?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Wednesday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1993\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 1993-02-24 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wednesday?'\u003ewednesday?\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an integer representing the day of the year, 1..366.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:32:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_yday'\u003eyday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 323\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the year for \u003cem\u003etime\u003c/em\u003e (including the century).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_year'\u003eyear\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2007\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name of the time zone used for \u003cem\u003etime\u003c/em\u003e. As of Ruby 1.8,\nreturns “UTC\u0026#39;\u0026#39; rather than “GMT\u0026#39;\u0026#39; for UTC times.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;UTC\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/at",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new Time object with the value given by \u003ccode\u003etime\u003c/code\u003e, the\ngiven number of \u003ccode\u003eseconds_with_frac\u003c/code\u003e, or \u003ccode\u003eseconds\u003c/code\u003e and\n\u003ccode\u003emicroseconds_with_frac\u003c/code\u003e since the Epoch.\n\u003ccode\u003eseconds_with_frac\u003c/code\u003e and \u003ccode\u003emicroseconds_with_frac\u003c/code\u003e can\nbe an Integer, Float, Rational, or other Numeric. non-portable feature\nallows the offset to be negative on some systems.\u003c/p\u003e\n\n\u003cp\u003eIf a numeric argument is given, the result is in local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                           \u003cspan class='comment'\u003e#=\u0026gt; 1969-12-31 18:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 1969-12-31 18:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e946702800\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 1999-12-31 23:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='int'\u003e284061600\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 1960-12-31 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='float'\u003e946684800.2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 200000\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_at'\u003eat\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e946684800\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='float'\u003e123456.789\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 123456789\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(time) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(seconds_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eat\u003c/strong\u003e(seconds, microseconds_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/gm",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other values default to the minimum value for that\nfield (and may be \u003ccode\u003enil\u003c/code\u003e or omitted). Months may be specified by\nnumbers from 1 to 12, or by the three-letter English month names. Hours are\nspecified on a 24-hour clock (0..23). Raises an ArgumentError if any values\nare out of range. Will also accept ten arguments in the order output by\nTime#to_a.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec_with_frac\u003c/code\u003e and \u003ccode\u003eusec_with_frac\u003c/code\u003e can have a\nfractional part.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/local",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as Time::gm, but interprets the values in the local time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/mktime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSame as Time::gm, but interprets the values in the local time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocal\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003emktime\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/now",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a new Time object for the current time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 2009-06-24 12:39:54 +0900\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$classmethods/utc",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCreates a Time object based on given values, interpreted as UTC (GMT). The\nyear must be specified. Other values default to the minimum value for that\nfield (and may be \u003ccode\u003enil\u003c/code\u003e or omitted). Months may be specified by\nnumbers from 1 to 12, or by the three-letter English month names. Hours are\nspecified on a 24-hour clock (0..23). Raises an ArgumentError if any values\nare out of range. Will also accept ten arguments in the order output by\nTime#to_a.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec_with_frac\u003c/code\u003e and \u003ccode\u003eusec_with_frac\u003c/code\u003e can have a\nfractional part.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(year, month, day, hour, min, sec, usec_with_frac) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e+ (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egm\u003c/strong\u003e(sec, min, hour, day, month, year, wday, yday, isdst, tz) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/+",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eAddition — Adds some number of seconds (possibly fractional) to\n\u003cem\u003etime\u003c/em\u003e and returns that value as a new Time object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:22:21 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e60\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e60\u003c/span\u003e \u003cspan class='op'\u003e*\u003c/span\u003e \u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-20 08:22:21 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/-",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDifference — Returns a new Time object that represents the difference\nbetween \u003cem\u003etime\u003c/em\u003e and \u003ccode\u003eother_time\u003c/code\u003e, or subtracts the given\nnumber of seconds in \u003ccode\u003enumeric\u003c/code\u003e from \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:23:10 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-12-19 08:23:10 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 2592000.0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e-\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:23:10 -0600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFloat\u003c/tt\u003e) \u003cstrong\u003e-\u003c/strong\u003e(other_time) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003e-\u003c/strong\u003e(numeric) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/\u003c=@",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComparison—Compares \u003ccode\u003etime\u003c/code\u003e with \u003ccode\u003eother_time\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e-1, 0, +1 or nil depending on whether \u003ccode\u003etime\u003c/code\u003e is less  than,\nequal to, or greater than \u003ccode\u003eother_time\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003enil\u003c/code\u003e is returned if the two values are incomparable.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:12:12 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='int'\u003e2592000\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-12-19 08:12:12 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:13:38 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.1\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:13:38 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e             \u003cspan class='comment'\u003e#=\u0026gt; 98222999\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 198222999\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; -1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; 1\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e\u0026lt;=\u0026gt;\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/_dump",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/asctime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a canonical string representation of \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_asctime'\u003easctime\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Wed Apr  9 08:56:03 2003\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003easctime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003ectime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/ctime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a canonical string representation of \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_asctime'\u003easctime\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Wed Apr  9 08:56:03 2003\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003easctime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003ectime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/day",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the day of the month (1..n) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mday'\u003emday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/dst?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e occurs during Daylight Saving\nTime in its time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='comment'\u003e# CST6CDT:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CDT\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# Asia/Tokyo:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eisdst\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003edst?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/eql?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e and \u003ccode\u003eother_time\u003c/code\u003e are\nboth Time objects with the same seconds and fractional seconds.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/friday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Friday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1987\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e18\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1987-12-18 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_friday?'\u003efriday?\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/getgm",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in UTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getgm'\u003egetgm\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 02:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetgm\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/getlocal",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in local time (using\nthe local time zone in effect for this process).\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eutc_offset\u003c/code\u003e is given, it is used instead of the local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 05:15:01 +0900\n\u003c/span\u003e\u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_j'\u003ej\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetlocal\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetlocal\u003c/strong\u003e(utc_offset) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/getutc",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a new Time object representing \u003cem\u003etime\u003c/em\u003e in UTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getgm'\u003egetgm\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 02:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_y'\u003ey\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetgm\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egetutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/gmt?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents a time in UTC (GMT).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:15:23 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:16:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eutc?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003egmt?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/gmt_offset",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/gmtime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to UTC (GMT), modifying the receiver.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmtime'\u003egmtime\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:31 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:51 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egmtime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/gmtoff",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/hash",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a hash code for this Time object.\u003c/p\u003e\n\n\u003cp\u003eSee also Object#hash.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/hour",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the hour of the day (0..23) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:26:20 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hour'\u003ehour\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 8\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a Time object.\u003c/p\u003e\n\n\u003cp\u003eIt is initialized to the current system time if no argument is given.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e The new object will use the resolution available on\nyour system clock, and may include fractional seconds.\u003c/p\u003e\n\n\u003cp\u003eIf one or more arguments specified, the time is initialized to the\nspecified time.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003esec\u003c/code\u003e may have fraction if it is a rational.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003eutc_offset\u003c/code\u003e is the offset from UTC. It can be a string such as\n“+09:00” or a number of seconds such as 32400.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 07:50:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 07:50:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_a'\u003ea\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195480202.282373\u0026quot;\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_b'\u003eb\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195480202.283415\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2008\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e30\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2008-06-21 13:30:00 +0900\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# A trip for RubyConf 2007\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e25\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# JST (Narita)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# CDT (Minneapolis)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t3'\u003et3\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e25\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# CDT (Minneapolis)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t4'\u003et4\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e16\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e53\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-04:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EDT (Charlotte)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t5'\u003et5\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e9\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Charlotte)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t6'\u003et6\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Detroit)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t7'\u003et7\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e13\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e45\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-05:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# EST (Detroit)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t8'\u003et8\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e17\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e# JST (Narita)\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t2'\u003et2\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t1'\u003et1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 10.666666666666666\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t4'\u003et4\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t3'\u003et3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 2.466666666666667\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t6'\u003et6\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t5'\u003et5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 1.95\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t8'\u003et8\u003c/span\u003e\u003cspan class='op'\u003e-\u003c/span\u003e\u003cspan class='id identifier rubyid_t7'\u003et7\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='float'\u003e3600.0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                          \u003cspan class='comment'\u003e#=\u0026gt; 13.416666666666666\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003enew\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003enew\u003c/strong\u003e(year, month = nil, day = nil, hour = nil, min = nil, sec = nil, utc_offset = nil) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/initialize_copy",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/inspect",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a string representing \u003cem\u003etime\u003c/em\u003e. Equivalent to calling\n#strftime with the appropriate format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003et = Time.now\nt.to_s                              =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S %z\u0026quot;   =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\n\nt.utc.to_s                          =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S UTC\u0026quot;  =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003einspect\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/isdst",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e occurs during Daylight Saving\nTime in its time zone.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='comment'\u003e# CST6CDT:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CDT\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='comment'\u003e# Asia/Tokyo:\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;JST\u0026quot;\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e  \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_dst?'\u003edst?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eisdst\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003edst?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/localtime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to local time (using the local time zone in effect\nfor this process) modifying the receiver.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eutc_offset\u003c/code\u003e is given, it is used instead of the local time.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_localtime'\u003elocaltime\u003c/span\u003e                             \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_localtime'\u003elocaltime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e+09:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-02 05:15:01 +0900\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                                  \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocaltime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003elocaltime\u003c/strong\u003e(utc_offset) \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/marshal_dump",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/marshal_load",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/mday",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the day of the month (1..n) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mday'\u003emday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 19\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emday\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/min",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the minute of the hour (0..59) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:25:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_min'\u003emin\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 25\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/mon",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the month of the year (1..12) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:30 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mon'\u003emon\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emon\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emonth\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/monday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Monday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2003\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2003-08-04 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_monday?'\u003emonday?\u003c/span\u003e                      \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/month",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the month of the year (1..12) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:30 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_mon'\u003emon\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 11\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emon\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003emonth\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/nsec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of nanoseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-17 15:18:03 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195280283.536151409\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 536151406\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #nsec are different because IEEE 754 double\nis not accurate enough to represent the exact number of nanoseconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #nsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003ensec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_nsec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/round",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRounds sub seconds to a given precision in decimal digits (0 digits by\ndefault). It returns a new Time object. \u003ccode\u003endigits\u003c/code\u003e should be zero\nor positive integer.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003etime\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2010\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e30\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e43\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e25.123456789\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_r'\u003eto_r\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e           \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.0000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e0\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.0000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1000000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1200000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1230000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1235000000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234600000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234570000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e7\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234568000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567900Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e9\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2010-03-30T05:43:25.1234567890Z\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1999\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e23\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.49\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.49\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:00.000Z\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e1.5\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e3\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;2000-01-01T00:00:01.000Z\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1999\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e31\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e23\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e59\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e+\u003c/span\u003e \u003cspan class='float'\u003e0.123456789\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_round'\u003eround\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_iso8601'\u003eiso8601\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e  \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1999-12-31T23:59:59.123500Z\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/saturday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Saturday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2006\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e6\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e10\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 2006-06-10 00:00:00 -0500\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_saturday?'\u003esaturday?\u003c/span\u003e                      \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/sec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the second of the minute (0..60) for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e Seconds range from zero to 60 to allow the system to\ninject leap seconds. See \u003ca\nhref=\"http://en.wikipedia.org/wiki/Leap_second\"\u003een.wikipedia.org/wiki/Leap_second\u003c/a\u003e\nfor further details.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:25:02 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sec'\u003esec\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/strftime",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eFormats \u003cem\u003etime\u003c/em\u003e according to the directives in the given format\nstring.\u003c/p\u003e\n\n\u003cp\u003eThe directives begin with a percent (%) character. Any text not listed as a\ndirective will be passed through to the output string.\u003c/p\u003e\n\n\u003cp\u003eThe directive consists of a percent (%) character, zero or more flags,\noptional minimum field width, optional modifier and a conversion specifier\nas follows:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e%\u0026lt;flags\u0026gt;\u0026lt;width\u0026gt;\u0026lt;modifier\u0026gt;\u0026lt;conversion\u0026gt;\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFlags:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e-  don\u0026#39;t pad a numerical output\n_  use spaces for padding\n0  use zeros for padding\n^  upcase the result string\n#  change case\n:  use colons for %z\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe minimum field width specifies the minimum width.\u003c/p\u003e\n\n\u003cp\u003eThe modifiers are “E” and “O”. They are ignored.\u003c/p\u003e\n\n\u003cp\u003eFormat directives:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003eDate (Year, Month, Day):\n  %Y - Year with century (can be negative, 4 digits at least)\n          -0001, 0000, 1995, 2009, 14292, etc.\n  %C - year / 100 (rounded down such as 20 in 2009)\n  %y - year % 100 (00..99)\n\n  %m - Month of the year, zero-padded (01..12)\n          %_m  blank-padded ( 1..12)\n          %-m  no-padded (1..12)\n  %B - The full month name (``January\u0026#39;\u0026#39;)\n          %^B  uppercased (``JANUARY\u0026#39;\u0026#39;)\n  %b - The abbreviated month name (``Jan\u0026#39;\u0026#39;)\n          %^b  uppercased (``JAN\u0026#39;\u0026#39;)\n  %h - Equivalent to %b\n\n  %d - Day of the month, zero-padded (01..31)\n          %-d  no-padded (1..31)\n  %e - Day of the month, blank-padded ( 1..31)\n\n  %j - Day of the year (001..366)\n\nTime (Hour, Minute, Second, Subsecond):\n  %H - Hour of the day, 24-hour clock, zero-padded (00..23)\n  %k - Hour of the day, 24-hour clock, blank-padded ( 0..23)\n  %I - Hour of the day, 12-hour clock, zero-padded (01..12)\n  %l - Hour of the day, 12-hour clock, blank-padded ( 1..12)\n  %P - Meridian indicator, lowercase (``am\u0026#39;\u0026#39; or ``pm\u0026#39;\u0026#39;)\n  %p - Meridian indicator, uppercase (``AM\u0026#39;\u0026#39; or ``PM\u0026#39;\u0026#39;)\n\n  %M - Minute of the hour (00..59)\n\n  %S - Second of the minute (00..60)\n\n  %L - Millisecond of the second (000..999)\n       The digits under millisecond are truncated to not produce 1000.\n  %N - Fractional seconds digits, default is 9 digits (nanosecond)\n          %3N  millisecond (3 digits)\n          %6N  microsecond (6 digits)\n          %9N  nanosecond (9 digits)\n          %12N picosecond (12 digits)\n          %15N femtosecond (15 digits)\n          %18N attosecond (18 digits)\n          %21N zeptosecond (21 digits)\n          %24N yoctosecond (24 digits)\n       The digits under the specified length are truncated to avoid\n       carry up.\n\nTime zone:\n  %z - Time zone as hour and minute offset from UTC (e.g. +0900)\n          %:z - hour and minute offset from UTC with a colon (e.g. +09:00)\n          %::z - hour, minute and second offset from UTC (e.g. +09:00:00)\n  %Z - Abbreviated time zone name or similar information.  (OS dependent)\n\nWeekday:\n  %A - The full weekday name (``Sunday\u0026#39;\u0026#39;)\n          %^A  uppercased (``SUNDAY\u0026#39;\u0026#39;)\n  %a - The abbreviated name (``Sun\u0026#39;\u0026#39;)\n          %^a  uppercased (``SUN\u0026#39;\u0026#39;)\n  %u - Day of the week (Monday is 1, 1..7)\n  %w - Day of the week (Sunday is 0, 0..6)\n\nISO 8601 week-based year and week number:\nThe first week of YYYY starts with a Monday and includes YYYY-01-04.\nThe days in the year before the first week are in the last week of\nthe previous year.\n  %G - The week-based year\n  %g - The last 2 digits of the week-based year (00..99)\n  %V - Week number of the week-based year (01..53)\n\nWeek number:\nThe first week of YYYY that starts with a Sunday or Monday (according to %U\nor %W). The days in the year before the first week are in week 0.\n  %U - Week number of the year. The week starts with Sunday. (00..53)\n  %W - Week number of the year. The week starts with Monday. (00..53)\n\nSeconds since the Epoch:\n  %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n\nLiteral string:\n  %n - Newline character (\\n)\n  %t - Tab character (\\t)\n  %% - Literal ``%\u0026#39;\u0026#39; character\n\nCombination:\n  %c - date and time (%a %b %e %T %Y)\n  %D - Date (%m/%d/%y)\n  %F - The ISO 8601 date format (%Y-%m-%d)\n  %v - VMS date (%e-%^b-%4Y)\n  %x - Same as %D\n  %X - Same as %T\n  %r - 12-hour time (%I:%M:%S %p)\n  %R - 24-hour time (%H:%M)\n  %T - 24-hour time (%H:%M:%S)\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis method is similar to strftime() function defined in ISO C and POSIX.\u003c/p\u003e\n\n\u003cp\u003eWhile all directives are locale independent since Ruby 1.9, %Z is platform\ndependent. So, the result may differ even if the same format string is used\nin other systems such as C.\u003c/p\u003e\n\n\u003cp\u003e%z is recommended over %Z. %Z doesn\u0026#39;t identify the timezone. For\nexample, “CST” is used at America/Chicago (-06:00), America/Havana\n(-05:00), Asia/Harbin (+08:00), Australia/Darwin (+09:30) and\nAustralia/Adelaide (+10:30). Also, %Z is highly dependent on the operating\nsystem. For example, it may generate a non ASCII string on Japanese\nWindows. i.e. the result can be different to “JST”. So the numeric time\nzone offset, %z, is recommended.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2007\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e11\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e19\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e8\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e37\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e48\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e-06:00\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:37:48 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strftime'\u003estrftime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ePrinted on %m/%d/%Y\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;Printed on 11/19/2007\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_strftime'\u003estrftime\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eat %I:%M%p\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;at 08:37AM\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eVarious ISO 8601 formats:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e%Y%m%d           =\u0026gt; 20071119                  Calendar date (basic)\n%F               =\u0026gt; 2007-11-19                Calendar date (extended)\n%Y-%m            =\u0026gt; 2007-11                   Calendar date, reduced accuracy, specific month\n%Y               =\u0026gt; 2007                      Calendar date, reduced accuracy, specific year\n%C               =\u0026gt; 20                        Calendar date, reduced accuracy, specific century\n%Y%j             =\u0026gt; 2007323                   Ordinal date (basic)\n%Y-%j            =\u0026gt; 2007-323                  Ordinal date (extended)\n%GW%V%u          =\u0026gt; 2007W471                  Week date (basic)\n%G-W%V-%u        =\u0026gt; 2007-W47-1                Week date (extended)\n%GW%V            =\u0026gt; 2007W47                   Week date, reduced accuracy, specific week (basic)\n%G-W%V           =\u0026gt; 2007-W47                  Week date, reduced accuracy, specific week (extended)\n%H%M%S           =\u0026gt; 083748                    Local time (basic)\n%T               =\u0026gt; 08:37:48                  Local time (extended)\n%H%M             =\u0026gt; 0837                      Local time, reduced accuracy, specific minute (basic)\n%H:%M            =\u0026gt; 08:37                     Local time, reduced accuracy, specific minute (extended)\n%H               =\u0026gt; 08                        Local time, reduced accuracy, specific hour\n%H%M%S,%L        =\u0026gt; 083748,000                Local time with decimal fraction, comma as decimal sign (basic)\n%T,%L            =\u0026gt; 08:37:48,000              Local time with decimal fraction, comma as decimal sign (extended)\n%H%M%S.%L        =\u0026gt; 083748.000                Local time with decimal fraction, full stop as decimal sign (basic)\n%T.%L            =\u0026gt; 08:37:48.000              Local time with decimal fraction, full stop as decimal sign (extended)\n%H%M%S%z         =\u0026gt; 083748-0600               Local time and the difference from UTC (basic)\n%T%:z            =\u0026gt; 08:37:48-06:00            Local time and the difference from UTC (extended)\n%Y%m%dT%H%M%S%z  =\u0026gt; 20071119T083748-0600      Date and time of day for calendar date (basic)\n%FT%T%:z         =\u0026gt; 2007-11-19T08:37:48-06:00 Date and time of day for calendar date (extended)\n%Y%jT%H%M%S%z    =\u0026gt; 2007323T083748-0600       Date and time of day for ordinal date (basic)\n%Y-%jT%T%:z      =\u0026gt; 2007-323T08:37:48-06:00   Date and time of day for ordinal date (extended)\n%GW%V%uT%H%M%S%z =\u0026gt; 2007W471T083748-0600      Date and time of day for week date (basic)\n%G-W%V-%uT%T%:z  =\u0026gt; 2007-W47-1T08:37:48-06:00 Date and time of day for week date (extended)\n%Y%m%dT%H%M      =\u0026gt; 20071119T0837             Calendar date and local time (basic)\n%FT%R            =\u0026gt; 2007-11-19T08:37          Calendar date and local time (extended)\n%Y%jT%H%MZ       =\u0026gt; 2007323T0837Z             Ordinal date and UTC of day (basic)\n%Y-%jT%RZ        =\u0026gt; 2007-323T08:37Z           Ordinal date and UTC of day (extended)\n%GW%V%uT%H%M%z   =\u0026gt; 2007W471T0837-0600        Week date and local time and difference from UTC (basic)\n%G-W%V-%uT%R%:z  =\u0026gt; 2007-W47-1T08:37-06:00    Week date and local time and difference from UTC (extended)\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/subsec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the fraction for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe return value can be a rational number.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2009-03-26 22:33:12 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1238074392.940563917\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_subsec'\u003esubsec\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; (94056401/100000000)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #subsec are different because IEEE 754\ndouble is not accurate enough to represent the rational number.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #subsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/sunday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Sunday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1990\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e4\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 1990-04-01 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sunday?'\u003esunday?\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/thursday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Thursday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1995\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e12\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e21\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 1995-12-21 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_thursday?'\u003ethursday?\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/to_a",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a ten-element \u003cem\u003earray\u003c/em\u003e of values for \u003cem\u003etime\u003c/em\u003e:\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_sec'\u003esec\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_min'\u003emin\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_hour'\u003ehour\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_day'\u003eday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_month'\u003emonth\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_year'\u003eyear\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_wday'\u003ewday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_yday'\u003eyday\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_isdst'\u003eisdst\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee the individual methods for an explanation of the valid ranges of each\nvalue. The ten elements can be passed directly to Time::utc or Time::local\nto create a new Time object.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:36:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_a'\u003eto_a\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; [1, 36, 8, 19, 11, 2007, 1, 323, false, \u0026quot;CST\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/to_f",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as a floating point number of seconds\nsince the Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968744.77658\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968744\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that IEEE 754 double is not accurate enough to represent the number of\nnanoseconds since the Epoch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/to_i",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as an integer number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968656.89607\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968656\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eto_i\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_sec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/to_r",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as a rational number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_r'\u003eto_r\u003c/span\u003e            \u003cspan class='comment'\u003e#=\u0026gt; (1270968792716287611/1000000000)\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis methods is intended to be used to get an accurate value representing\nthe nanoseconds since the Epoch. You can use this method to convert\n\u003cem\u003etime\u003c/em\u003e to another Epoch.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a string representing \u003cem\u003etime\u003c/em\u003e. Equivalent to calling\n#strftime with the appropriate format string.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003et = Time.now\nt.to_s                              =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S %z\u0026quot;   =\u0026gt; \u0026quot;2012-11-10 18:16:12 +0100\u0026quot;\n\nt.utc.to_s                          =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\nt.strftime \u0026quot;%Y-%m-%d %H:%M:%S UTC\u0026quot;  =\u0026gt; \u0026quot;2012-11-10 17:16:12 UTC\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003einspect\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eString\u003c/tt\u003e) \u003cstrong\u003eto_s\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/tuesday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Tuesday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1991\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e19\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 1991-02-19 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tuesday?'\u003etuesday?\u003c/span\u003e                     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/tv_nsec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of nanoseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-17 15:18:03 +0900\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.9f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195280283.536151409\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_nsec'\u003ensec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 536151406\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe lowest digits of #to_f and #nsec are different because IEEE 754 double\nis not accurate enough to represent the exact number of nanoseconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cp\u003eThe more accurate value is returned by #nsec.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003ensec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_nsec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/tv_sec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the value of \u003cem\u003etime\u003c/em\u003e as an integer number of seconds since\nthe Epoch.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e\n\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.5f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1270968656.89607\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_i'\u003eto_i\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 1270968656\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eto_i\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_sec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/tv_usec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of microseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:03:26 -0600\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195481006.775195\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 775195\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eusec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_usec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/usec",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the number of microseconds for \u003cem\u003etime\u003c/em\u003e.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:03:26 -0600\n\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e%10.6f\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e%\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_f'\u003eto_f\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;1195481006.775195\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_usec'\u003eusec\u003c/span\u003e              \u003cspan class='comment'\u003e#=\u0026gt; 775195\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003eusec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eInteger\u003c/tt\u003e) \u003cstrong\u003etv_usec\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/utc",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConverts \u003cem\u003etime\u003c/em\u003e to UTC (GMT), modifying the receiver.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmtime'\u003egmtime\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:31 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:18:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc'\u003eutc\u003c/span\u003e          \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 14:18:51 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003egmtime\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eTime\u003c/tt\u003e) \u003cstrong\u003eutc\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/utc?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents a time in UTC (GMT).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:15:23 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_utc?'\u003eutc?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e                        \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:16:03 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e       \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt?'\u003egmt?\u003c/span\u003e                              \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003eutc?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eBoolean\u003c/tt\u003e) \u003cstrong\u003egmt?\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/utc_offset",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the offset in seconds between the timezone of \u003cem\u003etime\u003c/em\u003e and\nUTC.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 20:15:01 UTC\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; 0\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_getlocal'\u003egetlocal\u003c/span\u003e                  \u003cspan class='comment'\u003e#=\u0026gt; 2000-01-01 14:15:01 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_l'\u003el\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gmt_offset'\u003egmt_offset\u003c/span\u003e                    \u003cspan class='comment'\u003e#=\u0026gt; -21600\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cp class=\"tag_title\"\u003eOverloads:\u003c/p\u003e\n  \u003cul class=\"overload\"\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmt_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003egmtoff\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n      \n      \u003cli class=\"overload_item\"\u003e\n        \u003cspan class=\"signature\"\u003e- (\u003ctt\u003eFixnum\u003c/tt\u003e) \u003cstrong\u003eutc_offset\u003c/strong\u003e \u003c/span\u003e\n        \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n      \u003c/li\u003e\n    \n  \u003c/ul\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/wday",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an integer representing the day of the week, 0..6, with Sunday ==\n0.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-20 02:35:35 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wday'\u003ewday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_sunday?'\u003esunday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_monday?'\u003emonday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_tuesday?'\u003etuesday?\u003c/span\u003e     \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wednesday?'\u003ewednesday?\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_thursday?'\u003ethursday?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_friday?'\u003efriday?\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_saturday?'\u003esaturday?\u003c/span\u003e    \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/wednesday?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if \u003cem\u003etime\u003c/em\u003e represents Wednesday.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e1993\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e2\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e24\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e      \u003cspan class='comment'\u003e#=\u0026gt; 1993-02-24 00:00:00 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_wednesday?'\u003ewednesday?\u003c/span\u003e                   \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/yday",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns an integer representing the day of the year, 1..366.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:32:31 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_yday'\u003eyday\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 323\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/year",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the year for \u003cem\u003etime\u003c/em\u003e (including the century).\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_now'\u003enow\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; 2007-11-19 08:27:51 -0600\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_year'\u003eyear\u003c/span\u003e         \u003cspan class='comment'\u003e#=\u0026gt; 2007\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "Time/$methods/zone",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the name of the time zone used for \u003cem\u003etime\u003c/em\u003e. As of Ruby 1.8,\nreturns “UTC\u0026#39;\u0026#39; rather than “GMT\u0026#39;\u0026#39; for UTC times.\u003c/p\u003e\n\n\u003cpre class=\"code\"\u003e\u003ccode class=\"\"\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_gm'\u003egm\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;UTC\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eTime\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_local'\u003elocal\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='int'\u003e2000\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ejan\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e20\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e15\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='int'\u003e1\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_t'\u003et\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_zone'\u003ezone\u003c/span\u003e   \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;CST\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "time.c",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eURI is a module providing classes to handle Uniform Resource Identifiers\n(\u003ca href=\"http://tools.ietf.org/html/rfc2396\"\u003eRFC2396\u003c/a\u003e)\u003c/p\u003e\n\n\u003ch2 id=\"label-Features\"\u003eFeatures\u003c/h2\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eUniform handling of handling URIs\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eFlexibility to introduce custom URI schemes\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eFlexibility to have an alternate URI::Parser (or just different patterns\nand regexp\u0026#39;s)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch2 id=\"label-Basic+example\"\u003eBasic example\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\nuri = URI(\u0026quot;http://foo.com/posts?id=30\u0026amp;limit=5#time=1305298413\u0026quot;)\n#=\u0026gt; #\u0026lt;URI::HTTP:0x00000000b14880\n      URL:http://foo.com/posts?id=30\u0026amp;limit=5#time=1305298413\u0026gt;\nuri.scheme\n#=\u0026gt; \u0026quot;http\u0026quot;\nuri.host\n#=\u0026gt; \u0026quot;foo.com\u0026quot;\nuri.path\n#=\u0026gt; \u0026quot;/posts\u0026quot;\nuri.query\n#=\u0026gt; \u0026quot;id=30\u0026amp;limit=5\u0026quot;\nuri.fragment\n#=\u0026gt; \u0026quot;time=1305298413\u0026quot;\n\nuri.to_s\n#=\u0026gt; \u0026quot;http://foo.com/posts?id=30\u0026amp;limit=5#time=1305298413\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Adding+custom+URIs\"\u003eAdding custom URIs\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003emodule URI\n  class RSYNC \u0026lt; Generic\n    DEFAULT_PORT = 873\n  end\n  @@schemes[\u0026#39;RSYNC\u0026#39;] = RSYNC\nend\n#=\u0026gt; URI::RSYNC\n\nURI.scheme_list\n#=\u0026gt; {\u0026quot;FTP\u0026quot;=\u0026gt;URI::FTP, \u0026quot;HTTP\u0026quot;=\u0026gt;URI::HTTP, \u0026quot;HTTPS\u0026quot;=\u0026gt;URI::HTTPS,\n     \u0026quot;LDAP\u0026quot;=\u0026gt;URI::LDAP, \u0026quot;LDAPS\u0026quot;=\u0026gt;URI::LDAPS, \u0026quot;MAILTO\u0026quot;=\u0026gt;URI::MailTo,\n     \u0026quot;RSYNC\u0026quot;=\u0026gt;URI::RSYNC}\n\nuri = URI(\u0026quot;rsync://rsync.foo.com\u0026quot;)\n#=\u0026gt; #\u0026lt;URI::RSYNC:0x00000000f648c8 URL:rsync://rsync.foo.com\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-RFC+References\"\u003eRFC References\u003c/h2\u003e\n\n\u003cp\u003eA good place to view an RFC spec is \u003ca\nhref=\"http://www.ietf.org/rfc.html\"\u003ewww.ietf.org/rfc.html\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eHere is a list of all related RFC\u0026#39;s.\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc822\"\u003eRFC822\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc1738\"\u003eRFC1738\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc2255\"\u003eRFC2255\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc2368\"\u003eRFC2368\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc2373\"\u003eRFC2373\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc2396\"\u003eRFC2396\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc2732\"\u003eRFC2732\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://tools.ietf.org/html/rfc3986\"\u003eRFC3986\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch2 id=\"label-Class+tree\"\u003eClass tree\u003c/h2\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::Generic (in uri/generic.rb)\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::FTP - (in uri/ftp.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::HTTP - (in uri/http.rb)\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::HTTPS - (in uri/https.rb)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::LDAP - (in uri/ldap.rb)\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::LDAPS - (in uri/ldaps.rb)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::MailTo - (in uri/mailto.rb)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::Parser - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::REGEXP - (in uri/common.rb)\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::REGEXP::PATTERN - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::Util - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::Escape - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::Error - (in uri/common.rb)\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eURI::InvalidURIError - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::InvalidComponentError - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003cp\u003eURI::BadURIError - (in uri/common.rb)\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\u003ch2 id=\"label-Copyright+Info\"\u003eCopyright Info\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003eAuthor\n\u003cdd\u003e\n\u003cp\u003eAkira Yamada \u0026lt;akira@ruby-lang.org\u0026gt;\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eDocumentation\n\u003cdd\u003e\n\u003cp\u003eAkira Yamada \u0026lt;akira@ruby-lang.org\u0026gt; Dmitry V. Sabanin\n\u0026lt;sdmitry@lrn.ru\u0026gt; Vincent Batts \u0026lt;vbatts@hashbangbash.com\u0026gt;\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eLicense\n\u003cdd\u003e\n\u003cp\u003eCopyright © 2001 akira yamada \u0026lt;akira@ruby-lang.org\u0026gt; You can\nredistribute it and/or modify it under the same term as Ruby.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003eRevision\n\u003cdd\u003e\n\u003cp\u003e$Id$\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDecode URL-encoded form data from given \u003ccode\u003estr\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis decodes application/x-www-form-urlencoded data and returns array of\nkey-value array.\u003c/p\u003e\n\n\u003cp\u003eThis refers \u003ca\nhref=\"http://url.spec.whatwg.org/#concept-urlencoded-parser\"\u003eurl.spec.whatwg.org/#concept-urlencoded-parser\u003c/a\u003e\n, so this supports only \u0026amp;-separator, don\u0026#39;t support ;-separator.\u003c/p\u003e\n\n\u003cp\u003eary = URI.decode_www_form(“a=1\u0026amp;a=2\u0026amp;b=3”) p ary                 \n#=\u0026gt; [[\u0026#39;a\u0026#39;, \u0026#39;1\u0026#39;], [\u0026#39;a\u0026#39;, \u0026#39;2\u0026#39;],\n[\u0026#39;b\u0026#39;, \u0026#39;3\u0026#39;]] p ary.assoc(\u0026#39;a\u0026#39;).last  #=\u0026gt;\n\u0026#39;1\u0026#39; p ary.assoc(\u0026#39;b\u0026#39;).last  #=\u0026gt; \u0026#39;3\u0026#39; p\nary.rassoc(\u0026#39;a\u0026#39;).last #=\u0026gt; \u0026#39;2\u0026#39; p \u003ca href=\"ary\"\u003eHash\u003c/a\u003e   \n# =\u0026gt; “b”=\u0026gt;“3”\u003c/p\u003e\n\n\u003cp\u003eSee URI.decode_www_form_component, URI.encode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDecode given \u003ccode\u003estr\u003c/code\u003e of URL-encoded form data.\u003c/p\u003e\n\n\u003cp\u003eThis decodes + to SP.\u003c/p\u003e\n\n\u003cp\u003eSee URI.encode_www_form_component, URI.decode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eGenerate URL-encoded form data from given \u003ccode\u003eenum\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis generates application/x-www-form-urlencoded data defined in HTML5 from\ngiven an Enumerable object.\u003c/p\u003e\n\n\u003cp\u003eThis internally uses URI.encode_www_form_component(str).\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t convert the encoding of given items, so convert\nthem before call this method if you want to send data as other than\noriginal encoding or mixed encoding data. (Strings which are encoded in an\nHTML5 ASCII incompatible encoding are converted to UTF-8.)\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t handle files.  When you send a file, use\nmultipart/form-data.\u003c/p\u003e\n\n\u003cp\u003eThis refers \u003ca\nhref=\"http://url.spec.whatwg.org/#concept-urlencoded-serializer\"\u003eurl.spec.whatwg.org/#concept-urlencoded-serializer\u003c/a\u003e\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eperl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;q=perl\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eperl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;q=perl\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee URI.encode_www_form_component, URI.decode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEncode given \u003ccode\u003estr\u003c/code\u003e to URL-encoded form data.\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t convert *, -, ., 0-9, A-Z, _, a-z, but does convert\nSP (ASCII space) to + and converts others to %XX.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eenc\u003c/code\u003e is given, convert \u003ccode\u003estr\u003c/code\u003e to the encoding\nbefore percent encoding.\u003c/p\u003e\n\n\u003cp\u003eThis is an implementation of \u003ca\nhref=\"http://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data\"\u003ewww.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSee URI.decode_www_form_component, URI.encode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI::extract(str[, schemes][,\u0026amp;blk])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to extract URIs from.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eschemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eLimit URI matching to a specific schemes.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eExtracts URIs from a string. If block given, iterates through all matched\nURIs. Returns nil if block given or array with matches.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003etext here http://foo.example.org/bla and here mailto:test@example.com and here also.\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;http://foo.example.com/bla\u0026quot;, \u0026quot;mailto:test@example.com\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc: return encoding or nil \u003ca\nhref=\"http://encoding.spec.whatwg.org/#concept-encoding-get\"\u003eencoding.spec.whatwg.org/#concept-encoding-get\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI::join(str[, str, ...])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString(s) to work with\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eJoins URIs.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emain.rbx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x2022ac02 URL:http://localhost/main.rbx\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efoo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x01ab80a0 URL:http://example.com/foo\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/bar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x01aaf0b0 URL:http://example.com/bar\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x801a92af0 URL:http://example.com/bar\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x80135a3a0 URL:http://example.com/foo/bar\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_uri_str'\u003euri_str\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri_str\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString with URI.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates one of the URI\u0026#39;s subclasses instance from the string.\u003c/p\u003e\n\n\u003ch2 id=\"label-Raises\"\u003eRaises\u003c/h2\u003e\n\n\u003cp\u003eURI::InvalidURIError\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eRaised if URI given is not a correct one.\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://www.ruby-lang.org/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x202281be URL:http://www.ruby-lang.org/\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scheme'\u003escheme\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;www.ruby-lang.org\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_regexp'\u003eregexp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_match_schemes'\u003ematch_schemes\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ematch_schemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eArray of schemes. If given, resulting regexp matches to URIs whose scheme\nis one of the match_schemes.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eReturns a Regexp object which matches to URI-like strings. The Regexp\nobject returned by this method includes arbitrary number of capture group\n(parentheses).  Never rely on it\u0026#39;s number.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\n# extract first URI from html_string\nhtml_string.slice(URI.regexp)\n\n# remove ftp URIs\nhtml_string.sub(URI.regexp([\u0026#39;ftp\u0026#39;])\n\n# You should not rely on the number of parentheses\nhtml_string.scan(URI.regexp) do |*matches|\n  p $\u0026amp;\nend\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a Hash of the defined schemes\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString with URI.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eSplits the string on following parts and returns array with result:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e* Scheme\n* Userinfo\n* Host\n* Port\n* Registry\n* Path\n* Opaque\n* Query\n* Fragment\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://www.ruby-lang.org/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;http\u0026quot;, nil, \u0026quot;www.ruby-lang.org\u0026quot;, nil, nil, \u0026quot;/\u0026quot;, nil, nil, nil]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/decode_www_form",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDecode URL-encoded form data from given \u003ccode\u003estr\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis decodes application/x-www-form-urlencoded data and returns array of\nkey-value array.\u003c/p\u003e\n\n\u003cp\u003eThis refers \u003ca\nhref=\"http://url.spec.whatwg.org/#concept-urlencoded-parser\"\u003eurl.spec.whatwg.org/#concept-urlencoded-parser\u003c/a\u003e\n, so this supports only \u0026amp;-separator, don\u0026#39;t support ;-separator.\u003c/p\u003e\n\n\u003cp\u003eary = URI.decode_www_form(“a=1\u0026amp;a=2\u0026amp;b=3”) p ary                 \n#=\u0026gt; [[\u0026#39;a\u0026#39;, \u0026#39;1\u0026#39;], [\u0026#39;a\u0026#39;, \u0026#39;2\u0026#39;],\n[\u0026#39;b\u0026#39;, \u0026#39;3\u0026#39;]] p ary.assoc(\u0026#39;a\u0026#39;).last  #=\u0026gt;\n\u0026#39;1\u0026#39; p ary.assoc(\u0026#39;b\u0026#39;).last  #=\u0026gt; \u0026#39;3\u0026#39; p\nary.rassoc(\u0026#39;a\u0026#39;).last #=\u0026gt; \u0026#39;2\u0026#39; p \u003ca href=\"ary\"\u003eHash\u003c/a\u003e   \n# =\u0026gt; “b”=\u0026gt;“3”\u003c/p\u003e\n\n\u003cp\u003eSee URI.decode_www_form_component, URI.encode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/decode_www_form_component",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDecode given \u003ccode\u003estr\u003c/code\u003e of URL-encoded form data.\u003c/p\u003e\n\n\u003cp\u003eThis decodes + to SP.\u003c/p\u003e\n\n\u003cp\u003eSee URI.encode_www_form_component, URI.decode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/encode_www_form",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eGenerate URL-encoded form data from given \u003ccode\u003eenum\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis generates application/x-www-form-urlencoded data defined in HTML5 from\ngiven an Enumerable object.\u003c/p\u003e\n\n\u003cp\u003eThis internally uses URI.encode_www_form_component(str).\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t convert the encoding of given items, so convert\nthem before call this method if you want to send data as other than\noriginal encoding or mixed encoding data. (Strings which are encoded in an\nHTML5 ASCII incompatible encoding are converted to UTF-8.)\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t handle files.  When you send a file, use\nmultipart/form-data.\u003c/p\u003e\n\n\u003cp\u003eThis refers \u003ca\nhref=\"http://url.spec.whatwg.org/#concept-urlencoded-serializer\"\u003eurl.spec.whatwg.org/#concept-urlencoded-serializer\u003c/a\u003e\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eperl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;q=perl\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_encode_www_form'\u003eencode_www_form\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eruby\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eq\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eperl\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003elang\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003een\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;q=ruby\u0026amp;q=perl\u0026amp;lang=en\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee URI.encode_www_form_component, URI.decode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/encode_www_form_component",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eEncode given \u003ccode\u003estr\u003c/code\u003e to URL-encoded form data.\u003c/p\u003e\n\n\u003cp\u003eThis method doesn\u0026#39;t convert *, -, ., 0-9, A-Z, _, a-z, but does convert\nSP (ASCII space) to + and converts others to %XX.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eenc\u003c/code\u003e is given, convert \u003ccode\u003estr\u003c/code\u003e to the encoding\nbefore percent encoding.\u003c/p\u003e\n\n\u003cp\u003eThis is an implementation of \u003ca\nhref=\"http://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data\"\u003ewww.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eSee URI.decode_www_form_component, URI.encode_www_form\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/extract",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI::extract(str[, schemes][,\u0026amp;blk])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to extract URIs from.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eschemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eLimit URI matching to a specific schemes.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eExtracts URIs from a string. If block given, iterates through all matched\nURIs. Returns nil if block given or array with matches.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003etext here http://foo.example.org/bla and here mailto:test@example.com and here also.\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;http://foo.example.com/bla\u0026quot;, \u0026quot;mailto:test@example.com\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/get_encoding",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc: return encoding or nil \u003ca\nhref=\"http://encoding.spec.whatwg.org/#concept-encoding-get\"\u003eencoding.spec.whatwg.org/#concept-encoding-get\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/join",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI::join(str[, str, ...])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString(s) to work with\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eJoins URIs.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emain.rbx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x2022ac02 URL:http://localhost/main.rbx\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efoo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x01ab80a0 URL:http://example.com/foo\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/bar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x01aaf0b0 URL:http://example.com/bar\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x801a92af0 URL:http://example.com/bar\u0026gt;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_join'\u003ejoin\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ebar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x80135a3a0 URL:http://example.com/foo/bar\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/parse",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_uri_str'\u003euri_str\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri_str\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString with URI.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates one of the URI\u0026#39;s subclasses instance from the string.\u003c/p\u003e\n\n\u003ch2 id=\"label-Raises\"\u003eRaises\u003c/h2\u003e\n\n\u003cp\u003eURI::InvalidURIError\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eRaised if URI given is not a correct one.\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://www.ruby-lang.org/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; #\u0026lt;URI::HTTP:0x202281be URL:http://www.ruby-lang.org/\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scheme'\u003escheme\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;www.ruby-lang.org\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/regexp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_regexp'\u003eregexp\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_match_schemes'\u003ematch_schemes\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ematch_schemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eArray of schemes. If given, resulting regexp matches to URIs whose scheme\nis one of the match_schemes.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eReturns a Regexp object which matches to URI-like strings. The Regexp\nobject returned by this method includes arbitrary number of capture group\n(parentheses).  Never rely on it\u0026#39;s number.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\n# extract first URI from html_string\nhtml_string.slice(URI.regexp)\n\n# remove ftp URIs\nhtml_string.sub(URI.regexp([\u0026#39;ftp\u0026#39;])\n\n# You should not rely on the number of parentheses\nhtml_string.scan(URI.regexp) do |*matches|\n  p $\u0026amp;\nend\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/scheme_list",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a Hash of the defined schemes\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/$classmethods/split",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString with URI.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eSplits the string on following parts and returns array with result:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e* Scheme\n* Userinfo\n* Host\n* Port\n* Registry\n* Path\n* Opaque\n* Query\n* Fragment\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_split'\u003esplit\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://www.ruby-lang.org/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;http\u0026quot;, nil, \u0026quot;www.ruby-lang.org\u0026quot;, nil, nil, \u0026quot;/\u0026quot;, nil, nil, nil]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/BadURIError",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eBadURIError\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eURI is valid, bad usage is not.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Error",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eError\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBase class for all URI exceptions.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Escape",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003emodule for escaping unsafe characters with codes.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI.escape(str [, unsafe])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to replaces in.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp that matches all symbols that must be replaced with codes. By\ndefault uses \u003ccode\u003eREGEXP::UNSAFE\u003c/code\u003e. When this argument is a String,\nit represents a character set.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eEscapes the string, replacing all unsafe characters with codes.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e@?@!\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e!?\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;@%3F@%21\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eUnescapes the string.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Escape/$methods/decode",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eUnescapes the string.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Escape/$methods/encode",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI.escape(str [, unsafe])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to replaces in.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp that matches all symbols that must be replaced with codes. By\ndefault uses \u003ccode\u003eREGEXP::UNSAFE\u003c/code\u003e. When this argument is a String,\nit represents a character set.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eEscapes the string, replacing all unsafe characters with codes.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e@?@!\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e!?\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;@%3F@%21\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Escape/$methods/escape",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eURI.escape(str [, unsafe])\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to replaces in.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp that matches all symbols that must be replaced with codes. By\ndefault uses \u003ccode\u003eREGEXP::UNSAFE\u003c/code\u003e. When this argument is a String,\nit represents a character set.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eEscapes the string, replacing all unsafe characters with codes.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e@?@!\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e!?\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;@%3F@%21\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Escape/$methods/unescape",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eUnescapes the string.\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/?a=\\11\\15\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=%09%0D\u0026quot;\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_enc_uri'\u003eenc_uri\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;http://example.com/?a=\\t\\r\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eFTP\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eFTP URI syntax is defined by RFC1738 section 3.2.\u003c/p\u003e\n\n\u003cp\u003eThis class will be redesigned because of difference of implementations; the\nstructure of its path. draft-hoffman-ftp-uri-04 is a draft but it is a good\nsummary about the de facto spec. \u003ca\nhref=\"http://tools.ietf.org/html/draft-hoffman-ftp-uri-04\"\u003etools.ietf.org/html/draft-hoffman-ftp-uri-04\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::FTP object from generic URL components with no syntax\nchecking.\u003c/p\u003e\n\n\u003cp\u003eUnlike build(), this method does not escape the path component as required\nby RFC1738; instead it is treated as per RFC2396.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::FTP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are \u003ccode\u003euserinfo\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e,\n\u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003epath\u003c/code\u003e and \u003ccode\u003etypecode\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order\u003c/p\u003e\n\u003cdl class=\"rdoc-list label-list\"\u003e\u003cdt\u003euserinfo, host, port, path, typecode\n\u003cdd\u003e\n\u003cp\u003eIf the path supplied is absolute, it will be escaped in order to make it\nabsolute in the URI. Examples:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\nuri = URI::FTP.build([\u0026#39;user:password\u0026#39;, \u0026#39;ftp.example.com\u0026#39;, nil,\n  \u0026#39;/path/file.\u0026gt; zip\u0026#39;, \u0026#39;i\u0026#39;])\nputs uri.to_s  -\u0026gt;  ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=a\n\nuri2 = URI::FTP.build({:host =\u0026gt; \u0026#39;ftp.example.com\u0026#39;,\n  :path =\u0026gt; \u0026#39;ruby/src\u0026#39;})\nputs uri2.to_s  -\u0026gt;  ftp://ftp.example.com/ruby/src\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003evalidates typecode \u003ccode\u003ev\u003c/code\u003e, returns a \u003ccode\u003etrue\u003c/code\u003e or\n\u003ccode\u003efalse\u003c/code\u003e boolean\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the path from an FTP URI.\u003c/p\u003e\n\n\u003cp\u003eRFC 1738 specifically states that the path for an FTP URI does not include\nthe / which separates the URI path from the URI host. Example:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_ftp'\u003eftp\u003c/span\u003e\u003cspan class='symbol'\u003e:/\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_ftp'\u003eftp\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_example'\u003eexample\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_com'\u003ecom\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_pub'\u003epub\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_ruby'\u003eruby\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe above URI indicates that the client should connect to ftp.example.com\nthen cd pub/ruby from the initial login directory.\u003c/p\u003e\n\n\u003cp\u003eIf you want to cd to an absolute directory, you must include an escaped /\n(%2F) in the path. Example:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eftp://ftp.example.com/%2Fpub/ruby\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis method will then return “/pub/ruby”\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrivate setter for the path of the URI::FTP\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrivate setter for the typecode \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::FTP.typecode=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a String representation of the URI::FTP\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003etypecode accessor\u003c/p\u003e\n\n\u003cp\u003esee URI::FTP::COMPONENT\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$classmethods/build",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::FTP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are \u003ccode\u003euserinfo\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e,\n\u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003epath\u003c/code\u003e and \u003ccode\u003etypecode\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order\u003c/p\u003e\n\u003cdl class=\"rdoc-list label-list\"\u003e\u003cdt\u003euserinfo, host, port, path, typecode\n\u003cdd\u003e\n\u003cp\u003eIf the path supplied is absolute, it will be escaped in order to make it\nabsolute in the URI. Examples:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\nuri = URI::FTP.build([\u0026#39;user:password\u0026#39;, \u0026#39;ftp.example.com\u0026#39;, nil,\n  \u0026#39;/path/file.\u0026gt; zip\u0026#39;, \u0026#39;i\u0026#39;])\nputs uri.to_s  -\u0026gt;  ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=a\n\nuri2 = URI::FTP.build({:host =\u0026gt; \u0026#39;ftp.example.com\u0026#39;,\n  :path =\u0026gt; \u0026#39;ruby/src\u0026#39;})\nputs uri2.to_s  -\u0026gt;  ftp://ftp.example.com/ruby/src\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/check_typecode",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003evalidates typecode \u003ccode\u003ev\u003c/code\u003e, returns a \u003ccode\u003etrue\u003c/code\u003e or\n\u003ccode\u003efalse\u003c/code\u003e boolean\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::FTP object from generic URL components with no syntax\nchecking.\u003c/p\u003e\n\n\u003cp\u003eUnlike build(), this method does not escape the path component as required\nby RFC1738; instead it is treated as per RFC2396.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/merge",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the path from an FTP URI.\u003c/p\u003e\n\n\u003cp\u003eRFC 1738 specifically states that the path for an FTP URI does not include\nthe / which separates the URI path from the URI host. Example:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_ftp'\u003eftp\u003c/span\u003e\u003cspan class='symbol'\u003e:/\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_ftp'\u003eftp\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_example'\u003eexample\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_com'\u003ecom\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_pub'\u003epub\u003c/span\u003e\u003cspan class='op'\u003e/\u003c/span\u003e\u003cspan class='id identifier rubyid_ruby'\u003eruby\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe above URI indicates that the client should connect to ftp.example.com\nthen cd pub/ruby from the initial login directory.\u003c/p\u003e\n\n\u003cp\u003eIf you want to cd to an absolute directory, you must include an escaped /\n(%2F) in the path. Example:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eftp://ftp.example.com/%2Fpub/ruby\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis method will then return “/pub/ruby”\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/set_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrivate setter for the path of the URI::FTP\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/set_typecode",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePrivate setter for the typecode \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::FTP.typecode=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a String representation of the URI::FTP\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/typecode",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003etypecode accessor\u003c/p\u003e\n\n\u003cp\u003esee URI::FTP::COMPONENT\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/FTP/$methods/typecode=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the typecode \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::FTP.check_typecode\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eftp://john@ftp.example.com/my_file.img\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_typecode'\u003etypecode\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ei\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;i\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img;type=i\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ftp.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eGeneric\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eBase class for all URI classes. Implements generic URI syntax as per RFC\n2396.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003escheme\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eProtocol scheme, i.e. \u0026#39;http\u0026#39;,\u0026#39;ftp\u0026#39;,\u0026#39;mailto\u0026#39; and so\non.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003euserinfo\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eUser name and password, i.e. \u0026#39;sdmitry:bla\u0026#39;\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003ehost\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eServer host name\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eport\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eServer port\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eregistry\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegistry of naming authorities.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003epath\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ePath on server\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eopaque\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eOpaque part\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003equery\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eQuery data\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003efragment\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eA part of URI after \u0026#39;#\u0026#39; sign\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eparser\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eParser for internal use [URI::DEFAULT_PARSER by default]\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003earg_check\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eCheck arguments [false by default]\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::Generic instance from “generic\u0026#39;\u0026#39; components\nwithout check.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cp\u003eSee #new\u003c/p\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::Generic instance from components of URI::Generic with\ncheck.  Components are: scheme, userinfo, host, port, registry, path,\nopaque, query and fragment. You can provide arguments either by an Array or\na Hash. See #new for hash keys to use or for order of array items.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cp\u003eSee #new\u003c/p\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAt first, tries to create a new URI::Generic instance using\nURI::Generic::build. But, if exception URI::InvalidComponentError is\nraised, then it URI::Escape.escape all URI components and tries again.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComponents of the URI in the order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns default port\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCompares to URI\u0026#39;s\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI is an absolute one\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the host \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :HOST\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a host component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the opaque \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and\nagainst the URI::Parser Regexp for :OPAQUE\u003c/p\u003e\n\n\u003cp\u003eCan not have a host, port, user or path component defined, with an opaque\ncomponent defined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the password \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and\nagainst the URI::Parser Regexp for :USERINFO\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a user component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the path \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :ABS_PATH and :REL_PATH\u003c/p\u003e\n\n\u003cp\u003eCan not have a opaque component defined, with a path component defined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the port \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :PORT\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a port component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the scheme \u003ccode\u003ev\u003c/code\u003e component against the URI::Parser Regexp\nfor :SCHEME\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the user \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :USERINFO\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a user component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the \u003ccode\u003euser\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003epassword\u003c/code\u003e is not provided, then \u003ccode\u003euser\u003c/code\u003e is split,\nusing URI::Generic.split_userinfo, to pull \u003ccode\u003euser\u003c/code\u003e and +password.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_user, URI::Generic.check_password\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eattempt to parse other URI +oth+\nreturn [parsed_oth, self]\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_coerce'\u003ecoerce\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [#\u0026lt;URI::HTTP:0x00000000bcb028 URL:http://foo.com/\u0026gt;, #\u0026lt;URI::HTTP:0x00000000d92178 URL:http://my.example.com\u0026gt;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComponents of the URI in the order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns an Array of the components defined from the COMPONENT Array\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns default port\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eescapes \u0026#39;user:password\u0026#39; \u003ccode\u003ev\u003c/code\u003e based on RFC 1738 section\n3.1\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns a proxy URI. The proxy URI is obtained from environment variables\nsuch as http_proxy, ftp_proxy, no_proxy, etc. If there is no proper proxy,\nnil is returned.\u003c/p\u003e\n\n\u003cp\u003eNote that capitalized variables (HTTP_PROXY, FTP_PROXY, NO_PROXY, etc.) are\nexamined too.\u003c/p\u003e\n\n\u003cp\u003eBut http_proxy and HTTP_PROXY is treated specially under CGI environment.\nIt\u0026#39;s because HTTP_PROXY may be set by Proxy: header. So HTTP_PROXY is\nnot used. http_proxy is not used too if the variable is case insensitive.\nCGI_HTTP_PROXY can be used instead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the fragment component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz?search=FooBar#ponies\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_fragment'\u003efragment\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ponies\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI has a path\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the host component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt returns nil if no host component.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:foo@example.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe component doesn\u0026#39;t contains the port number.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo:8080/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince IPv6 addresses are wrapped by brackets in URIs, this method returns\nIPv6 addresses wrapped by brackets. This form is not appropriate to pass\nsocket methods such as TCPSocket.open. If unwrapped host names are\nrequired, use “hostname” method.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://[::1]/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;[::1]\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://[::1]/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hostname'\u003ehostname\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;::1\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eextract the host part of the URI and unwrap brackets for IPv6 addresses.\u003c/p\u003e\n\n\u003cp\u003eThis method is same as URI::Generic#host except brackets for IPv6 (and\nfuture IP) addresses are removed.\u003c/p\u003e\n\n\u003cp\u003eu = URI(“http://[::1]/bar”) p u.hostname      #=\u0026gt; “::1” p u.host        \n#=\u0026gt; “[::1]”\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eset the host part of the URI as the argument with brackets for IPv6\naddresses.\u003c/p\u003e\n\n\u003cp\u003eThis method is same as URI::Generic#host= except the argument can be bare\nIPv6 address.\u003c/p\u003e\n\n\u003cp\u003eu = URI(“\u003ca href=\"http://foo/bar\"\u003efoo/bar\u003c/a\u003e”) p u.to_s                 \n#=\u0026gt; “\u003ca href=\"http://foo/bar\"\u003efoo/bar\u003c/a\u003e” u.hostname = “::1” p u.to_s  \n#=\u0026gt; “\u003ca href=\"http://[::1]/bar\"\u003e[::1]/bar\u003c/a\u003e”\u003c/p\u003e\n\n\u003cp\u003eIf the argument seems IPv6 address, it is wrapped by brackets.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eMerges two URI\u0026#39;s.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_merge'\u003emerge\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  #\u0026lt;URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003e$!.class\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eDestructive form of #merge\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_merge!'\u003emerge!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  #\u0026lt;URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturn base and rel. you can modify `base\u0026#39;, but can not `rel\u0026#39;.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMerges a base path \u003ccode\u003ebase\u003c/code\u003e, with relative path \u003ccode\u003erel\u003c/code\u003e,\nreturns a modified base path.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns normalized URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDestructive version of #normalize\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the opaque part of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:foo@example.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_opaque'\u003eopaque\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo@example.org\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePortion of the path that does make use of the slash \u0026#39;/\u0026#39;. The path\ntypically refers to the absolute path and the opaque part.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_see'\u003esee\u003c/span\u003e \u003cspan class='const'\u003eRFC2396\u003c/span\u003e \u003cspan class='const'\u003eSection\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e \u003cspan class='kw'\u003eand\u003c/span\u003e \u003cspan class='float'\u003e5.2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the parser to be used.\u003c/p\u003e\n\n\u003cp\u003eUnless a URI::Parser is defined, then DEFAULT_PARSER is used.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the password component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the \u003ccode\u003epassword\u003c/code\u003e component. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_password\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://john:S3nsit1ve@my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_password'\u003epassword\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eV3ry_S3nsit1ve\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;V3ry_S3nsit1ve\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x00000000881d90 URL:http://john:V3ry_S3nsit1ve@my.example.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the path component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_path'\u003epath\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;/bar/baz\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the assemble String with path and query components\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the port component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_port'\u003eport\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;80\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo:8080/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_port'\u003eport\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;8080\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the query component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz?search=FooBar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_query'\u003equery\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;search=FooBar\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI is relative\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereplace self by other URI object\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCalculates relative path from oth to self\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_route_from'\u003eroute_from\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::Generic:0x20218858 URL:/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003e$!.class\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:stopdoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:stopdoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCalculates relative path to oth from self\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_route_to'\u003eroute_to\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::Generic:0x2020c2f6 URL:/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the scheme component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scheme'\u003escheme\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;http\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ecomponents\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eMultiple Symbol arguments defined in URI::HTTP\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eSelects specified components from URI\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://myuser:mypass@my.example.com/test.rbx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_select'\u003eselect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:userinfo\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:host\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:path\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;myuser:mypass\u0026quot;, \u0026quot;my.example.com\u0026quot;, \u0026quot;/test.rbx\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the host component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.host=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the opaque component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.opaque=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the password component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.password=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the path component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.path=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the port component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.port=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the scheme component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.scheme=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the user component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.user=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotect setter for the \u003ccode\u003euser\u003c/code\u003e component, and\n\u003ccode\u003epassword\u003c/code\u003e if available. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.userinfo=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns an Array of the path split on \u0026#39;/\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the userinfo \u003ccode\u003eui\u003c/code\u003e as user, password if properly\nformatted as \u0026#39;user:password\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs String from URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the user component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the \u003ccode\u003euser\u003c/code\u003e component. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_user\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://john:S3nsit1ve@my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_user'\u003euser\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esam\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;sam\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x00000000881d90 URL:http://sam:V3ry_S3nsit1ve@my.example.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the userinfo, either as \u0026#39;user\u0026#39; or \u0026#39;user:password\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSets userinfo, argument is string like \u0026#39;name:pass\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$classmethods/build",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cp\u003eSee #new\u003c/p\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::Generic instance from components of URI::Generic with\ncheck.  Components are: scheme, userinfo, host, port, registry, path,\nopaque, query and fragment. You can provide arguments either by an Array or\na Hash. See #new for hash keys to use or for order of array items.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$classmethods/build2",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cp\u003eSee #new\u003c/p\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAt first, tries to create a new URI::Generic instance using\nURI::Generic::build. But, if exception URI::InvalidComponentError is\nraised, then it URI::Escape.escape all URI components and tries again.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$classmethods/component",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComponents of the URI in the order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$classmethods/default_port",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns default port\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$classmethods/use_registry",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/+",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eMerges two URI\u0026#39;s.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_merge'\u003emerge\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  #\u0026lt;URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003emerge\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/-",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCalculates relative path from oth to self\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_route_from'\u003eroute_from\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::Generic:0x20218858 URL:/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/==",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eCompares to URI\u0026#39;s\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/absolute",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI is an absolute one\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/absolute?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI is an absolute one\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_host",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the host \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :HOST\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a host component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_opaque",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the opaque \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and\nagainst the URI::Parser Regexp for :OPAQUE\u003c/p\u003e\n\n\u003cp\u003eCan not have a host, port, user or path component defined, with an opaque\ncomponent defined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_password",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the password \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and\nagainst the URI::Parser Regexp for :USERINFO\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a user component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the path \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :ABS_PATH and :REL_PATH\u003c/p\u003e\n\n\u003cp\u003eCan not have a opaque component defined, with a path component defined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_port",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the port \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :PORT\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a port component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_registry",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_scheme",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the scheme \u003ccode\u003ev\u003c/code\u003e component against the URI::Parser Regexp\nfor :SCHEME\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_user",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the user \u003ccode\u003ev\u003c/code\u003e component for RFC2396 compliance and against\nthe URI::Parser Regexp for :USERINFO\u003c/p\u003e\n\n\u003cp\u003eCan not have a registry or opaque component defined, with a user component\ndefined.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/check_userinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the \u003ccode\u003euser\u003c/code\u003e and \u003ccode\u003epassword\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003epassword\u003c/code\u003e is not provided, then \u003ccode\u003euser\u003c/code\u003e is split,\nusing URI::Generic.split_userinfo, to pull \u003ccode\u003euser\u003c/code\u003e and +password.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_user, URI::Generic.check_password\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/coerce",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003eattempt to parse other URI +oth+\nreturn [parsed_oth, self]\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_coerce'\u003ecoerce\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; [#\u0026lt;URI::HTTP:0x00000000bcb028 URL:http://foo.com/\u0026gt;, #\u0026lt;URI::HTTP:0x00000000d92178 URL:http://my.example.com\u0026gt;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/component",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eComponents of the URI in the order.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/component_ary",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns an Array of the components defined from the COMPONENT Array\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/default_port",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns default port\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/escape_userpass",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eescapes \u0026#39;user:password\u0026#39; \u003ccode\u003ev\u003c/code\u003e based on RFC 1738 section\n3.1\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/find_proxy",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns a proxy URI. The proxy URI is obtained from environment variables\nsuch as http_proxy, ftp_proxy, no_proxy, etc. If there is no proper proxy,\nnil is returned.\u003c/p\u003e\n\n\u003cp\u003eNote that capitalized variables (HTTP_PROXY, FTP_PROXY, NO_PROXY, etc.) are\nexamined too.\u003c/p\u003e\n\n\u003cp\u003eBut http_proxy and HTTP_PROXY is treated specially under CGI environment.\nIt\u0026#39;s because HTTP_PROXY may be set by Proxy: header. So HTTP_PROXY is\nnot used. http_proxy is not used too if the variable is case insensitive.\nCGI_HTTP_PROXY can be used instead.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/fragment",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the fragment component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz?search=FooBar#ponies\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_fragment'\u003efragment\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;ponies\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/fragment=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the fragment \u003ccode\u003ev\u003c/code\u003e component against the URI::Parser Regexp\nfor :FRAGMENT\u003c/p\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the fragment component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/?id=25#time=1305212049\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_fragment'\u003efragment\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003etime=1305212086\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;time=1305212086\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000007a81f8 URL:http://my.example.com/?id=25#time=1305212086\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/hierarchical?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI has a path\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/host",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the host component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt returns nil if no host component.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:foo@example.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; nil\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe component doesn\u0026#39;t contains the port number.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo:8080/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSince IPv6 addresses are wrapped by brackets in URIs, this method returns\nIPv6 addresses wrapped by brackets. This form is not appropriate to pass\nsocket methods such as TCPSocket.open. If unwrapped host names are\nrequired, use “hostname” method.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://[::1]/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;[::1]\u0026quot;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://[::1]/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_hostname'\u003ehostname\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;::1\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/host=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the host component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_host\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_host'\u003ehost\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003efoo.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;foo.com\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000008e89e8 URL:http://foo.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/hostname",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eextract the host part of the URI and unwrap brackets for IPv6 addresses.\u003c/p\u003e\n\n\u003cp\u003eThis method is same as URI::Generic#host except brackets for IPv6 (and\nfuture IP) addresses are removed.\u003c/p\u003e\n\n\u003cp\u003eu = URI(“http://[::1]/bar”) p u.hostname      #=\u0026gt; “::1” p u.host        \n#=\u0026gt; “[::1]”\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/hostname=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eset the host part of the URI as the argument with brackets for IPv6\naddresses.\u003c/p\u003e\n\n\u003cp\u003eThis method is same as URI::Generic#host= except the argument can be bare\nIPv6 address.\u003c/p\u003e\n\n\u003cp\u003eu = URI(“\u003ca href=\"http://foo/bar\"\u003efoo/bar\u003c/a\u003e”) p u.to_s                 \n#=\u0026gt; “\u003ca href=\"http://foo/bar\"\u003efoo/bar\u003c/a\u003e” u.hostname = “::1” p u.to_s  \n#=\u0026gt; “\u003ca href=\"http://[::1]/bar\"\u003e[::1]/bar\u003c/a\u003e”\u003c/p\u003e\n\n\u003cp\u003eIf the argument seems IPv6 address, it is wrapped by brackets.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003escheme\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eProtocol scheme, i.e. \u0026#39;http\u0026#39;,\u0026#39;ftp\u0026#39;,\u0026#39;mailto\u0026#39; and so\non.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003euserinfo\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eUser name and password, i.e. \u0026#39;sdmitry:bla\u0026#39;\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003ehost\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eServer host name\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eport\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eServer port\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eregistry\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegistry of naming authorities.\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003epath\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ePath on server\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eopaque\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eOpaque part\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003equery\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eQuery data\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003efragment\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eA part of URI after \u0026#39;#\u0026#39; sign\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eparser\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eParser for internal use [URI::DEFAULT_PARSER by default]\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003earg_check\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eCheck arguments [false by default]\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::Generic instance from “generic\u0026#39;\u0026#39; components\nwithout check.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/merge!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eDestructive form of #merge\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_merge!'\u003emerge!\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  #\u0026lt;URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/merge",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eMerges two URI\u0026#39;s.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_merge'\u003emerge\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  #\u0026lt;URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003e$!.class\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/merge0",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturn base and rel. you can modify `base\u0026#39;, but can not `rel\u0026#39;.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/merge_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eMerges a base path \u003ccode\u003ebase\u003c/code\u003e, with relative path \u003ccode\u003erel\u003c/code\u003e,\nreturns a modified base path.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/normalize!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eDestructive version of #normalize\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/normalize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns normalized URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/opaque",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the opaque part of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:foo@example.org\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_opaque'\u003eopaque\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;foo@example.org\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePortion of the path that does make use of the slash \u0026#39;/\u0026#39;. The path\ntypically refers to the absolute path and the opaque part.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_see'\u003esee\u003c/span\u003e \u003cspan class='const'\u003eRFC2396\u003c/span\u003e \u003cspan class='const'\u003eSection\u003c/span\u003e \u003cspan class='int'\u003e3\u003c/span\u003e \u003cspan class='kw'\u003eand\u003c/span\u003e \u003cspan class='float'\u003e5.2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/opaque=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the opaque component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_opaque\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/parser",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the parser to be used.\u003c/p\u003e\n\n\u003cp\u003eUnless a URI::Parser is defined, then DEFAULT_PARSER is used.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/password",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the password component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/password=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the \u003ccode\u003epassword\u003c/code\u003e component. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_password\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://john:S3nsit1ve@my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_password'\u003epassword\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eV3ry_S3nsit1ve\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;V3ry_S3nsit1ve\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x00000000881d90 URL:http://john:V3ry_S3nsit1ve@my.example.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the path component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_path'\u003epath\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;/bar/baz\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/path=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the path component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_path\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/pub/files\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_path'\u003epath\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/faq/\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;/faq/\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000008e89e8 URL:http://my.example.com/faq/\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/path_query",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the assemble String with path and query components\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/port",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the port component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_port'\u003eport\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;80\u0026quot;\n\u003c/span\u003e\n\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo:8080/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_port'\u003eport\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;8080\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/port=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the port component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_port\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_port'\u003eport\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='int'\u003e8080\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  8080\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000008e89e8 URL:http://my.example.com:8080\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/query",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the query component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz?search=FooBar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_query'\u003equery\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;search=FooBar\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/query=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the query component \u003ccode\u003ev\u003c/code\u003e.\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/?id=25\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_query'\u003equery\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eid=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;id=1\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000008e89e8 URL:http://my.example.com/?id=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/registry",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/relative?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI is relative\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/replace!",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereplace self by other URI object\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/route_from",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCalculates relative path from oth to self\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_route_from'\u003eroute_from\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::Generic:0x20218858 URL:/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003e$!.class\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/route_from0",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:stopdoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eBadURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/route_from_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:stopdoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/route_to",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003eoth\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eURI or String\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCalculates relative path to oth from self\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_route_to'\u003eroute_to\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com/main.rbx?page=1\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::Generic:0x2020c2f6 URL:/main.rbx?page=1\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/scheme",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the scheme component of the URI.\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://foo/bar/baz\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scheme'\u003escheme\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; \u0026quot;http\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/scheme=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the scheme component \u003ccode\u003ev\u003c/code\u003e. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_scheme\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_scheme'\u003escheme\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttps\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;https\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x000000008e89e8 URL:https://my.example.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/select",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ecomponents\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eMultiple Symbol arguments defined in URI::HTTP\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eSelects specified components from URI\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://myuser:mypass@my.example.com/test.rbx\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_select'\u003eselect\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:userinfo\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:host\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='symbol'\u003e:path\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; [\u0026quot;myuser:mypass\u0026quot;, \u0026quot;my.example.com\u0026quot;, \u0026quot;/test.rbx\u0026quot;]\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_host",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the host component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.host=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_opaque",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the opaque component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.opaque=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_password",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the password component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.password=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the path component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.path=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_port",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the port component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.port=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_registry",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_scheme",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the scheme component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.scheme=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_user",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotected setter for the user component \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.user=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/set_userinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprotect setter for the \u003ccode\u003euser\u003c/code\u003e component, and\n\u003ccode\u003epassword\u003c/code\u003e if available. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.userinfo=\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/split_path",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns an Array of the path split on \u0026#39;/\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/split_userinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the userinfo \u003ccode\u003eui\u003c/code\u003e as user, password if properly\nformatted as \u0026#39;user:password\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs String from URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/user",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the user component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/user=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003ev\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003epublic setter for the \u003ccode\u003euser\u003c/code\u003e component. (with validation)\u003c/p\u003e\n\n\u003cp\u003esee also URI::Generic.check_user\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://john:S3nsit1ve@my.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_user'\u003euser\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003esam\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt;  \u0026quot;sam\u0026quot;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0x00000000881d90 URL:http://sam:V3ry_S3nsit1ve@my.example.com\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/userinfo",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns the userinfo, either as \u0026#39;user\u0026#39; or \u0026#39;user:password\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Generic/$methods/userinfo=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eSets userinfo, argument is string like \u0026#39;name:pass\u0026#39;\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/generic.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/HTTP",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eHTTP\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe syntax of HTTP URIs is defined in RFC1738 section 3.3.\u003c/p\u003e\n\n\u003cp\u003eNote that the Ruby URI library allows HTTP URLs containing usernames and\npasswords. This is not legal as per the RFC, but used to be supported in\nInternet Explorer 5 and 6, before the MS04-004 security update. See\n\u0026lt;URL:\u003ca\nhref=\"http://support.microsoft.com/kb/834489\"\u003esupport.microsoft.com/kb/834489\u003c/a\u003e\u0026gt;.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::HTTP object from generic URI components as per RFC 2396.\nNo HTTP-specific syntax checking (as per RFC 1738) is performed.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/path\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efragment\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also URI::Generic.new\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::HTTP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are userinfo, host, port, path, query and fragment.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order [userinfo,\nhost, port, path, query, fragment].\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_newuri'\u003enewuri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_build'\u003ebuild\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='symbol'\u003e:host\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='symbol'\u003e:path\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo/bar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_newuri'\u003enewuri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_build'\u003ebuild\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/path\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efragment\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCurrently, if passed userinfo components this method generates invalid HTTP\nURIs as per RFC 1738.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eReturns the full path for an HTTP request, as required by Net::HTTP::Get.\u003c/p\u003e\n\n\u003cp\u003eIf the URI contains a query, the full path is URI#path + \u0026#39;?\u0026#39; +\nURI#query. Otherwise, the path is simply URI#path.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/http.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/HTTP/$classmethods/build",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::HTTP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are userinfo, host, port, path, query and fragment.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order [userinfo,\nhost, port, path, query, fragment].\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_newuri'\u003enewuri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_build'\u003ebuild\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='symbol'\u003e:host\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='symbol'\u003e:path\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/foo/bar\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbrace'\u003e}\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_newuri'\u003enewuri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_build'\u003ebuild\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/path\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efragment\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCurrently, if passed userinfo components this method generates invalid HTTP\nURIs as per RFC 1738.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/http.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/HTTP/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::HTTP object from generic URI components as per RFC 2396.\nNo HTTP-specific syntax checking (as per RFC 1738) is performed.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eHTTP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ewww.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/path\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003efragment\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also URI::Generic.new\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/http.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/HTTP/$methods/request_uri",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eReturns the full path for an HTTP request, as required by Net::HTTP::Get.\u003c/p\u003e\n\n\u003cp\u003eIf the URI contains a query, the full path is URI#path + \u0026#39;?\u0026#39; +\nURI#query. Otherwise, the path is simply URI#path.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/http.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/HTTPS",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eHTTPS\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe default port for HTTPS URIs is 443, and the scheme is \u0026#39;https:\u0026#39;\nrather than \u0026#39;http:\u0026#39;. Other than that, HTTPS URIs are identical to\nHTTP URIs; see URI::HTTP.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/https.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/InvalidComponentError",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eInvalidComponentError\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eNot a URI component.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/InvalidURIError",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eInvalidURIError\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eNot a URI.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eLDAP\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eLDAP URI SCHEMA (described in RFC2255) \u003ca\nhref=\"?\u003cextensions\u003e“\u003eldap://\u003chost\u003e/\u003cdn\u003e[?\u003cattrs\u003e[?\u003cscope\u003e[?\u003cfilter\u003e\u003c/a\u003e]]]\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::LDAP object from generic URI components as per RFC 2396.\nNo LDAP-specific syntax checking is performed.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eLDAP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/dc=example;dc=com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also URI::Generic.new\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::LDAP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are host, port, dn, attributes, scope, filter, and\nextensions.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order [host,\nport, dn, attributes, scope, filter, extensions].\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003enewuri = URI::LDAP.build({:host =\u0026gt; \u0026#39;ldap.example.com\u0026#39;,\n  :dn\u0026gt; =\u0026gt; \u0026#39;/dc=example\u0026#39;})\n\nnewuri = URI::LDAP.build([\u0026quot;ldap.example.com\u0026quot;, nil,\n  \u0026quot;/dc=example;dc=com\u0026quot;, \u0026quot;query\u0026quot;, nil, nil, nil])\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns attributes.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for attributes \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to assemble \u003ccode\u003equery\u003c/code\u003e from \u003ccode\u003eattributes\u003c/code\u003e,\n\u003ccode\u003escope\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003eextensions\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns dn.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for dn \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns extensions.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for extensions \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns filter.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for filter \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI has a path For URI::LDAP this will return \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to cleanup \u003ccode\u003edn\u003c/code\u003e from using the \u003ccode\u003epath\u003c/code\u003e\ncomponent attribute\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to cleanup \u003ccode\u003eattributes\u003c/code\u003e, \u003ccode\u003escope\u003c/code\u003e,\n\u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003eextensions\u003c/code\u003e, from using the\n\u003ccode\u003equery\u003c/code\u003e component attribute\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns scope.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for scope \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for attributes \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for dn \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for extensions \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for filter \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for scope \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$classmethods/build",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::LDAP object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eThe components accepted are host, port, dn, attributes, scope, filter, and\nextensions.\u003c/p\u003e\n\n\u003cp\u003eThe components should be provided either as an Array, or as a Hash with\nkeys formed by preceding the component names with a colon.\u003c/p\u003e\n\n\u003cp\u003eIf an Array is used, the components must be passed in the order [host,\nport, dn, attributes, scope, filter, extensions].\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003enewuri = URI::LDAP.build({:host =\u0026gt; \u0026#39;ldap.example.com\u0026#39;,\n  :dn\u0026gt; =\u0026gt; \u0026#39;/dc=example\u0026#39;})\n\nnewuri = URI::LDAP.build([\u0026quot;ldap.example.com\u0026quot;, nil,\n  \u0026quot;/dc=example;dc=com\u0026quot;, \u0026quot;query\u0026quot;, nil, nil, nil])\n\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/attributes",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns attributes.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/attributes=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for attributes \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/build_path_query",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to assemble \u003ccode\u003equery\u003c/code\u003e from \u003ccode\u003eattributes\u003c/code\u003e,\n\u003ccode\u003escope\u003c/code\u003e, \u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003eextensions\u003c/code\u003e.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/dn",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns dn.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/dn=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for dn \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/extensions",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns extensions.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/extensions=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for extensions \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/filter",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns filter.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/filter=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for filter \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/hierarchical?",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eChecks if URI has a path For URI::LDAP this will return \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreate a new URI::LDAP object from generic URI components as per RFC 2396.\nNo LDAP-specific syntax checking is performed.\u003c/p\u003e\n\n\u003cp\u003eArguments are \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003euserinfo\u003c/code\u003e,\n\u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003eport\u003c/code\u003e, \u003ccode\u003eregistry\u003c/code\u003e,\n\u003ccode\u003epath\u003c/code\u003e, \u003ccode\u003eopaque\u003c/code\u003e, \u003ccode\u003equery\u003c/code\u003e and\n\u003ccode\u003efragment\u003c/code\u003e, in that order.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eLDAP\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap.example.com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e\n  \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e/dc=example;dc=com\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003equery\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='kw'\u003enil\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also URI::Generic.new\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/parse_dn",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to cleanup \u003ccode\u003edn\u003c/code\u003e from using the \u003ccode\u003epath\u003c/code\u003e\ncomponent attribute\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/parse_query",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate method to cleanup \u003ccode\u003eattributes\u003c/code\u003e, \u003ccode\u003escope\u003c/code\u003e,\n\u003ccode\u003efilter\u003c/code\u003e and \u003ccode\u003eextensions\u003c/code\u003e, from using the\n\u003ccode\u003equery\u003c/code\u003e component attribute\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/scope",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns scope.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/scope=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for scope \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/set_attributes",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for attributes \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/set_dn",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for dn \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/set_extensions",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for extensions \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/set_filter",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for filter \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAP/$methods/set_scope",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for scope \u003ccode\u003eval\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/ldap.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/LDAPS",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eLDAPS\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe default port for LDAPS URIs is 636, and the scheme is \u0026#39;ldaps:\u0026#39;\nrather than \u0026#39;ldap:\u0026#39;. Other than that, LDAPS URIs are identical to\nLDAP URIs; see URI::LDAP.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/ldaps.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eMailTo\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eRFC6068, The mailto URL scheme\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::MailTo object from generic URL components with no syntax\nchecking.\u003c/p\u003e\n\n\u003cp\u003eThis method is usually called from URI::parse, which checks the validity of\neach component.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::MailTo object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eComponents can be provided as an Array or Hash. If an Array is used, the\ncomponents must be supplied as [to, headers].\u003c/p\u003e\n\n\u003cp\u003eIf a Hash is used, the keys are the component names preceded by colons.\u003c/p\u003e\n\n\u003cp\u003eThe headers can be supplied as a pre-encoded string, such as\n“subject=subscribe\u0026amp;cc=address”, or as an Array of Arrays like\u003c/p\u003e\n\u003cdl class=\"rdoc-list label-list\"\u003e\u003cdt\u003e[\u0026#39;subject\u0026#39;, \u0026#39;subscribe\u0026#39;], [\u0026#39;cc\u0026#39;, \u0026#39;address\u0026#39;]\n\u003cdd\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\nm1 = URI::MailTo.build([\u0026#39;joe@example.com\u0026#39;, \u0026#39;subject=Ruby\u0026#39;])\nputs m1.to_s  -\u0026gt;  mailto:joe@example.com?subject=Ruby\n\nm2 = URI::MailTo.build([\u0026#39;john@example.com\u0026#39;, [[\u0026#39;Subject\u0026#39;, \u0026#39;Ruby\u0026#39;], [\u0026#39;Cc\u0026#39;, \u0026#39;jack@example.com\u0026#39;]]])\nputs m2.to_s  -\u0026gt;  mailto:john@example.com?Subject=Ruby\u0026amp;Cc=jack@example.com\n\nm3 = URI::MailTo.build({:to =\u0026gt; \u0026#39;listman@example.com\u0026#39;, :headers =\u0026gt; [[\u0026#39;subject\u0026#39;, \u0026#39;subscribe\u0026#39;]]})\nputs m3.to_s  -\u0026gt;  mailto:listman@example.com?subject=subscribe\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the headers \u003ccode\u003ev\u003c/code\u003e component against either\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eHEADER_REGEXP\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the to \u003ccode\u003ev\u003c/code\u003e component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eE-mail headers set by the URL, as an Array of Arrays\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for headers \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for to \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe primary e-mail address of the URL, as a String\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the RFC822 e-mail text equivalent of the URL, as a String.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:ruby-list@ruby-lang.org?Subject=subscribe\u0026amp;cc=myaddr\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_mailtext'\u003eto_mailtext\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;To: ruby-list@ruby-lang.org\\nSubject: subscribe\\nCc: myaddr\\n\\n\\n\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs String from URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$classmethods/build",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::MailTo object from components, with syntax checking.\u003c/p\u003e\n\n\u003cp\u003eComponents can be provided as an Array or Hash. If an Array is used, the\ncomponents must be supplied as [to, headers].\u003c/p\u003e\n\n\u003cp\u003eIf a Hash is used, the keys are the component names preceded by colons.\u003c/p\u003e\n\n\u003cp\u003eThe headers can be supplied as a pre-encoded string, such as\n“subject=subscribe\u0026amp;cc=address”, or as an Array of Arrays like\u003c/p\u003e\n\u003cdl class=\"rdoc-list label-list\"\u003e\u003cdt\u003e[\u0026#39;subject\u0026#39;, \u0026#39;subscribe\u0026#39;], [\u0026#39;cc\u0026#39;, \u0026#39;address\u0026#39;]\n\u003cdd\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003erequire \u0026#39;uri\u0026#39;\n\nm1 = URI::MailTo.build([\u0026#39;joe@example.com\u0026#39;, \u0026#39;subject=Ruby\u0026#39;])\nputs m1.to_s  -\u0026gt;  mailto:joe@example.com?subject=Ruby\n\nm2 = URI::MailTo.build([\u0026#39;john@example.com\u0026#39;, [[\u0026#39;Subject\u0026#39;, \u0026#39;Ruby\u0026#39;], [\u0026#39;Cc\u0026#39;, \u0026#39;jack@example.com\u0026#39;]]])\nputs m2.to_s  -\u0026gt;  mailto:john@example.com?Subject=Ruby\u0026amp;Cc=jack@example.com\n\nm3 = URI::MailTo.build({:to =\u0026gt; \u0026#39;listman@example.com\u0026#39;, :headers =\u0026gt; [[\u0026#39;subject\u0026#39;, \u0026#39;subscribe\u0026#39;]]})\nputs m3.to_s  -\u0026gt;  mailto:listman@example.com?subject=subscribe\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/check_headers",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the headers \u003ccode\u003ev\u003c/code\u003e component against either\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\n\u003cp\u003eHEADER_REGEXP\u003c/p\u003e\n\u003c/li\u003e\u003c/ul\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/check_to",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003echeck the to \u003ccode\u003ev\u003c/code\u003e component\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/headers",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eE-mail headers set by the URL, as an Array of Arrays\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/headers=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for headers \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eCreates a new URI::MailTo object from generic URL components with no syntax\nchecking.\u003c/p\u003e\n\n\u003cp\u003eThis method is usually called from URI::parse, which checks the validity of\neach component.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidComponentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/set_headers",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for headers \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/set_to",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eprivate setter for to \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/to",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe primary e-mail address of the URL, as a String\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/to=",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003esetter for to \u003ccode\u003ev\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/to_mailtext",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the RFC822 e-mail text equivalent of the URL, as a String.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:ruby-list@ruby-lang.org?Subject=subscribe\u0026amp;cc=myaddr\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_mailtext'\u003eto_mailtext\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;To: ruby-list@ruby-lang.org\\nSubject: subscribe\\nCc: myaddr\\n\\n\\n\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/to_rfc822text",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns the RFC822 e-mail text equivalent of the URL, as a String.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_require'\u003erequire\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026#39;\u003c/span\u003e\u003cspan class='tstring_content'\u003euri\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026#39;\u003c/span\u003e\u003c/span\u003e\n\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003emailto:ruby-list@ruby-lang.org?Subject=subscribe\u0026amp;cc=myaddr\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_uri'\u003euri\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_mailtext'\u003eto_mailtext\u003c/span\u003e\n\u003cspan class='comment'\u003e# =\u0026gt; \u0026quot;To: ruby-list@ruby-lang.org\\nSubject: subscribe\\nCc: myaddr\\n\\n\\n\u0026quot;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/MailTo/$methods/to_s",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs String from URI\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/mailto.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eRFC2396_Parser\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eclass that Parses String\u0026#39;s into URI\u0026#39;s\u003c/p\u003e\n\n\u003cp\u003eIt contains a Hash set of patterns and Regexp\u0026#39;s that match and\nvalidate.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_opts'\u003eopts\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\n\u003cp\u003eThe constructor accepts a hash as options for parser. Keys of options are\npattern names of URI components and values of options are pattern strings.\nThe constructor generates set of regexps for parsing URIs.\u003c/p\u003e\n\n\u003cp\u003eYou can use the following keys:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e* :ESCAPED (URI::PATTERN::ESCAPED in default)\n* :UNRESERVED (URI::PATTERN::UNRESERVED in default)\n* :DOMLABEL (URI::PATTERN::DOMLABEL in default)\n* :TOPLABEL (URI::PATTERN::TOPLABEL in default)\n* :HOSTNAME (URI::PATTERN::HOSTNAME in default)\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Examples\"\u003eExamples\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:ESCAPED\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?:%[a-fA-F0-9]{2}|%u[a-fA-F0-9]{4})\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_u'\u003eu\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.jp/%uABCD\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78cf4f8 URL:http://example.jp/%uABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_u'\u003eu\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; raises URI::InvalidURIError\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/ABCD\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78c3220 URL:http://example.com/ABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78b6d54 URL:http://example.com/ABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_eql?'\u003eeql?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_unsafe'\u003eunsafe\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to make safe\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp to apply. Defaults to \u003ca href=\":UNSAFE\"\u003eself.regexp\u003c/a\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003econstructs a safe String from \u003ccode\u003estr\u003c/code\u003e, removing unsafe characters,\nreplacing them with codes.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_schemes'\u003eschemes\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_schemes'\u003eschemes\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_item'\u003eitem\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_block'\u003eblock\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to search\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eschemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ePatterns to apply to \u003ccode\u003estr\u003c/code\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAttempts to parse and merge a set of URIs If no \u003ccode\u003eblock\u003c/code\u003e given ,\nthen returns the result, else it calls \u003ccode\u003eblock\u003c/code\u003e for each element\nin result.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.make_regexp\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs the default Hash of patterns\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs the default Hash of Regexp\u0026#39;s\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euris\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ean Array of Strings\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAttempts to parse and merge a set of URIs\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns Regexp that is default \u003ca href=\":ABS_URI_REF\"\u003eself.regexp\u003c/a\u003e,\nunless \u003ccode\u003eschemes\u003c/code\u003e is provided. Then it is a Regexp.union with \u003ca\nhref=\":X_ABS_URI\"\u003eself.pattern\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eparses \u003ccode\u003euri\u003c/code\u003e and constructs either matching URI scheme object\n(FTP, HTTP, HTTPS, LDAP, LDAPS, or MailTo) or URI::Generic\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap://ldap.example.com/dc=example?user=john\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::LDAP:0x00000000b9e7e8 URL:ldap://ldap.example.com/dc=example?user=john\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe Hash of patterns.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.initialize_pattern\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe Hash of Regexp\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.initialize_regexp\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a split URI against \u003ca href=\":ABS_URI\"\u003eregexp\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_unsafe'\u003eunsafe\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to remove escapes from\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp to apply. Defaults to \u003ca href=\":ESCAPED\"\u003eself.regexp\u003c/a\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eRemoves escapes from \u003ccode\u003estr\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/escape",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_escape'\u003eescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_unsafe'\u003eunsafe\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to make safe\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp to apply. Defaults to \u003ca href=\":UNSAFE\"\u003eself.regexp\u003c/a\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003econstructs a safe String from \u003ccode\u003estr\u003c/code\u003e, removing unsafe characters,\nreplacing them with codes.\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/extract",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_schemes'\u003eschemes\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_extract'\u003eextract\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_schemes'\u003eschemes\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='lbrace'\u003e{\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e\u003cspan class='id identifier rubyid_item'\u003eitem\u003c/span\u003e\u003cspan class='op'\u003e|\u003c/span\u003e \u003cspan class='id identifier rubyid_block'\u003eblock\u003c/span\u003e \u003cspan class='rbrace'\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to search\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eschemes\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ePatterns to apply to \u003ccode\u003estr\u003c/code\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAttempts to parse and merge a set of URIs If no \u003ccode\u003eblock\u003c/code\u003e given ,\nthen returns the result, else it calls \u003ccode\u003eblock\u003c/code\u003e for each element\nin result.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.make_regexp\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Synopsis\"\u003eSynopsis\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='lbracket'\u003e[\u003c/span\u003e\u003cspan class='id identifier rubyid_opts'\u003eopts\u003c/span\u003e\u003cspan class='rbracket'\u003e]\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\n\u003cp\u003eThe constructor accepts a hash as options for parser. Keys of options are\npattern names of URI components and values of options are pattern strings.\nThe constructor generates set of regexps for parsing URIs.\u003c/p\u003e\n\n\u003cp\u003eYou can use the following keys:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e* :ESCAPED (URI::PATTERN::ESCAPED in default)\n* :UNRESERVED (URI::PATTERN::UNRESERVED in default)\n* :DOMLABEL (URI::PATTERN::DOMLABEL in default)\n* :TOPLABEL (URI::PATTERN::TOPLABEL in default)\n* :HOSTNAME (URI::PATTERN::HOSTNAME in default)\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Examples\"\u003eExamples\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='symbol'\u003e:ESCAPED\u003c/span\u003e \u003cspan class='op'\u003e=\u0026gt;\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003e(?:%[a-fA-F0-9]{2}|%u[a-fA-F0-9]{4})\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_u'\u003eu\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.jp/%uABCD\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78cf4f8 URL:http://example.jp/%uABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_u'\u003eu\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_to_s'\u003eto_s\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; raises URI::InvalidURIError\n\u003c/span\u003e\n\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003ehttp://example.com/ABCD\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\n\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78c3220 URL:http://example.com/ABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_s'\u003es\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::HTTP:0xb78b6d54 URL:http://example.com/ABCD\u0026gt;\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e \u003cspan class='op'\u003e==\u003c/span\u003e \u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; true\n\u003c/span\u003e\u003cspan class='id identifier rubyid_u1'\u003eu1\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_eql?'\u003eeql?\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='id identifier rubyid_u2'\u003eu2\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e \u003cspan class='comment'\u003e#=\u0026gt; false\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize_pattern",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs the default Hash of patterns\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/initialize_regexp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eConstructs the default Hash of Regexp\u0026#39;s\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/join",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euris\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003ean Array of Strings\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eAttempts to parse and merge a set of URIs\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/make_regexp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ereturns Regexp that is default \u003ca href=\":ABS_URI_REF\"\u003eself.regexp\u003c/a\u003e,\nunless \u003ccode\u003eschemes\u003c/code\u003e is provided. Then it is a Regexp.union with \u003ca\nhref=\":X_ABS_URI\"\u003eself.pattern\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/parse",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003euri\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eparses \u003ccode\u003euri\u003c/code\u003e and constructs either matching URI scheme object\n(FTP, HTTP, HTTPS, LDAP, LDAPS, or MailTo) or URI::Generic\u003c/p\u003e\n\n\u003ch2 id=\"label-Usage\"\u003eUsage\u003c/h2\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e \u003cspan class='op'\u003e=\u003c/span\u003e \u003cspan class='const'\u003eURI\u003c/span\u003e\u003cspan class='op'\u003e::\u003c/span\u003e\u003cspan class='const'\u003eParser\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_new'\u003enew\u003c/span\u003e\n\u003cspan class='id identifier rubyid_p'\u003ep\u003c/span\u003e\u003cspan class='period'\u003e.\u003c/span\u003e\u003cspan class='id identifier rubyid_parse'\u003eparse\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e\u003cspan class='tstring'\u003e\u003cspan class='tstring_beg'\u003e\u0026quot;\u003c/span\u003e\u003cspan class='tstring_content'\u003eldap://ldap.example.com/dc=example?user=john\u003c/span\u003e\u003cspan class='tstring_end'\u003e\u0026quot;\u003c/span\u003e\u003c/span\u003e\u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='comment'\u003e#=\u0026gt; #\u0026lt;URI::LDAP:0x00000000b9e7e8 URL:ldap://ldap.example.com/dc=example?user=john\u0026gt;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/pattern",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe Hash of patterns.\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.initialize_pattern\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/regexp",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eThe Hash of Regexp\u003c/p\u003e\n\n\u003cp\u003esee also URI::Parser.initialize_regexp\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/split",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eReturns a split URI against \u003ca href=\":ABS_URI\"\u003eregexp\u003c/a\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_Parser/$methods/unescape",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:call-seq:\u003c/p\u003e\n\n\u003cpre class=\"code ruby\"\u003e\u003ccode class=\"ruby\"\u003e\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\n\u003cspan class='id identifier rubyid_unescape'\u003eunescape\u003c/span\u003e\u003cspan class='lparen'\u003e(\u003c/span\u003e \u003cspan class='id identifier rubyid_str'\u003estr\u003c/span\u003e\u003cspan class='comma'\u003e,\u003c/span\u003e \u003cspan class='id identifier rubyid_unsafe'\u003eunsafe\u003c/span\u003e \u003cspan class='rparen'\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2 id=\"label-Args\"\u003eArgs\u003c/h2\u003e\n\u003cdl class=\"rdoc-list note-list\"\u003e\u003cdt\u003e\u003ccode\u003estr\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eString to remove escapes from\u003c/p\u003e\n\u003c/dd\u003e\u003cdt\u003e\u003ccode\u003eunsafe\u003c/code\u003e\n\u003cdd\u003e\n\u003cp\u003eRegexp to apply. Defaults to \u003ca href=\":ESCAPED\"\u003eself.regexp\u003c/a\u003e\u003c/p\u003e\n\u003c/dd\u003e\u003c/dl\u003e\n\n\u003ch2 id=\"label-Description\"\u003eDescription\u003c/h2\u003e\n\n\u003cp\u003eRemoves escapes from \u003ccode\u003estr\u003c/code\u003e\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_REGEXP",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003eIncludes URI::REGEXP::PATTERN\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC2396_REGEXP/PATTERN",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003ePatterns used to parse URI\u0026#39;s\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/rfc2396_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC3986_Parser",
      "Format": "text/html",
      "Data": "\u003cdiv class='module_header'\u003e\n  \u003cem\u003eclass\u003c/em\u003e \u003cspan class=\"path\"\u003eURI::\u003cstrong\u003eRFC3986_Parser\u003c/strong\u003e\u003c/span\u003e\n  \n\u003c/div\u003e\n\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/join",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/parse",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/RFC3986_Parser/$methods/split",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eInvalidURIError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e",
      "File": "lib/uri/rfc3986_parser.rb",
      "Start": 0,
      "End": 0
    },
    {
      "Path": "URI/Util",
      "Format": "text/html",
      "Data": "\u003cdiv class=\"module_methods\"\u003e\n  \u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\u003cp\u003e:nodoc:\u003c/p\u003e\n\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"module_methods\"\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n    \u003cdiv class=\"method_body\"\u003e\u003cdiv class=\"docstring\"\u003e\n  \u003cdiv class=\"discussion\"\u003e\n    \n\n  \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"tags\"\u003e\n  \n\u003cp class=\"tag_title\"\u003eRaises:\u003c/p\u003e\n\u003cul class=\"raise\"\u003e\n  \n    \u003cli\u003e\n      \n      \n        \u003cspan class='type'\u003e(\u003ctt\u003eArgumentError\u003c/tt\u003e)\u003c/span\u003e\n      \n      \n      \n    \u003c/li\u003e\n  \n\u003c/ul\u003e\n\n\u003c/div\u003e\u003c/div\u003e\n  \n\u003c/div\u003e",
      "File": "lib/uri/common.rb",
      "Start": 0,
      "End": 0
    }
  ]
}

